{"version":3,"file":"planby-pro.cjs.production.min.js","sources":["../src/Epg/styles/global.styles.ts","../src/Epg/helpers/enums.ts","../src/Epg/helpers/variables.ts","../src/Epg/helpers/common.ts","../src/Epg/helpers/layout.ts","../src/Epg/utils/time.ts","../src/Epg/helpers/epg.ts","../src/Epg/helpers/time.ts","../src/Epg/helpers/timeline.ts","../src/Epg/helpers/overlaps.ts","../src/Epg/helpers/drag.ts","../src/Epg/helpers/grid.ts","../src/Epg/styles/Epg.styles.ts","../src/Epg/styles/Channels.styles.ts","../src/Epg/styles/Channel.styles.ts","../src/Epg/styles/Program.styles.ts","../src/Epg/styles/Timeline.styles.ts","../src/Epg/styles/Line.styles.ts","../src/Epg/styles/Loader.styles.ts","../src/Epg/styles/CurrentTime.styles.ts","../src/Epg/styles/Area.styles.ts","../src/Epg/styles/Grid.styles.ts","../src/Epg/theme/theme.ts","../src/Epg/hooks/useEpg.tsx","../src/Epg/hooks/useInterval.tsx","../src/Epg/hooks/useIsTouchDevice.tsx","../src/Epg/hooks/useProgram.tsx","../src/Epg/hooks/useResize.tsx","../src/Epg/hooks/useDrag.tsx","../src/Epg/hooks/useTimeline.tsx","../src/Epg/hooks/useLine.tsx","../src/Epg/hooks/useGridExternalDnD.tsx","../src/Epg/components/GridDividerItem.tsx","../src/Epg/components/GridCellItem.tsx","../src/Epg/components/Grid.tsx","../src/Epg/hooks/useGrid.tsx","../src/Epg/components/Layout.tsx","../src/Epg/components/Program.tsx","../src/Epg/components/Channels.tsx","../src/Epg/helpers/channels.ts","../src/Epg/components/Channel.tsx","../src/Epg/components/CurrentTime.tsx","../src/Epg/hooks/useCurrentTime.tsx","../src/Epg/components/Timeline.tsx","../src/Epg/components/Line.tsx","../src/Epg/helpers/line.ts","../src/Epg/components/Loader.tsx","../src/Epg/components/Areas.tsx","../src/Epg/hooks/useAreas.tsx","../src/Epg/helpers/areas.ts","../src/Epg/Epg.tsx","../src/Epg/index.ts","../src/Epg/hooks/useLayout.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\n\nexport const globalStyles = css`\n  @import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap\");\n\n  .planby {\n    font-family: \"Inter\", system-ui, -apple-system,\n      /* Firefox supports this but not yet system-ui */ \"Segoe UI\", Roboto,\n      Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\"; /* 2 */\n  }\n`;\n","export enum Layers {\n  Sidebar = 9,\n  EpgCornerBox = 10,\n  Line = 9,\n  Loader = 12,\n  Program = 1,\n  Timeline = 9,\n  Area = 2,\n}\n","// Dimensions\nexport const DAY_WIDTH = 7200;\nexport const HOURS_IN_DAY = 24;\n\nexport const HOUR_IN_MINUTES = 60;\nexport const SECONDS_IN_MINUTE = 60;\n\nexport const TIMELINE_HEIGHT = 60;\nexport const TIMELINE_HEIGHT_MODERN_STYLE = 80;\nexport const TIMELINE_WIDTH_VERTICAL = 70;\nexport const TIMELINE_DIVIDERS = 4;\n\nexport const SIDEBAR_WIDTH = 100;\nexport const ITEM_HEIGHT = 80;\n\nexport const ITEM_OVERSCAN = ITEM_HEIGHT;\n\n// Debounce\nexport const DEBOUNCE_WAIT = 100;\nexport const DEBOUNCE_WAIT_MAX = 100;\n\n// Live refresh time\nexport const LIVE_REFRESH_TIME = 120;\n\n// Theme\nexport const THEME_MODE = {\n  DARK: \"dark\",\n  LIGHT: \"light\",\n};\n\nexport const TIME_FORMAT = {\n  DEFAULT: \"yyyy-MM-dd HH:mm:ss\",\n  DATE: \"yyyy-MM-dd\",\n  DAY: \"EEE\",\n  DAY_DATE: \"dd\",\n  MONTH: \"LLL\",\n  DAY_MONTH: \"dd.MM\",\n  BASE_DAY_MONTH: \"MM/dd\",\n  HOURS_MIN: \"HH:mm\",\n  BASE_HOURS_TIME: \"h:mm a\",\n  YEAR: \"yyyy\",\n};\n\n// Overlap mode\nexport const OVERLAP_MODES = {\n  STACK: \"stack\",\n  LAYER: \"layer\",\n};\n\n// Timezone mode\nexport const TIMEZONE_MODES = {\n  UTC_TO_ZONED_TIME: \"utc\",\n};\n","import { useLayoutEffect, useEffect } from \"react\";\nimport {\n  Interval,\n  isToday as isTodayFns,\n  format,\n  differenceInHours,\n  differenceInDays,\n  startOfDay,\n  eachDayOfInterval,\n  eachMonthOfInterval,\n  differenceInMonths,\n  startOfMonth,\n  addMonths,\n} from \"date-fns\";\nimport { toDate } from \"date-fns-tz\";\n\n// Import interfaces\nimport {\n  HoursInDayDiffTime,\n  Mode,\n  Overlap,\n  ProgramOverlaps,\n} from \"./interfaces\";\n\n// Import types\nimport { ProgramItem } from \"./types\";\n\n// Import variables\nimport { HOURS_IN_DAY, OVERLAP_MODES, TIME_FORMAT } from \"./variables\";\n\ntype DateTime = string | number | Date;\n\ntype OmitObjectType = { [key: string]: any };\nexport const omit = (obj: OmitObjectType, ...props: string[]) => {\n  const result = { ...obj };\n\n  for (const property of props) {\n    delete result[property];\n  }\n\n  return result;\n};\n\nexport const generateArray = (num: number) => new Array(num).fill(\"\");\n\ninterface OverlapProgramOptions {\n  isVerticalMode: boolean;\n  program: ProgramItem;\n  programOverlaps: ProgramOverlaps;\n  layerOverlapLevel: number;\n  overlap: Overlap;\n  overlapMode: Overlap[\"mode\"];\n}\nconst getOverlapProgramOptions = ({\n  isVerticalMode,\n  program,\n  programOverlaps,\n  layerOverlapLevel,\n  overlapMode,\n}: OverlapProgramOptions) => {\n  const { data, position } = program;\n  const linkedProgramOverlaps = programOverlaps[data.channelUuid];\n\n  if (linkedProgramOverlaps) {\n    const programOverlapIndex = linkedProgramOverlaps.findIndex(\n      (element) => element.data.id === data.id\n    );\n    const overlapProgram = linkedProgramOverlaps[programOverlapIndex];\n\n    if (overlapProgram) {\n      if (\n        overlapMode === OVERLAP_MODES.LAYER &&\n        overlapProgram.data.channelPosition.top < overlapProgram.position.top\n      ) {\n        let newTop = overlapProgram.position.top * layerOverlapLevel;\n        if (overlapProgram.data.channelPosition.top !== 0) {\n          newTop =\n            overlapProgram.data.channelPosition.top +\n            Math.abs(\n              overlapProgram.data.channelPosition.top -\n                overlapProgram.position.top\n            ) *\n              layerOverlapLevel;\n        }\n\n        let position = {\n          ...overlapProgram.position,\n          top: newTop,\n        };\n\n        if (isVerticalMode) {\n          position = switchPosition({\n            ...overlapProgram.position,\n            top: newTop,\n          });\n        }\n\n        return {\n          ...program,\n          isOverlap: true,\n          position,\n        };\n      }\n\n      return {\n        ...program,\n        position: isVerticalMode\n          ? switchPosition(overlapProgram.position)\n          : overlapProgram.position,\n      };\n    } else {\n      return {\n        ...program,\n        position,\n      };\n    }\n  }\n  const { width, height, top, left } = position;\n  return {\n    ...program,\n    position: { width, height, top, left },\n  };\n};\n\nexport const getProgramOptions = ({\n  isVerticalMode,\n  program,\n  overlap,\n  ...rest\n}: OverlapProgramOptions) => {\n  if (overlap.enabled) {\n    return getOverlapProgramOptions({\n      isVerticalMode,\n      program,\n      overlap,\n      ...rest,\n    });\n  }\n\n  const { width, height, top, left } = program.position;\n  return {\n    ...program,\n    position: { width, height, top, left },\n  };\n};\n\nexport const useIsomorphicLayoutEffect = () =>\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport const getHourWidth = (dayWidth: number) => dayWidth / HOURS_IN_DAY;\n\nexport const getDate = (date: DateTime) => new Date(date);\n\nconst abs = (num: number) => Math.abs(num);\ninterface DayWidth {\n  dayWidth: number;\n  startDate: DateTime;\n  endDate: DateTime;\n  hoursInDays: HoursInDayDiffTime[];\n  modeType: Mode[\"type\"];\n}\nexport const getDayWidthResources = ({\n  dayWidth,\n  startDate,\n  endDate,\n  hoursInDays,\n  modeType,\n}: DayWidth) => {\n  const defaultOptions = {\n    hourWidth: 0,\n    numberOfMonths: 0,\n    numberOfHoursInDay: 0,\n    monthWidth: 0,\n    offsetStartHoursRange: 0,\n    dayWidth: 0,\n  };\n\n  const startDateTime = new Date(startDate);\n  const endDateTime = new Date(endDate);\n\n  if (endDateTime < startDateTime) {\n    console.error(\n      `Invalid endDate property. Value of endDate must be greater than startDate. Props: startDateTime: ${startDateTime}, endDateTime: ${endDateTime}`\n    );\n  }\n  if (modeType === \"week\" || modeType === \"month\") {\n    const endOfMonthTime = startOfMonth(addMonths(endDateTime, 1));\n    const numberOfMonthInMonthMode = differenceInMonths(\n      endOfMonthTime,\n      startDateTime\n    );\n\n    const numberOfDaysInWeekMode = differenceInDays(endDateTime, startDateTime);\n    const dayWidthInWeekMode = Math.floor(dayWidth / numberOfDaysInWeekMode);\n    const hourWidth = dayWidthInWeekMode / HOURS_IN_DAY;\n    const newDayWidthInWeekMode =\n      hourWidth * HOURS_IN_DAY * numberOfDaysInWeekMode;\n\n    return {\n      ...defaultOptions,\n      hourWidth: abs(hourWidth),\n      dayWidth: abs(newDayWidthInWeekMode),\n      numberOfMonths: numberOfMonthInMonthMode,\n    };\n  }\n\n  if (hoursInDays.length > 0) {\n    const numberOfHoursInDay = hoursInDays.reduce(\n      (acc, curr) => acc + curr.diffInHours,\n      0\n    );\n    const hourWidth = dayWidth / numberOfHoursInDay;\n    const newDayWidth = hourWidth * numberOfHoursInDay;\n\n    return {\n      ...defaultOptions,\n      hourWidth: abs(hourWidth),\n      dayWidth: abs(newDayWidth),\n      numberOfHoursInDay: abs(numberOfHoursInDay),\n    };\n  }\n\n  const offsetStartHoursRange = differenceInHours(\n    startDateTime,\n    startOfDay(startDateTime)\n  );\n\n  const numberOfHoursInDay = differenceInHours(endDateTime, startDateTime);\n  const hourWidth = Math.floor(dayWidth / numberOfHoursInDay);\n  const newDayWidth = hourWidth * numberOfHoursInDay;\n\n  return {\n    ...defaultOptions,\n    hourWidth: abs(hourWidth),\n    dayWidth: abs(newDayWidth),\n    numberOfHoursInDay: abs(numberOfHoursInDay),\n    offsetStartHoursRange: abs(offsetStartHoursRange),\n  };\n};\n\nconst convertDate = (date: DateTime) => {\n  const newDate = (date as string).replace(/T.*/, \"\");\n  return toDate(newDate);\n};\n\nexport const getDayResources = ({\n  startDate,\n  endDate,\n  modeType,\n}: Pick<DayWidth, \"startDate\" | \"endDate\" | \"modeType\">) => {\n  const startDateFormat = format(convertDate(startDate), TIME_FORMAT.DATE);\n  const endDateFormat = format(convertDate(endDate), TIME_FORMAT.DATE);\n\n  const modeIncrementValue = modeType === \"day\" ? 1 : 0;\n  const diffDays =\n    differenceInDays(toDate(endDateFormat), toDate(startDateFormat)) +\n    modeIncrementValue;\n\n  const startToEndInterval: Interval = {\n    start: new Date(startDate),\n    end: new Date(endDate),\n  };\n\n  const days = eachDayOfInterval(startToEndInterval).map((day) =>\n    format(day, TIME_FORMAT.DATE)\n  );\n\n  const months = eachMonthOfInterval(startToEndInterval).map((day) =>\n    format(day, TIME_FORMAT.DATE)\n  );\n\n  const dates = days.map((day) => isTodayFns(toDate(day)));\n  let isToday = dates.some((day) => day === true);\n  let currentDate = days[dates.indexOf(true)];\n\n  return {\n    isToday,\n    currentDate,\n    numberOfDays: diffDays,\n    days,\n    months,\n  };\n};\n\nexport const switchPosition = (programPosition: ProgramItem[\"position\"]) => ({\n  ...programPosition,\n  top: programPosition.left,\n  left: programPosition.top,\n  width: programPosition.height,\n  height: programPosition.width,\n});\n\nexport function generateUUID() {\n  // Generate a random hexadecimal string with the specified length\n  const generateRandomHex = (length: number) => {\n    let result = \"\";\n    const characters = \"abcdef0123456789\";\n\n    for (let i = 0; i < length; i++) {\n      result += characters[Math.floor(Math.random() * characters.length)];\n    }\n\n    return result;\n  };\n\n  // Format a UUID string according to the version 4 UUID format\n  const formatUUID = (parts: string[]) => {\n    return `${parts[0]}-${parts[1]}-4${parts[2].substring(1)}-${\n      \"89ab\"[Math.floor(Math.random() * 4)]\n    }${parts[3].substring(1)}-${parts[4]}`;\n  };\n\n  // Generate the parts of the UUID\n  const parts = [\n    generateRandomHex(8),\n    generateRandomHex(4),\n    \"89ab\"[(Math.random() * 4) | 0] + generateRandomHex(3),\n    \"89ab\"[(Math.random() * 4) | 0] + generateRandomHex(3),\n    generateRandomHex(12),\n  ];\n\n  // Return the formatted UUID\n  return formatUUID(parts);\n}\n","// Import interfaces\nimport { ChannelWithOmittedUuid, Timezone } from \"./interfaces\";\n// Import types\nimport { ChannelWithPosition, ProgramWithPosition } from \"./types\";\n\ntype LayoutScreenClone = Record<string, Record<string, ProgramWithPosition>>;\n\nlet LayoutScreenCloneCache = {} as LayoutScreenClone;\n\nconst setChannel = (event: ProgramWithPosition) => {\n  const isChannel = LayoutScreenCloneCache[event.data.channelUuid];\n  if (!isChannel) {\n    LayoutScreenCloneCache[event.data.channelUuid] = {};\n    return LayoutScreenCloneCache;\n  }\n  return LayoutScreenCloneCache;\n};\n\nconst updateLayoutScreenCloneElement = (data: LayoutScreenClone) =>\n  (LayoutScreenCloneCache = data);\n\nexport const setLayoutScreenCloneElement = (\n  event: ProgramWithPosition,\n  index: number\n) => {\n  const channels = setChannel(event);\n  const program = channels[event.data.channelUuid][event.data.id];\n  if (!program) {\n    event[\"data\"].index = index;\n    channels[event.data.channelUuid][event.data.id] = event;\n  }\n  updateLayoutScreenCloneElement(channels);\n};\n\nexport const deleteLayoutScreenCloneElement = (event: ProgramWithPosition) => {\n  const channels = setChannel(event);\n  const program = channels[event.data.channelUuid][event.data.id];\n  if (program) {\n    delete channels[event.data.channelUuid][event.data.id];\n  }\n  updateLayoutScreenCloneElement(channels);\n};\n\nexport const getLayoutScreenCloneElements = () => LayoutScreenCloneCache;\nexport const resetLayoutScreenCloneElements: () => void = () =>\n  (LayoutScreenCloneCache = {} as LayoutScreenClone);\n\nexport const getChannelsContentHeight = (channels: ChannelWithPosition[]) =>\n  channels.reduce((acc, channel) => (acc += channel.position.height), 0);\n\n// Channel epg indexes\ntype ChannelEpgIndex = Record<\n  string,\n  { uuid: string; first: number; last: number }\n>;\nlet channelEpgIndexesCache = {} as ChannelEpgIndex;\n\nexport const setChannelEpgIndexes = ({\n  uuid,\n  first = 0,\n  last = 0,\n}: {\n  uuid: string;\n  first?: number;\n  last?: number;\n}) => {\n  channelEpgIndexesCache[uuid] = {\n    first,\n    last,\n    uuid,\n  };\n};\nexport const getChannelEpgIndexes = (uuid: string) => {\n  return channelEpgIndexesCache[uuid];\n};\n\nexport const resetChannelsEpgIndexes: () => void = () =>\n  (channelEpgIndexesCache = {} as ChannelEpgIndex);\n\n// Channels group tree\ntype ChannelGroupTree = Record<\n  string,\n  {\n    isOpen: boolean;\n    uuid: string;\n    groupTree: boolean;\n    nestedChildren?: string[];\n  }\n>;\nlet channelsGroupTreeCache = {} as ChannelGroupTree;\n\nexport const setChannelGroupTree = (channel: ChannelWithOmittedUuid) => {\n  channelsGroupTreeCache[channel.uuid as string] = {\n    uuid: channel.uuid as string,\n    isOpen: channel.isOpen,\n    groupTree: channel.groupTree,\n  };\n};\n\nexport const setChannelGroupTreeNestedChildren = (\n  channelUuid: string,\n  nestedChildUuid: string\n) => {\n  const channel = channelsGroupTreeCache[channelUuid as string];\n  channelsGroupTreeCache[channelUuid as string] = {\n    ...channel,\n    nestedChildren: [...(channel.nestedChildren ?? []), nestedChildUuid],\n  };\n};\n\nexport const getChannelsGroupTree = () => channelsGroupTreeCache;\n\n// Timezones\nlet timezoneOptionsCache = { enabled: false, zone: \"\", mode: \"\" } as Timezone;\n\nexport const setTimezoneOptionsCache = (props: Timezone) => {\n  timezoneOptionsCache = props;\n};\nexport const getTimezoneOptionsCache = () => {\n  return timezoneOptionsCache;\n};\n\nexport const resetTimezoneOptionsCache: () => void = () =>\n  (timezoneOptionsCache = {} as Timezone);\n","import {\n  format as fnsFormat,\n  //   differenceInHours as fnsDifferenceInHours,\n  //   differenceInMinutes as fnsDifferenceInMinutes,\n} from \"date-fns\";\nimport {\n  format as tzFormat,\n  utcToZonedTime,\n  zonedTimeToUtc,\n} from \"date-fns-tz\";\nimport {\n  TIMEZONE_MODES,\n  TIME_FORMAT,\n  getTimezoneOptionsCache,\n} from \"../helpers\";\n\nexport const getNewDateTimeTz = (date: Date | string | number) => {\n  const timezone = getTimezoneOptionsCache();\n  const newDate = new Date(date);\n\n  if (timezone.enabled && timezone.mode === TIMEZONE_MODES.UTC_TO_ZONED_TIME) {\n    const zonedTime = utcToZonedTime(newDate, timezone.zone);\n    return zonedTime.getTime();\n  }\n\n  return newDate.getTime();\n};\n\nexport const getNewDateTz = (date?: Date | string | number) => {\n  const timezone = getTimezoneOptionsCache();\n  const newDate = date ? new Date(date) : new Date();\n\n  if (timezone.enabled && timezone.mode === TIMEZONE_MODES.UTC_TO_ZONED_TIME) {\n    const zonedTime = utcToZonedTime(newDate, timezone.zone);\n    return zonedTime;\n  }\n\n  return newDate;\n};\n\nexport const formatTz = (\n  date: Date | number,\n  formatTime: string = TIME_FORMAT.DEFAULT\n) => {\n  const timezone = getTimezoneOptionsCache();\n  if (timezone.enabled && timezone.mode === TIMEZONE_MODES.UTC_TO_ZONED_TIME) {\n    const zonedTime = utcToZonedTime(date, timezone.zone);\n    const formattedZonedTime = tzFormat(zonedTime, formatTime, {\n      timeZone: timezone.zone,\n    });\n    return formattedZonedTime;\n  }\n\n  return fnsFormat(date, formatTime);\n};\n\nexport const zonedDateTimeToUtc = (date: Date) => {\n  const timezone = getTimezoneOptionsCache();\n  if (timezone.enabled && timezone.mode === TIMEZONE_MODES.UTC_TO_ZONED_TIME) {\n    const zonedTime = zonedTimeToUtc(date, timezone.zone);\n    return zonedTime;\n  }\n\n  return date;\n};\n","import { differenceInMinutes, getTime, endOfDay, addDays } from \"date-fns\";\n// Import interfaces\nimport {\n  Channel,\n  ChannelWithOmittedUuid,\n  HoursInDayDiffTime,\n  Mode,\n  Program,\n  ProgramWithOmittedUuid,\n} from \"./interfaces\";\n\n// Import types\nimport {\n  ProgramWithPosition,\n  Position,\n  DateTime,\n  ChannelWithPosition,\n} from \"./types\";\n\n// Import variables\nimport { HOUR_IN_MINUTES, OVERLAP_MODES, TIME_FORMAT } from \"./variables\";\n\n// Import helpers\nimport {\n  roundToMinutes,\n  isYesterday as isYesterdayTime,\n  formatTimeTz,\n} from \"./time\";\nimport { generateUUID, getDate } from \"./common\";\nimport {\n  getChannelsGroupTree,\n  setChannelEpgIndexes,\n  setChannelGroupTree,\n  setChannelGroupTreeNestedChildren,\n} from \"./layout\";\nimport { formatTz } from \"../utils/time\";\n\n// -------- Program width --------\nconst getItemDiffWidth = (diff: number, hourWidth: number) =>\n  (diff * hourWidth) / HOUR_IN_MINUTES;\n\nexport const getPositionX = (\n  since: DateTime,\n  till: DateTime,\n  startDate: DateTime,\n  endDate: DateTime,\n  hourWidth: number\n) => {\n  const isTomorrow = getTime(getDate(till)) > getTime(getDate(endDate));\n  const isYesterday = getTime(getDate(since)) < getTime(getDate(startDate));\n\n  // When time range is set to 1 hour and program time is greater than 1 hour\n  if (isYesterday && isTomorrow) {\n    const diffTime = differenceInMinutes(\n      roundToMinutes(getDate(endDate)),\n      getDate(startDate)\n    );\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  if (isYesterday) {\n    const diffTime = differenceInMinutes(\n      roundToMinutes(getDate(till)),\n      getDate(startDate)\n    );\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  if (isTomorrow) {\n    const diffTime = differenceInMinutes(\n      getDate(endDate),\n      roundToMinutes(getDate(since))\n    );\n\n    if (diffTime < 0) return 0;\n    return getItemDiffWidth(diffTime, hourWidth);\n  }\n\n  const diffTime = differenceInMinutes(\n    roundToMinutes(getDate(till)),\n    roundToMinutes(getDate(since))\n  );\n\n  return getItemDiffWidth(diffTime, hourWidth);\n};\n\n// -------- Channel position in the Epg --------\nexport const getChannelPosition = (\n  channelIndex: number,\n  itemHeight: number\n) => {\n  const top = itemHeight * channelIndex;\n  const position = {\n    top,\n    height: itemHeight,\n  };\n  return position;\n};\n// -------- Program position in the Epg --------\nexport const getProgramPosition = (\n  program: Program,\n  channelIndex: number,\n  itemHeight: number,\n  hourWidth: number,\n  startDate: DateTime,\n  endDate: DateTime,\n  isVerticalMode: boolean\n) => {\n  const item = {\n    ...program,\n    since: formatTimeTz(program.since),\n    till: formatTimeTz(program.till),\n  };\n\n  const isYesterday = isYesterdayTime(item.since, startDate);\n\n  let width = getPositionX(\n    item.since,\n    item.till,\n    startDate,\n    endDate,\n    hourWidth\n  );\n  const top = itemHeight * channelIndex;\n  let left = getPositionX(startDate, item.since, startDate, endDate, hourWidth);\n  const edgeEnd = getPositionX(\n    startDate,\n    item.till,\n    startDate,\n    endDate,\n    hourWidth\n  );\n\n  if (isYesterday) left = 0;\n  // If item has negative top position, it means that it is not visible in this day\n  if (top < 0) width = 0;\n\n  let position = {\n    width,\n    height: itemHeight,\n    top,\n    left,\n    edgeEnd,\n  };\n\n  if (isVerticalMode) {\n    position = {\n      ...position,\n      top: left,\n      left: top,\n      width: itemHeight,\n      height: width,\n    };\n  }\n  return { position, data: item };\n};\n\n// -------- Program position with day hours --------\ninterface ProgramPositionWithDayHours {\n  isVerticalMode: boolean;\n  hoursInDays: HoursInDayDiffTime[];\n  position: ProgramWithPosition[\"position\"];\n  since: string;\n  hourWidth: number;\n}\nconst getProgramPositionWithDayHours = ({\n  isVerticalMode,\n  hoursInDays,\n  position,\n  since,\n  hourWidth,\n}: ProgramPositionWithDayHours) => {\n  const day = hoursInDays.find((day) => since.includes(day.date));\n  if (!day) return { position };\n\n  if (isVerticalMode) {\n    const diffHours = day.diffLeft * hourWidth;\n    const top = position.top - diffHours;\n    const edgeEnd = position.edgeEnd - diffHours;\n    return { ...position, top, edgeEnd };\n  }\n\n  const diffHours = day.diffLeft * hourWidth;\n  const left = position.left - diffHours;\n  const edgeEnd = position.edgeEnd - diffHours;\n  return { ...position, left, edgeEnd };\n};\n\n// -------- Converted programs with position data --------\ninterface ConvertedPrograms {\n  isVerticalMode: boolean;\n  isOverlapEnabled: boolean;\n  programChannelMapKey: string;\n  data: ProgramWithOmittedUuid[];\n  channels: Channel[];\n  startDate: DateTime;\n  endDate: DateTime;\n  itemHeight: number;\n  hourWidth: number;\n  hoursInDays: HoursInDayDiffTime[];\n}\nexport const getConvertedPrograms = ({\n  isVerticalMode,\n  isOverlapEnabled,\n  programChannelMapKey,\n  data,\n  channels,\n  startDate,\n  endDate,\n  itemHeight,\n  hourWidth,\n  hoursInDays,\n}: ConvertedPrograms) => {\n  let first = 0;\n  return data.map((next, index, arr) => {\n    next[\"channelUuid\"] = next[programChannelMapKey];\n\n    if (arr[index - 1]?.[programChannelMapKey] !== next[programChannelMapKey]) {\n      first = index;\n      setChannelEpgIndexes({ uuid: next[programChannelMapKey], first });\n    }\n    if (next[programChannelMapKey] !== arr[index + 1]?.[programChannelMapKey]) {\n      setChannelEpgIndexes({\n        uuid: next[programChannelMapKey],\n        first,\n        last: index,\n      });\n    } else {\n      setChannelEpgIndexes({\n        uuid: next[programChannelMapKey],\n        first,\n        last: index,\n      });\n    }\n\n    const channelIndex = channels.findIndex(\n      ({ uuid }) => uuid === next.channelUuid\n    );\n\n    next[\"channelIndex\"] = channelIndex;\n    next[\"channelPosition\"] = channels[channelIndex]?.position;\n    next[\"index\"] = index;\n\n    // Group tree\n    if (channels[channelIndex]?.parentChannelUuid) {\n      next[\"parentChannelUuid\"] = channels[channelIndex]?.parentChannelUuid;\n    }\n\n    const programData = getProgramPosition(\n      next as Program,\n      channelIndex,\n      itemHeight,\n      hourWidth,\n      startDate,\n      endDate,\n      isVerticalMode\n    );\n\n    if (isOverlapEnabled && channelIndex > 0) {\n      const { position } = channels[channelIndex - 1];\n      const newPositionTop = position.top + position.height;\n      if (isVerticalMode) {\n        programData.position.left = newPositionTop;\n      } else {\n        programData.position.top = newPositionTop;\n      }\n    }\n\n    if (hoursInDays.length === 0) return programData;\n\n    const newPosition = getProgramPositionWithDayHours({\n      isVerticalMode,\n      hoursInDays,\n      position: programData.position,\n      since: programData.data.since,\n      hourWidth,\n    }) as ProgramWithPosition[\"position\"];\n\n    programData[\"position\"] = newPosition;\n\n    return programData;\n  }, [] as ProgramWithPosition[]);\n};\n\n// -------- Converted channels with position data --------\n\nexport const getConvertedChannels = (\n  isOverlapEnabled: boolean,\n  overlapMode: string,\n  layerOverlapLevel: number,\n  channels: ChannelWithOmittedUuid[],\n  itemHeight: number,\n  channelMapKey: string,\n  channelOverlapsCount: Record<string, number>\n) => {\n  let top = 0;\n  const isStackMode = overlapMode === OVERLAP_MODES.STACK;\n  const isLayerMode = overlapMode === OVERLAP_MODES.LAYER;\n  return channels.reduce((acc, channel, index) => {\n    const overlap = channelOverlapsCount[channel[channelMapKey]];\n\n    // Check channels group tree\n    if (channel.groupTree && channel.uuid) {\n      setChannelGroupTree(channel);\n    }\n\n    const channelsGroupTree = getChannelsGroupTree();\n    const channelGroupTree = channelsGroupTree[channel.parentChannelUuid];\n    // if parent channel is closed, skip this channel\n    if (channelGroupTree && channel.parentChannelUuid) {\n      setChannelGroupTreeNestedChildren(\n        channelGroupTree.uuid,\n        channel.uuid as string\n      );\n      channel[\"isNestedChild\"] = true;\n      if (!channelGroupTree?.isOpen) return acc;\n    } else {\n      channel[\"isNestedChild\"] = false;\n    }\n\n    let largestSizeLength = 1;\n    const overlapsLength = overlap ?? 0;\n\n    if (\n      isOverlapEnabled &&\n      (isStackMode || isLayerMode) &&\n      overlapsLength > 0\n    ) {\n      largestSizeLength = overlap;\n    }\n\n    const position = getChannelPosition(index, itemHeight * largestSizeLength);\n\n    if (isOverlapEnabled && isStackMode) {\n      position.top = top;\n      top = top + position.height;\n    }\n\n    if (isOverlapEnabled && isLayerMode) {\n      if (overlapsLength > 0) {\n        position.top = top;\n        position.height =\n          overlapsLength <= 1\n            ? position.height\n            : itemHeight * layerOverlapLevel * (overlapsLength - 1) +\n              itemHeight;\n        top = top + position.height;\n      } else {\n        position.top = top;\n        top = top + position.height;\n      }\n    }\n\n    const item = {\n      ...channel,\n      uuid: channel[channelMapKey],\n      index,\n      position,\n    } as ChannelWithPosition;\n    acc.push(item);\n    return acc;\n  }, [] as ChannelWithPosition[]);\n};\n\n// -------- Dynamic virtual program visibility in the EPG --------\ninterface ItemVisibility {\n  position: Position;\n  scrollY: number;\n  scrollX: number;\n  containerHeight: number;\n  containerWidth: number;\n  isVerticalMode: boolean;\n  itemOverscan: number;\n  overlapsCount: number;\n}\nexport const getItemVisibility = ({\n  position,\n  scrollY,\n  scrollX,\n  containerHeight,\n  containerWidth,\n  itemOverscan,\n  overlapsCount,\n  isVerticalMode,\n}: ItemVisibility) => {\n  // Set item visibility for vertical mode\n  const _overlapsCount = overlapsCount === 0 ? 1 : overlapsCount;\n  if (isVerticalMode) {\n    if (position.height <= 0) {\n      return false;\n    }\n\n    if (scrollX > position.left + position.width * 2 * _overlapsCount) {\n      return false;\n    }\n\n    if (scrollX + containerWidth <= position.left) {\n      return false;\n    }\n\n    if (\n      scrollY + containerHeight >= position.top &&\n      scrollY <= position.edgeEnd\n    ) {\n      return true;\n    }\n  } else {\n    // Set item visibility for horizontal mode\n    if (position.width <= 0) {\n      return false;\n    }\n\n    if (scrollY > position.top + itemOverscan * 3 * _overlapsCount) {\n      return false;\n    }\n\n    if (scrollY + containerHeight <= position.top) {\n      return false;\n    }\n\n    if (\n      scrollX + containerWidth >= position.left &&\n      scrollX <= position.edgeEnd\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\ninterface SidebarItemVisibility {\n  isVerticalMode: boolean;\n  itemOverscan: number;\n  position: Pick<Position, \"top\" | \"height\"> & Partial<Pick<Position, \"left\">>;\n  scrollX: number;\n  scrollY: number;\n  containerHeight: number;\n  containerWidth: number;\n}\nexport const getSidebarItemVisibility = ({\n  position,\n  scrollX,\n  scrollY,\n  containerHeight,\n  containerWidth,\n  itemOverscan,\n  isVerticalMode,\n}: SidebarItemVisibility) => {\n  // Set item visibility for vertical mode\n  if (isVerticalMode) {\n    const left = (position.left as number) + position.height;\n    if (scrollX > left + itemOverscan * 3) {\n      return false;\n    }\n\n    if (scrollX + containerWidth <= left - position.height) {\n      return false;\n    }\n  } else {\n    // Set item visibility for horizontal mode\n    if (scrollY > position.top + position.height + itemOverscan * 3) {\n      return false;\n    }\n\n    if (scrollY + containerHeight <= position.top) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\ninterface TimelineItemVisibility {\n  position: Pick<Position, \"left\" | \"width\">;\n  scrollY: number;\n  scrollX: number;\n  containerWidth: number;\n  containerHeight: number;\n  isVerticalMode: boolean;\n}\nexport const getTimelineItemVisibility = ({\n  position,\n  scrollY,\n  scrollX,\n  containerHeight,\n  containerWidth,\n  isVerticalMode,\n}: TimelineItemVisibility) => {\n  // Set item visibility for vertical mode\n  if (isVerticalMode) {\n    if (scrollY > position.left + position.width * 2) {\n      return false;\n    }\n\n    if (scrollY + containerHeight <= position.left) {\n      return false;\n    }\n  } else {\n    // Set item visibility for horizontal mode\n    if (scrollX > position.left + position.width * 2) {\n      return false;\n    }\n\n    if (scrollX + containerWidth <= position.left) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const setUpdatedLayoutItem = (\n  data: ProgramWithOmittedUuid,\n  modeType: Mode[\"type\"]\n) => {\n  const id = generateUUID();\n  const since = `${data.date} ${data.since}`;\n  let till = `${data.date} ${data.till}`;\n\n  if (modeType === \"week\") {\n    till = formatTz(endOfDay(new Date(till)), TIME_FORMAT.DEFAULT);\n  } else if (modeType === \"month\") {\n    till = formatTz(addDays(endOfDay(new Date(till)), 20), TIME_FORMAT.DEFAULT);\n  }\n\n  return { id, title: \"\", image: \"\", ...data, since, till };\n};\n","import {\n  format,\n  roundToNearestMinutes,\n  startOfDay,\n  addDays,\n  differenceInHours,\n  isWithinInterval,\n} from \"date-fns\";\nimport { toDate } from \"date-fns-tz\";\n// Import common helpers\nimport { getDate } from \"./common\";\n// Import interfaces\nimport { HoursInDay, HoursInDayDiffTime, Mode } from \"./interfaces\";\n// Import types\nimport { DateTime as DateRangeTime } from \"./types\";\n// Variables\nimport { TIME_FORMAT } from \"./variables\";\nimport { getPositionX } from \"./epg\";\nimport { formatTz, getNewDateTimeTz, getNewDateTz } from \"../utils/time\";\n\ntype DateTime = number | string | Date;\n\nconst getTime = (date: DateTime) => toDate(date).getTime();\n\nexport const getLiveStatus = (since: DateTime, till: DateTime) => {\n  const nowTime = getNewDateTimeTz(getNewDateTz());\n  const sinceTime = getNewDateTimeTz(since);\n  const sinceTill = getNewDateTimeTz(till);\n  return nowTime >= sinceTime && sinceTill > nowTime;\n};\n\nexport const formatTime = (date: DateTime) =>\n  format(new Date(date), TIME_FORMAT.DEFAULT).replace(/\\s/g, \"T\");\n\nexport const formatTimeTz = (date: DateTime) =>\n  formatTz(new Date(date), TIME_FORMAT.DEFAULT).replace(/\\s/g, \"T\");\n\nexport const roundToMinutes = (date: DateTime) =>\n  roundToNearestMinutes(new Date(date));\n\nexport const isYesterday = (since: DateTime, startDate: DateTime) => {\n  const sinceTime = getTime(new Date(since));\n  const startDateTime = getTime(new Date(startDate));\n\n  return startDateTime > sinceTime;\n};\n\nexport const isFutureTime = (date: DateTime) => {\n  const dateTime = getTime(new Date(date));\n  const now = getTime(new Date());\n  return dateTime > now;\n};\n\nexport const getTimeRangeDates = (\n  startDate: DateRangeTime,\n  endDate: DateRangeTime\n) => {\n  let endDateValue = endDate;\n  if (endDate === \"\") {\n    endDateValue = formatTime(startOfDay(addDays(getDate(startDate), 1)));\n  }\n\n  return { startDate, endDate: endDateValue };\n};\n\ninterface FormatWeekMonthDate {\n  date: string;\n  mode: Mode;\n  isBaseTimeFormat: boolean;\n}\nexport const getFormattedWeekMonthDate = ({\n  date,\n  mode,\n  isBaseTimeFormat,\n}: FormatWeekMonthDate) => {\n  if (mode.type === \"week\") {\n    if (mode.style === \"modern\") {\n      return format(toDate(date), TIME_FORMAT.DAY_DATE);\n    }\n    const dateFormat = isBaseTimeFormat\n      ? TIME_FORMAT.BASE_DAY_MONTH\n      : TIME_FORMAT.DAY_MONTH;\n    return format(toDate(date), dateFormat);\n  }\n\n  return format(toDate(date), TIME_FORMAT.MONTH);\n};\n\ninterface NumberOfHoursInDays {\n  startDate: DateRangeTime;\n  customHoursInDays: HoursInDay[];\n}\nexport const getNumberOfHoursInDays = ({\n  startDate,\n  customHoursInDays,\n}: NumberOfHoursInDays) => {\n  if (customHoursInDays.length === 0) return [];\n  let itemsDiffInHours = 0;\n  const data = customHoursInDays.reduce((acc, item) => {\n    let diffLeft = 0;\n    const prevItem = acc[acc.length - 1];\n    if (!prevItem) {\n      diffLeft = differenceInHours(\n        getDate(item.startTimeHour),\n        getDate(startDate)\n      );\n    }\n    if (prevItem) {\n      diffLeft = differenceInHours(\n        getDate(item.startTimeHour),\n        getDate(prevItem.endTimeHour)\n      );\n      diffLeft += prevItem.diffLeft;\n      itemsDiffInHours += prevItem.diffInHours;\n    }\n\n    const diffInHours = differenceInHours(\n      getDate(item.endTimeHour),\n      getDate(item.startTimeHour)\n    );\n    const startTime = Number(format(getDate(item.startTimeHour), \"H\"));\n    const endTime = Number(format(getDate(item.endTimeHour), \"H\"));\n    const obj = {\n      ...item,\n      diffLeft,\n      diffInHours,\n      prevItemDiffInHours: itemsDiffInHours,\n      startTime,\n      endTime,\n    };\n    acc.push(obj);\n    return acc;\n  }, [] as HoursInDayDiffTime[]);\n\n  return data;\n};\n\nexport const getTodayHoursInDays = (hoursInDays: HoursInDayDiffTime[]) => {\n  const date = hoursInDays.filter((item) =>\n    isWithinInterval(new Date(), {\n      start: new Date(item.startTimeHour),\n      end: new Date(item.endTimeHour),\n    })\n  );\n\n  return date.length > 0;\n};\n\ninterface HoursInDaysPositionX {\n  hoursInDays: HoursInDayDiffTime[];\n  hourWidth: number;\n  sidebarWidth: number;\n  cb?: (v: boolean) => void;\n}\nexport const getHoursInDaysPositionX = ({\n  hoursInDays,\n  hourWidth,\n  sidebarWidth,\n  cb,\n}: HoursInDaysPositionX) => {\n  const date = hoursInDays.filter((item) =>\n    isWithinInterval(new Date(), {\n      start: new Date(item.startTimeHour),\n      end: new Date(item.endTimeHour),\n    })\n  );\n  if (date.length === 0) {\n    cb?.(false);\n    return 0;\n  }\n  const day = date[0];\n  const positionX = getPositionX(\n    startOfDay(new Date(day.startTimeHour)),\n    new Date(),\n    day.startTimeHour,\n    day.endTimeHour,\n    hourWidth\n  );\n  return positionX + sidebarWidth + day.prevItemDiffInHours * hourWidth;\n};\n","import { format, getDaysInMonth, parse } from \"date-fns\";\nimport { toDate } from \"date-fns-tz\";\n// Import interfaces\nimport { HoursInDayDiffTime, Mode } from \"./interfaces\";\n// Import variables\nimport {\n  HOURS_IN_DAY,\n  TIMELINE_HEIGHT_MODERN_STYLE,\n  TIME_FORMAT,\n} from \"./variables\";\n// Import helpers\nimport { generateArray } from \"./common\";\n\nconst { BASE_DAY_MONTH, DAY_MONTH } = TIME_FORMAT;\nconst generateDayHours = (\n  isBaseTimeFormat: boolean,\n  dayIndex: number,\n  days: string[]\n) =>\n  Array.from({ length: HOURS_IN_DAY }, (_, i) => {\n    if (i === 0) {\n      const timeFormat = isBaseTimeFormat ? BASE_DAY_MONTH : DAY_MONTH;\n      const date = parse(days[dayIndex], TIME_FORMAT.DATE, new Date());\n      return dayIndex === 0 ? i : format(date, timeFormat);\n    }\n    return i;\n  });\n\ninterface TimeSlots {\n  isBaseTimeFormat: boolean;\n  days: string[];\n  hoursInDays: HoursInDayDiffTime[];\n  months: string[];\n  numberOfDays: number;\n  numberOfHoursInDay: number;\n  numberOfMonths: number;\n  offsetStartHoursRange: number;\n  weekDayWidth?: number;\n}\n\nexport const generateTimelineSlots = (\n  modeType: Mode[\"type\"],\n  options: TimeSlots\n) => {\n  const { hoursInDays, ...rest } = options;\n  if (modeType === \"week\") {\n    return generateWeekTimelineSlots(rest) as string[];\n  }\n\n  if (modeType === \"month\") {\n    return generateMonthTimelineSlots(rest) as string[];\n  }\n\n  if (hoursInDays.length > 0) {\n    return getDayHoursTimeSlots(options) as (string | number)[];\n  }\n\n  return getDayTimeSlots(rest) as (string | number)[];\n};\n\nconst getDayHoursTimeSlots = ({\n  isBaseTimeFormat,\n  days,\n  hoursInDays,\n  numberOfDays,\n}: Pick<\n  TimeSlots,\n  \"isBaseTimeFormat\" | \"days\" | \"hoursInDays\" | \"numberOfDays\"\n>) => {\n  const slots = generateArray(numberOfDays).reduce((acc, _, dayIndex) => {\n    const hours = generateDayHours(isBaseTimeFormat, dayIndex, days);\n    const hoursInDay = hoursInDays[dayIndex];\n    const sliced = hours.slice(hoursInDay.startTime, hoursInDay.endTime);\n    if (dayIndex > 0) sliced[0] = hours[0];\n    return [...acc, ...sliced];\n  }, []);\n  return slots;\n};\n\nconst getDayTimeSlots = ({\n  isBaseTimeFormat,\n  days,\n  numberOfDays,\n  numberOfHoursInDay,\n  offsetStartHoursRange,\n}: Omit<TimeSlots, \"hoursInDays\">) => {\n  const slots = generateArray(numberOfDays).reduce((acc, _, dayIndex) => {\n    const hours = generateDayHours(isBaseTimeFormat, dayIndex, days);\n    if (dayIndex === 0) return [...acc, ...hours.slice(offsetStartHoursRange)];\n    return [...acc, ...hours];\n  }, []);\n  return slots.slice(0, numberOfHoursInDay);\n};\n\nexport const generateWeekTimelineSlots = ({\n  days,\n  numberOfDays,\n}: Pick<TimeSlots, \"days\" | \"numberOfDays\">) => {\n  const slots = generateArray(numberOfDays).map((_, dayIndex) => {\n    const date = parse(days[dayIndex], TIME_FORMAT.DATE, new Date());\n    return format(date, TIME_FORMAT.DATE);\n  });\n\n  return slots;\n};\nexport const generateMonthTimelineSlots = ({\n  months,\n  numberOfMonths,\n}: Pick<TimeSlots, \"isBaseTimeFormat\" | \"months\" | \"numberOfMonths\">) => {\n  const slots = generateArray(numberOfMonths).map((_, dayIndex) => {\n    const date = parse(months[dayIndex], TIME_FORMAT.DATE, new Date());\n    return format(date, TIME_FORMAT.DATE);\n  });\n\n  return slots;\n};\n\ninterface TimelineMonthsWidth {\n  data: { width: number; left: number }[];\n  offsetLeft: number;\n}\nexport const getTimelineMonthsWidth = ({\n  months,\n  weekDayWidth,\n}: Pick<TimeSlots, \"months\" | \"weekDayWidth\">) => {\n  const { data } = months.reduce(\n    (acc, month, index) => {\n      const daysInMonth = getDaysInMonth(toDate(month));\n      const width = daysInMonth * (weekDayWidth as number);\n      if (index === 0) {\n        acc.data.push({ width, left: 0 });\n        acc.offsetLeft = 0;\n        return acc;\n      }\n      const left = acc.offsetLeft + acc.data[index - 1].width;\n      acc.data.push({ width, left });\n      acc.offsetLeft = left;\n      return acc;\n    },\n    { data: [], offsetLeft: 0 } as TimelineMonthsWidth\n  );\n\n  return data;\n};\n\nexport const getTimelineHeight = (timelineHeight: number, mode: Mode) => {\n  if (\n    (mode.type === \"week\" || mode.type === \"month\") &&\n    mode.style === \"modern\"\n  ) {\n    return TIMELINE_HEIGHT_MODERN_STYLE;\n  }\n  return timelineHeight;\n};\n","import { ProgramItem } from \"./types\";\nimport { ProgramOverlaps } from \"./interfaces\";\nimport { switchPosition } from \"./common\";\nimport { getChannelEpgIndexes, getChannelsGroupTree } from \"./layout\";\n\nfunction getOverlapCount(\n  program: ProgramItem,\n  overlapArray: ProgramItem[]\n): number {\n  const sinceB = new Date(program.data.since);\n  const tillB = new Date(program.data.till);\n\n  let overlapCount = 0;\n\n  for (const otherProgram of overlapArray) {\n    if (program.data.id === otherProgram.data.id) continue;\n\n    const sinceOther = new Date(otherProgram.data.since);\n    const tillOther = new Date(otherProgram.data.till);\n\n    if (\n      (sinceB <= tillOther && tillB >= sinceOther) ||\n      (sinceOther <= tillB && tillOther >= sinceB)\n    ) {\n      overlapCount++;\n    }\n  }\n\n  return overlapCount;\n}\n\nfunction overlapPosition(\n  program: ProgramItem,\n  overlapArray: ProgramItem[],\n  channelOverlapsCount: number\n) {\n  const sinceB = new Date(program.data.since);\n  const tillB = new Date(program.data.till);\n  const newChannelOverlapsCount = channelOverlapsCount;\n\n  for (let index = 0; index < newChannelOverlapsCount + 1; index++) {\n    const top =\n      program.data.channelPosition.top > 0\n        ? program.data.channelPosition.top\n        : 0;\n    let levelTop = top + program.position.height * index;\n    let overlapsOnLevel = false;\n    let overlapsOnLevelUp = false;\n\n    for (const otherProgram of overlapArray) {\n      if (program.data.id === otherProgram.data.id) continue;\n\n      if (levelTop === otherProgram.position.top) {\n        const sinceOther = new Date(otherProgram.data.since);\n        const tillOther = new Date(otherProgram.data.till);\n\n        if (\n          (sinceB < tillOther && tillB > sinceOther) ||\n          (sinceOther < tillB && tillOther > sinceB)\n        ) {\n          if (\n            (sinceB <= tillOther && tillB >= sinceOther) ||\n            (sinceOther <= tillB && tillOther >= sinceB)\n          ) {\n            overlapsOnLevelUp = true;\n          }\n          overlapsOnLevel = true;\n          break;\n        }\n      }\n    }\n\n    if (!overlapsOnLevel) {\n      return overlapsOnLevelUp ? index + 4 : index;\n    }\n  }\n  return newChannelOverlapsCount;\n}\n\nconst getOverlapProgramOptions = (\n  program: ProgramItem,\n  overlapArray: ProgramItem[],\n  channelOverlapsCount: number\n) => {\n  const _program = { ...program };\n\n  const { data, position } = _program;\n\n  const programOverlapIndex = overlapArray.length + 1;\n\n  const isOverlapStackMode = true;\n  const programOverlapsLength = overlapArray.length;\n  const { channelPosition, overlapTimes } = data;\n  const { width, height, left } = position;\n  const newHeight = isOverlapStackMode\n    ? height\n    : height / programOverlapsLength;\n\n  const newTop =\n    channelPosition.top + (overlapTimes ?? programOverlapIndex) * newHeight;\n\n  const newProgram = {\n    ...program,\n    position: { width, height: newHeight, top: newTop, left },\n  };\n\n  const overlapTop = overlapPosition(\n    newProgram,\n    overlapArray,\n    channelOverlapsCount\n  );\n\n  newProgram.position = {\n    ...newProgram.position,\n    top: channelPosition.top + newProgram.position.height * overlapTop,\n  };\n\n  return [newProgram, overlapTop + 1];\n};\n\nconst setChannelOverlapCount = (\n  programA: ProgramItem,\n  channelOverlapsCount: number,\n  channelOverlaps: Record<string, number>\n) =>\n  channelOverlapsCount > channelOverlaps[programA.data.channelUuid]\n    ? channelOverlapsCount\n    : channelOverlaps[programA.data.channelUuid];\n\nexport function getOverlaps(\n  isVerticalMode: boolean,\n  itemOverlaps: ProgramOverlaps,\n  programs: ProgramItem[]\n): {\n  overlaps: ProgramOverlaps;\n  channelOverlaps: Record<string, number>;\n} {\n  const overlaps: ProgramOverlaps = { ...itemOverlaps };\n  const channelOverlaps: Record<string, number> = {};\n\n  for (const program of programs) {\n    overlaps[program.data.channelUuid] = [];\n  }\n\n  for (let i = 0; i < programs.length - 1; i++) {\n    const programA = { ...programs[i] };\n    const sinceA = new Date(programA.data.since);\n    const tillA = new Date(programA.data.till);\n\n    // Group channel tree\n    // If parent group tree is open, then all children group tree are visible\n    // If parent group tree is closed, then all children group tree are not visible\n    if (programA?.data?.parentChannelUuid) {\n      const channelsGroupTree = getChannelsGroupTree();\n      const channelGroupTree =\n        channelsGroupTree[programA?.data?.parentChannelUuid];\n      if (!channelGroupTree?.isOpen) continue;\n    }\n\n    if (isVerticalMode) {\n      programA.position = switchPosition(programA.position);\n    }\n\n    for (let j = i + 1; j < programs.length; j++) {\n      const programB = { ...programs[j] };\n\n      if (programA.data.channelUuid !== programB.data.channelUuid) continue;\n\n      if (isVerticalMode) {\n        programB.position = switchPosition(programB.position);\n      }\n\n      const sinceB = new Date(programB.data.since);\n      const tillB = new Date(programB.data.till);\n\n      if (\n        (sinceA < tillB && tillA > sinceB) ||\n        (sinceB < tillA && tillB > sinceA)\n      ) {\n        const elementA = overlaps[programA.data.channelUuid];\n        const elementB = overlaps[programB.data.channelUuid];\n\n        const isSameChannelUuid =\n          programA.data.channelUuid === programB.data.channelUuid;\n\n        if (elementA && elementB && isSameChannelUuid) {\n          programB.data.overlapLinkedId = programA.data.overlapLinkedId;\n\n          const overlapArray = overlaps[programA.data.channelUuid];\n\n          const isElementAExist = overlapArray.some(\n            (el) => el.data.id === programA.data.id\n          );\n          const isElementBExist = overlapArray.some(\n            (el) => el.data.id === programB.data.id\n          );\n          const channelOverlapsLength =\n            overlaps[programA.data.channelUuid].length;\n\n          if (!isElementBExist && channelOverlapsLength === 0) {\n            programB.position.top =\n              programA.data.channelPosition.top + programA.position.height;\n            overlaps[programA.data.channelUuid] = [programA, programB];\n            channelOverlaps[programA.data.channelUuid] = !channelOverlaps[\n              programA.data.channelUuid\n            ]\n              ? 2\n              : channelOverlaps[programA.data.channelUuid];\n          } else if (!isElementBExist && channelOverlapsLength > 1) {\n            let overlapCount = 0;\n\n            if (!isElementAExist) {\n              overlapCount = getOverlapCount(programB, overlapArray);\n              programB.data.overlapTimes = overlapCount;\n\n              const [newProgramA, channelOverlapsCount] =\n                getOverlapProgramOptions(\n                  programA,\n                  overlapArray,\n                  channelOverlaps[programA.data.channelUuid]\n                ) as [ProgramItem, number];\n\n              overlapArray.push(newProgramA);\n\n              channelOverlaps[programA.data.channelUuid] =\n                setChannelOverlapCount(\n                  programA,\n                  channelOverlapsCount,\n                  channelOverlaps\n                );\n            }\n\n            overlapCount = getOverlapCount(programB, overlapArray);\n            programB.data.overlapTimes = overlapCount;\n\n            const [newProgramB, channelOverlapsCount] =\n              getOverlapProgramOptions(\n                programB,\n                overlapArray,\n                channelOverlaps[programA.data.channelUuid]\n              ) as [ProgramItem, number];\n            overlapArray.push(newProgramB);\n\n            channelOverlaps[programA.data.channelUuid] = setChannelOverlapCount(\n              programA,\n              channelOverlapsCount,\n              channelOverlaps\n            );\n          } else if (isElementBExist && channelOverlapsLength > 1) {\n            const overlapCount = getOverlapCount(programB, overlapArray);\n            programB.data.overlapTimes = overlapCount;\n\n            const [, channelOverlapsCount] = getOverlapProgramOptions(\n              programB,\n              overlapArray,\n              channelOverlaps[programA.data.channelUuid]\n            ) as [ProgramItem, number];\n\n            channelOverlaps[programA.data.channelUuid] = setChannelOverlapCount(\n              programA,\n              channelOverlapsCount,\n              channelOverlaps\n            );\n          } else if (channelOverlapsLength > 1) {\n            overlapArray.push(programB);\n          }\n        }\n      } else if (\n        overlaps[programA.data.channelUuid] &&\n        overlaps[programA.data.channelUuid].length === 0\n      ) {\n        channelOverlaps[programA.data.channelUuid] = 0;\n        overlaps[programA.data.channelUuid] = [];\n      }\n    }\n  }\n\n  return { overlaps, channelOverlaps };\n}\n\nconst getChannelProgramSliced = (programs: ProgramItem[]) => {\n  const acc = new Map();\n\n  for (const next of programs) {\n    const channelUuid = next.data.channelUuid;\n    if (!acc.has(channelUuid)) {\n      acc.set(channelUuid, []);\n    }\n    acc.get(channelUuid).push(next);\n  }\n\n  return Object.fromEntries(acc) as Record<string, ProgramItem[]>;\n};\n\nconst getChannelEpdIndexesProgramSliced = (\n  programs: ProgramItem[],\n  overlaps: ProgramOverlaps,\n  dndChannelUuidIndex: number\n) => {\n  const acc = {} as Record<string, ProgramItem[]>;\n\n  for (const next of Object.keys(overlaps)) {\n    const channelIndex = overlaps[next]?.[0]?.data.channelIndex;\n    const channelUuid = overlaps[next]?.[0]?.data.channelUuid;\n    if (channelIndex !== undefined && channelIndex > dndChannelUuidIndex) {\n      const channelEpgIndexes = getChannelEpgIndexes(next);\n      const slicedPrograms = programs.slice(\n        channelEpgIndexes.first,\n        channelEpgIndexes.last + 1\n      );\n      acc[channelUuid] = slicedPrograms;\n    }\n  }\n  return acc;\n};\n\nexport function checkOverlaps(\n  isMultirowsDnd: boolean,\n  isVerticalMode: boolean,\n  dndChannelUuid: { index: number; uuid: string },\n  itemOverlaps: ProgramOverlaps,\n  programs: ProgramItem[]\n) {\n  const overlaps: ProgramOverlaps = { ...itemOverlaps };\n  const channelOverlaps: Record<string, number> = {};\n\n  let data = {} as Record<string, ProgramItem[]>;\n\n  const channelEpgIndexes = getChannelEpgIndexes(dndChannelUuid.uuid);\n  if (!isMultirowsDnd && channelEpgIndexes) {\n    const slicedOverlapsPrograms = getChannelEpdIndexesProgramSliced(\n      programs,\n      overlaps,\n      dndChannelUuid.index\n    );\n    data = {\n      [dndChannelUuid.uuid]: programs.slice(\n        channelEpgIndexes.first,\n        channelEpgIndexes.last + 1\n      ),\n      ...slicedOverlapsPrograms,\n    };\n  } else {\n    data = getChannelProgramSliced(programs);\n  }\n\n  for (const channel in data) {\n    const props = getOverlaps(isVerticalMode, itemOverlaps, data[channel]);\n    overlaps[channel] = props.overlaps[channel];\n    channelOverlaps[channel] = props.channelOverlaps[channel];\n  }\n  for (const channelUuid in overlaps) {\n    if (\n      overlaps?.[channelUuid] &&\n      Object.keys(overlaps?.[channelUuid])?.length === 0\n    ) {\n      delete overlaps[channelUuid];\n    }\n  }\n\n  return { overlaps, channelOverlaps };\n}\n","import { format, addMinutes, differenceInMinutes } from \"date-fns\";\n// Import types\nimport { DateTime, DragMouseUp, ResizeMouseUp } from \"./types\";\n// Import variables\nimport { TIMEZONE_MODES, TIME_FORMAT } from \"./variables\";\nimport { getTimezoneOptionsCache } from \"./layout\";\nimport { zonedDateTimeToUtc } from \"../utils/time\";\n\ntype EventProps = Pick<\n  DragMouseUp | ResizeMouseUp,\n  keyof DragMouseUp & keyof ResizeMouseUp\n>;\ntype EventSinceTill = EventProps & {\n  startDate?: DateTime;\n  hourWidth: number;\n  width?: ResizeMouseUp[\"width\"];\n  initialWidth?: ResizeMouseUp[\"initialWidth\"];\n};\n\nconst getFormattedDndDate = (newSince: Date, newTill: Date) => {\n  const timezone = getTimezoneOptionsCache();\n  if (timezone.enabled && timezone.mode === TIMEZONE_MODES.UTC_TO_ZONED_TIME) {\n    const utcDateSince = zonedDateTimeToUtc(newSince);\n    const utcDateTill = zonedDateTimeToUtc(newTill);\n    return {\n      since: utcDateSince.toISOString(),\n      till: utcDateTill.toISOString(),\n    };\n  }\n\n  return {\n    since: format(newSince, TIME_FORMAT.DEFAULT).replace(\" \", \"T\"),\n    till: format(newTill, TIME_FORMAT.DEFAULT).replace(\" \", \"T\"),\n  };\n};\n\nconst getResizeTill = ({\n  initialWidth,\n  width,\n  hourWidth,\n}: Partial<Pick<ResizeMouseUp, \"width\" | \"initialWidth\">> & {\n  hourWidth: number;\n}) => {\n  if (!initialWidth && !width) return 0;\n\n  const diff = (width as number) - (initialWidth as number);\n  const diffHours = diff / hourWidth;\n\n  return diffHours * 60;\n};\n\nexport const calculateItemDragSinceTill = (props: EventSinceTill) => {\n  const {\n    initialPositionLeft,\n    left,\n    initialWidth,\n    width,\n    hourWidth,\n    startDate,\n    since,\n    till,\n  } = props;\n  let minDiff = 0;\n  if (startDate) {\n    const startDateTime = new Date(startDate).getTime();\n    const sinceTime = new Date(since).getTime();\n    if (sinceTime < startDateTime) {\n      minDiff = differenceInMinutes(new Date(startDate), new Date(since));\n    }\n  }\n\n  const diff = left - initialPositionLeft;\n  const diffHours = diff / hourWidth;\n  const tillDiffHours = getResizeTill({ initialWidth, width, hourWidth });\n\n  const newSince = addMinutes(new Date(since), diffHours * 60 + minDiff);\n  const newTill = addMinutes(\n    new Date(till),\n    diffHours * 60 + tillDiffHours + minDiff\n  );\n  return getFormattedDndDate(newSince, newTill);\n};\n\nexport const getDefaultDragProps = (positionLeft: number) => ({\n  currentPositionX: positionLeft,\n  dndEvents: { isDragging: false },\n});\n","import { Mode, Grid as IGrid, HoursInDayDiffTime } from \"../helpers/interfaces\";\nimport { BaseTimeFormat, ChannelWithPosition, Position } from \"./types\";\nimport { generateArray } from \"./common\";\nimport { HOURS_IN_DAY } from \"./variables\";\nimport { generateTimelineSlots, getTimelineMonthsWidth } from \"./timeline\";\n\ninterface ConvertedGridItems {\n  isVerticalMode: boolean;\n  channels: ChannelWithPosition[];\n  mode: Mode;\n  dayWidth: number;\n  hourWidth: number;\n  timelineHeight: number;\n  sidebarWidth: number;\n  dayWidthResources: {\n    numberOfMonths: number;\n    numberOfHoursInDay: number;\n    monthWidth: number;\n    offsetStartHoursRange: number;\n  };\n  daysResources: {\n    numberOfDays: number;\n    days: string[];\n    months: string[];\n  };\n}\nexport const getConvertedGridItems = ({\n  isVerticalMode,\n  channels,\n  dayWidth,\n  hourWidth,\n  timelineHeight,\n  sidebarWidth,\n  mode,\n  dayWidthResources,\n  daysResources,\n}: ConvertedGridItems) => {\n  const isMonthMode = mode.type === \"month\";\n\n  const numberOfSlots = () => {\n    if (mode.type === \"day\") return dayWidthResources.numberOfHoursInDay;\n    if (mode.type === \"week\") return daysResources.numberOfDays;\n    return dayWidthResources.numberOfMonths;\n  };\n\n  const monthsWidth = () =>\n    getTimelineMonthsWidth({\n      months: daysResources.months,\n      weekDayWidth: hourWidth * HOURS_IN_DAY,\n    });\n\n  const getGridItemPosition = (channel: ChannelWithPosition, index: number) => {\n    let width = 0;\n    let left = 0;\n    if (isMonthMode) {\n      width = monthsWidth()[index].width;\n      left = monthsWidth()[index].left;\n    } else {\n      width = dayWidth / numberOfSlots();\n      left = width * index;\n    }\n    let position = {\n      top: channel.position.top,\n      left,\n      width,\n      height: channel.position.height,\n      edgeEnd: left + width,\n    };\n\n    if (isVerticalMode) {\n      position = {\n        ...position,\n        left: position.top + timelineHeight,\n        top: position.left + sidebarWidth,\n        width: position.height,\n        height: position.width,\n      };\n    } else {\n      position = {\n        ...position,\n        top: position.top + timelineHeight,\n        left: left + sidebarWidth,\n        width,\n        height: position.height,\n      };\n    }\n\n    return { position, channel };\n  };\n  return channels.flatMap((channel) =>\n    generateArray(numberOfSlots()).map((_, index) =>\n      getGridItemPosition(channel, index)\n    )\n  );\n};\n\n// On grid item click\ninterface ClickGridItem {\n  isDrop?: boolean;\n  isVerticalMode: boolean;\n  isBaseTimeFormat: BaseTimeFormat;\n  index: number | undefined;\n  item: {\n    position: Position;\n    channel: ChannelWithPosition;\n  };\n  grid: IGrid;\n  mode: Mode;\n  dayWidth: number;\n  hourWidth: number;\n  timelineHeight: number;\n  sidebarWidth: number;\n  days: string[];\n  hoursInDays: HoursInDayDiffTime[];\n  months: string[];\n  numberOfDays: number;\n  numberOfHoursInDay: number;\n  numberOfMonths: number;\n  offsetStartHoursRange: number;\n  timelineDividers: number;\n  dataAttributes?: Record<string, string>;\n}\nexport const getClickGridItemData = ({\n  isDrop = false,\n  isVerticalMode,\n  isBaseTimeFormat,\n  index,\n  item,\n  grid,\n  mode,\n  dayWidth,\n  hourWidth,\n  sidebarWidth,\n  days,\n  hoursInDays,\n  months,\n  numberOfDays,\n  numberOfHoursInDay,\n  numberOfMonths,\n  offsetStartHoursRange,\n  timelineDividers,\n  dataAttributes,\n}: ClickGridItem) => {\n  let { position, channel } = item;\n  const isDayMode = mode.type === \"day\";\n  let newPosition = {} as Position;\n  if (isVerticalMode) {\n    newPosition = {\n      ...position,\n      top: position.left,\n      left: position.top - sidebarWidth,\n      edgeEnd: position.left + hourWidth - sidebarWidth,\n    };\n  } else {\n    newPosition = {\n      ...position,\n      top: position.top,\n      left: position.left - sidebarWidth,\n      edgeEnd: position.edgeEnd - sidebarWidth,\n    };\n  }\n\n  const options = {\n    isBaseTimeFormat,\n    days,\n    hoursInDays,\n    months,\n    numberOfDays,\n    numberOfHoursInDay,\n    numberOfMonths,\n    offsetStartHoursRange,\n  };\n  const timeSlots = generateTimelineSlots(mode.type, options);\n\n  const left = isDayMode\n    ? newPosition.left + (index as number) * (hourWidth / timelineDividers)\n    : newPosition.left;\n  const edgeEnd = isDayMode\n    ? left + hourWidth / timelineDividers\n    : newPosition.edgeEnd;\n  const itemClickProps = {\n    since: \"00:00:00\",\n    till: \"00:00:00\",\n    date: \"\",\n    channelUuid: channel.uuid,\n  };\n\n  if (isDayMode) {\n    const gridItemProps = getDividerGridProps({\n      left,\n      edgeEnd,\n      timeSlots,\n      channel,\n      days,\n      dayWidth,\n      hourWidth,\n      index,\n    });\n    isDrop\n      ? grid.onGridItemDrop?.({ ...gridItemProps, ...dataAttributes })\n      : grid.onGridItemClick?.(gridItemProps);\n  }\n\n  if (mode.type === \"week\") {\n    const index = Math.floor(left / (hourWidth * 24));\n    const options = {\n      ...itemClickProps,\n      date: timeSlots[index] as string,\n    };\n    isDrop\n      ? grid.onGridItemDrop?.({ ...options, ...dataAttributes })\n      : grid.onGridItemClick?.(options);\n  }\n\n  if (mode.type === \"month\") {\n    const index = Math.floor(left / (hourWidth * 24 * 30));\n    const options = {\n      ...itemClickProps,\n      date: timeSlots[index] as string,\n    };\n    isDrop\n      ? grid.onGridItemDrop?.({ ...options, ...dataAttributes })\n      : grid.onGridItemClick?.(options);\n  }\n};\n\ninterface DividerGridProps {\n  left: number;\n  edgeEnd: number;\n  timeSlots: (string | number)[];\n  channel: ChannelWithPosition;\n  days: string[];\n  hourWidth: number;\n  dayWidth: number;\n  index: number | undefined;\n}\nconst getDividerGridProps = ({\n  left,\n  edgeEnd,\n  timeSlots,\n  channel,\n  days,\n  hourWidth,\n  dayWidth,\n  index,\n}: DividerGridProps) => {\n  let since = \"\";\n  let till = \"\";\n  const dayTimeSlots = timeSlots.map((time) =>\n    typeof time === \"number\" ? time : 0\n  );\n  const sinceTimeInHours = Math.floor(left / hourWidth); // Assuming 4 hours per hourWidth\n  const tillTimeInHours = Math.floor(edgeEnd / hourWidth); // Assuming 4 hours per hourWidth\n  const getTime = (index: number) =>\n    (dayTimeSlots[index] as number) < 10\n      ? \"0\" + dayTimeSlots[index]\n      : dayTimeSlots[index];\n  const newSince = getTime(sinceTimeInHours);\n  const newTill = getTime(tillTimeInHours);\n  const newSinceMin = index === 0 ? `00` : (index as number) * 15;\n\n  const newTillMin =\n    (index as number) + 1 === 0 ? `00` : ((index as number) + 1) * 15;\n\n  since = `${newSince}:${newSinceMin}:00`;\n  till = `${newTill}:${newTillMin}:00`;\n\n  if (newTillMin === 60) {\n    const newNextTill =\n      (dayTimeSlots[sinceTimeInHours + 1] as number) < 10\n        ? \"0\" + dayTimeSlots[sinceTimeInHours + 1]\n        : dayTimeSlots[tillTimeInHours];\n    till = newTill ? `${newNextTill}:00:00 ` : \"00:00:00\";\n  }\n  const singleDayWidth = dayWidth / (days.length - 1);\n  const dayIndex = Math.floor(left / singleDayWidth);\n\n  const options = {\n    since,\n    till,\n    date: days[dayIndex],\n    channelUuid: channel.uuid,\n  };\n  return options;\n};\n","import styled from \"@emotion/styled/macro\";\nimport { Layers, Theme } from \"../helpers\";\n\nexport const Container = styled.div<{\n  height?: number;\n  width?: number;\n}>`\n  padding: 5px;\n  height: ${({ height }) => (height ? `${height}px` : \"100%\")};\n  width: ${({ width }) => (width ? `${width}px` : \"100%\")};\n\n  *,\n  ::before,\n  ::after {\n    box-sizing: border-box;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const ScrollBox = styled.div<{ theme?: Theme; isRTL?: boolean }>`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  background: ${({ theme }) => theme.primary[900]};\n\n  ${({ isRTL }) => isRTL && `transform: scale(-1,1)`};\n\n  ::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollbar.thumb.bg};\n    border: 10px none ${({ theme }) => theme.white};\n    border-radius: 20px;\n  }\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => theme.white};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.primary[900]};\n    border: 22px none ${({ theme }) => theme.white};\n    border-radius: 0px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${({ theme }) => theme.primary[900]};\n  }\n`;\n\nexport const Box = styled.div<{\n  isRTL?: boolean;\n  left?: number;\n  top?: number;\n  theme?: Theme;\n}>`\n  position: absolute;\n  top: ${({ top = 0 }) => top}px;\n  background: ${({ theme }) => theme.primary[900]};\n  z-index: ${Layers.EpgCornerBox};\n\n  ${({ isRTL, left = 0 }) => (isRTL ? `right:0px;` : ` left: ${left}px`)};\n`;\n\nexport const Content = styled.div<{\n  isVerticalMode: boolean;\n  isSidebar: boolean;\n  isTimeline: boolean;\n  theme?: Theme;\n  dayWidth: number;\n  contentHeight: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n}>`\n  position: relative;\n  left: ${({ isSidebar, sidebarWidth }) => (isSidebar ? sidebarWidth : 0)}px;\n  height: ${({ contentHeight }) => contentHeight}px;\n  width: ${({ dayWidth }) => dayWidth}px;\n  background: ${({ theme }) => theme.primary[900]};\n\n  ${({ isVerticalMode, isTimeline, dayWidth, timelineHeight, contentHeight }) =>\n    isVerticalMode &&\n    `\n      left: ${isTimeline ? timelineHeight : 0}px;\n      width: ${contentHeight}px;\n      height: ${dayWidth}px;\n    `}\n`;\n\nexport const LayoutBg = styled.div<{\n  isVerticalMode: boolean;\n  isTimeline: boolean;\n  isSidebar: boolean;\n  dayWidth: number;\n  contentHeight: number;\n  timelineHeight: number;\n  sidebarWidth: number;\n}>`\n  position: absolute;\n  top: ${({ isTimeline, timelineHeight }) =>\n    isTimeline ? timelineHeight : 0}px;\n  left: ${({ isSidebar, sidebarWidth }) => (isSidebar ? sidebarWidth : 0)}px;\n  height: 100%;\n  width: ${({ dayWidth }) => dayWidth}px;\n\n  ${({\n    isVerticalMode,\n    isTimeline,\n    isSidebar,\n    dayWidth,\n    timelineHeight,\n    sidebarWidth,\n  }) =>\n    isVerticalMode &&\n    `\n     top: ${isSidebar ? sidebarWidth : 0}px;\n     left: ${isTimeline ? timelineHeight : 0}px;\n     width: 100%;\n     height: ${dayWidth}px;\n    `}\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Layers, Theme } from \"../helpers\";\n\nexport const Box = styled.div<{\n  isVerticalMode?: boolean;\n  isTimeline: boolean;\n  isRTL: boolean;\n  sidebarWidth: number;\n  timelineHeight: number;\n  contentHeight: number;\n  bottom: number;\n  theme?: Theme;\n}>`\n  ${({\n    isVerticalMode,\n    isTimeline,\n    isRTL,\n    sidebarWidth,\n    timelineHeight,\n    contentHeight,\n    bottom,\n    theme,\n  }) => css`\n    position: sticky;\n    background-color: ${theme.primary[900]};\n\n    ${isRTL && `& > div { transform: scale(-1,1) }`};\n\n    ${isVerticalMode &&\n    css`\n      top: 0;\n      left: ${isTimeline ? timelineHeight : 0}px;\n      height: ${sidebarWidth}px;\n      width: ${contentHeight}px;\n    `}\n\n    ${!isVerticalMode &&\n    css`\n      left: 0;\n      bottom: ${bottom}px;\n      float: left;\n      width: ${sidebarWidth}px;\n    `}\n  `}\n  z-index: ${Layers.Sidebar};\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const ChannelWrapper = styled.div<{\n  isVerticalMode?: boolean;\n  top: number;\n  height: number;\n  groupTree?: boolean;\n  theme?: Theme;\n}>`\n  ${({ isVerticalMode, top, height, groupTree, theme }) => css`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${theme.primary[900]};\n    cursor: ${groupTree ? \"pointer\" : \"default\"};\n\n    ${isVerticalMode &&\n    css`\n      top: 0;\n      left: ${top}px;\n      width: ${height}px;\n      height: 100%;\n    `}\n    ${!isVerticalMode &&\n    css`\n      top: ${top}px;\n      height: ${height}px;\n      width: 100%;\n    `};\n  `}\n`;\n\nexport const ChannelLogo = styled.img`\n  max-height: 60px;\n  max-width: 60px;\n  position: relative;\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Layers, Theme } from \"../helpers\";\n\nexport const ProgramContent = styled.div<{\n  isVerticalMode?: boolean;\n  isLive: boolean;\n  width: number;\n  theme?: Theme;\n}>`\n  border: 1px solid #171923;\n  position: relative;\n  display: flex;\n  font-size: 11px;\n  height: 100%;\n  border-radius: 8px;\n  padding: 10px ${({ width }) => (width < 30 ? 4 : 20)}px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.4s ease-in-out;\n  background: ${({ theme: { primary } }) =>\n    `linear-gradient(to right, ${primary[600]}, ${primary[600]})`};\n  z-index: ${Layers.Program};\n\n  &:hover {\n    background: ${({ theme: { gradient } }) =>\n      `linear-gradient(to right, ${gradient.blue[900]}, ${gradient.blue[600]})`};\n  }\n\n  ${({ isLive, isVerticalMode, theme: { gradient } }) =>\n    isLive &&\n    `background: linear-gradient(to ${isVerticalMode ? \"bottom\" : \"right\"}, ${\n      gradient.blue[900]\n    }, ${gradient.blue[600]},${gradient.blue[300]})`}\n`;\n\nexport const ProgramFlex = styled.div<{ isVerticalMode?: boolean }>`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n\n  ${({ isVerticalMode }) => isVerticalMode && `flex-direction: column;`};\n`;\n\nconst Elipsis = `\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProgramTitle = styled.p<{ theme?: Theme }>`\n  font-size: 14px;\n  text-align: left;\n  margin-top: 0;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.grey[300]};\n  ${Elipsis}\n`;\n\nexport const ProgramText = styled.span<{ theme?: Theme }>`\n  display: block;\n  font-size: 12.5px;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text.grey[500]};\n  text-align: left;\n  ${Elipsis}\n`;\n\nexport const ProgramImage = styled.img<{ isVerticalMode?: boolean }>`\n  margin-right: 15px;\n  border-radius: 6px;\n  width: 100px;\n\n  ${({ isVerticalMode }) =>\n    isVerticalMode && `width: 100%; margin-bottom: 10px`};\n`;\n\nexport const ProgramStack = styled.div<{ isRTL?: boolean }>`\n  overflow: hidden;\n  ${({ isRTL }) =>\n    isRTL &&\n    `transform: scale(-1,1); \n     display: flex; \n     flex-direction: column; \n     align-items: flex-end`};\n`;\n\nexport const ProgramBox = styled.div<{\n  isResizing?: boolean;\n  isDragging?: boolean;\n  width: number;\n}>`\n  position: absolute;\n  padding: ${({ width }) => (width === 0 ? 0 : 4)}px;\n  z-index: ${({ isDragging, isResizing }) =>\n    isDragging || isResizing ? Layers.Program * 3 : Layers.Program};\n  overflow: hidden;\n\n  ${({ isDragging, isResizing }) =>\n    (!isDragging || !isResizing) &&\n    ` &:hover {\n    z-index: ${Layers.Program * 2};\n\n    ${ProgramResizeHandle} {\n      opacity: 1;\n    }\n  }`}\n\n  ${({ isDragging, isResizing, theme }) =>\n    (isDragging || isResizing) &&\n    ` \n    border-radius: 10px;\n    background: ${theme.green[200]};\n    \n    ${ProgramContent}{\n      user-select: none;\n      cursor: move;\n  }\n  `}\n`;\n\nexport const ProgramResizeHandle = styled.div<{\n  isResize?: boolean;\n  isVerticalMode?: boolean;\n  left?: boolean;\n}>`\n  position: absolute;\n  opacity: 0;\n\n  ${({ isResize }) => !isResize && \"display: none;\"}\n\n  ${({ isVerticalMode, left }) =>\n    isVerticalMode &&\n    `\n    ${left ? `top: 0;` : `bottom: 0;`}\n    left:0;\n    height:25px;\n    width: 100%;\n  cursor: ${left ? \"n-resize\" : \"s-resize\"};\n  `}\n  ${({ isVerticalMode, left }) =>\n    !isVerticalMode &&\n    `\n    top: 0;\n    bottom: 0;\n    ${left ? `left: 0;` : `right: 0;`}\n    width: 25px;\n    cursor: ${left ? \"w-resize\" : \"e-resize\"};\n    `}\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    margin: auto;\n    border-radius: 8px;\n    background: ${({ theme }) => theme.green[200]};\n\n    ${({ isVerticalMode, left }) =>\n      !isVerticalMode &&\n      `   top: 0;\n      bottom: 0;\n      height: 50%;\n      width: 4px;\n        ${left ? `left: 9px;` : `right: 9px;`}\n        `}\n    ${({ isVerticalMode, left }) =>\n      isVerticalMode &&\n      `\n      ${left ? `top: 9px;` : `bottom: 9px;`}\n     left:50%;\n      height: 4px;\n      width: 50%;\n      transform: translateX(-50%);\n     \n        `}\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Layers, Theme } from \"../helpers\";\n\nexport const TimelineTime = styled.span<{\n  isVerticalMode?: boolean;\n  isBaseTimeFormat?: boolean;\n  isWeekMonthMode?: boolean;\n  isRTL?: boolean;\n  isNewDay?: boolean;\n  theme?: Theme;\n}>`\n  position: absolute;\n  top: 13px;\n  left: ${({ isRTL, isBaseTimeFormat, isVerticalMode, isWeekMonthMode }) => {\n    if (isVerticalMode) {\n      if (isRTL) return isBaseTimeFormat ? 9 : 17;\n      return isBaseTimeFormat ? 9 : 14;\n    }\n    if (isWeekMonthMode) return 0;\n    return isRTL && isBaseTimeFormat ? \"-32\" : \"-18\";\n  }}px;\n\n  color: ${({ theme }) => theme.text.grey[300]};\n\n  ${({ isRTL }) =>\n    isRTL &&\n    `\n      transform: scale(-1, 1);\n    `}\n\n  ${({ theme, isNewDay }) =>\n    isNewDay && `color: ${theme.teal[100]}; font-weight: 600`};\n\n  ${({ isVerticalMode, isRTL }) =>\n    isVerticalMode &&\n    css`\n      top: -10px;\n      left: 50%;\n      transform: translate(-50%, 0%) ${isRTL ? \"scale(-1,1)\" : \"\"};\n    `};\n`;\nexport const TimelineWeekMonthDate = styled.div<{\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  styleType?: \"default\" | \"modern\";\n  theme?: Theme;\n}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100%;\n  transform: ${({ isRTL }) => (isRTL ? \"scale(-1,1)\" : \"scale(1,1)\")};\n\n  span {\n    color: ${({ theme }) => theme.text.grey[300]};\n    font-size: 16px;\n  }\n\n  ${({ styleType, theme }) =>\n    styleType === \"modern\" &&\n    css`\n      span:first-of-type {\n        font-weight: 500;\n        color: ${theme.teal[100]};\n        font-size: 18px;\n      }\n      span {\n        font-weight: 500;\n        color: ${theme.text.grey[300]};\n        font-size: 24px;\n      }\n    `}\n\n  ${({ isVerticalMode, isRTL }) =>\n    isVerticalMode &&\n    css`\n      margin-top: 0px;\n      transform: ${isRTL ? \"scale(-1,1)\" : \"scale(1,1)\"};\n    `};\n`;\n\nexport const TimelineDividers = styled.div<{\n  isVerticalMode?: boolean;\n}>`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  padding-bottom: 6px;\n\n  ${({ isVerticalMode }) =>\n    isVerticalMode &&\n    css`\n      grid-template-columns: 1fr;\n      align-items: start;\n    `}\n`;\n\nexport const TimelineDivider = styled.div<{\n  isVerticalMode?: boolean;\n  isNewDay?: boolean;\n  theme?: Theme;\n  width: number;\n  left: number;\n}>`\n  position: absolute;\n  bottom: 6px;\n  background: ${({ theme }) => theme.timeline.divider.bg};\n  height: 10px;\n  width: 1px;\n  left: ${({ left }) => left}px;\n\n  ${({ isVerticalMode, left }) =>\n    isVerticalMode &&\n    css`\n      top: ${left}px;\n      left: 50%;\n      height: 1px;\n      width: 15px;\n      transform: translate(-50%, -50%);\n      &:first-of-type {\n        opacity: 0;\n        visibility: hidden;\n      }\n    `}\n\n  ${({ isNewDay, theme }) =>\n    isNewDay &&\n    `&:first-of-type {\n      width:2px;\n      background: ${theme.teal[100]};\n  }`}\n`;\n\nexport const TimelineWrapper = styled.div<{\n  isVerticalMode?: boolean;\n  isSidebar: boolean;\n  dayWidth: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n  theme?: Theme;\n}>`\n  ${({\n    isVerticalMode,\n    isSidebar,\n    sidebarWidth,\n    timelineHeight,\n    dayWidth,\n    theme,\n  }) =>\n    css`\n      position: sticky;\n      background: ${theme.primary[900]};\n      z-index: ${Layers.Timeline};\n\n      ${isVerticalMode &&\n      css`\n        left: 0;\n        bottom: 0px;\n        float: left;\n        width: ${timelineHeight}px;\n        margin-top: ${isSidebar ? sidebarWidth : 0}px;\n      `}\n\n      ${!isVerticalMode &&\n      css`\n        top: 0;\n        left: ${isSidebar ? sidebarWidth : 0}px;\n        height: ${timelineHeight}px;\n        width: ${dayWidth}px;\n      `}\n    `}\n`;\n\nexport const TimelineBox = styled.div<{\n  isVerticalMode?: boolean;\n  isWeekMonthMode?: boolean;\n  isToday: boolean;\n  isCurrentTime: boolean;\n  isTodayInHoursInDays?: boolean;\n  areHoursInDays?: boolean;\n  width: number;\n  left: number;\n  timelineHeight: number;\n}>`\n  ${({ isVerticalMode, left, width, timelineHeight, theme }) => css`\n    position: absolute;\n    font-size: 14px;\n    background-color: ${theme.primary[900]};\n\n    ${!isVerticalMode &&\n    css`\n      left: ${left}px;\n      width: ${width}px;\n      height: 100%;\n    `}\n    ${isVerticalMode &&\n    css`\n      top: ${left}px;\n      height: ${width}px;\n      width: ${timelineHeight}px;\n    `}\n  `}\n\n  ${({\n    isVerticalMode,\n    isToday,\n    isCurrentTime,\n    isTodayInHoursInDays,\n    areHoursInDays,\n    isWeekMonthMode,\n  }) => {\n    const typeNumberDefault = isToday && isCurrentTime ? 2 : 1;\n    const typeNumberInHoursDays = areHoursInDays\n      ? isTodayInHoursInDays && isCurrentTime\n        ? 2\n        : 1\n      : 1;\n    const typeNumber = areHoursInDays\n      ? typeNumberInHoursDays\n      : typeNumberDefault;\n    const position = isVerticalMode ? \"top\" : \"left\";\n\n    if (!isWeekMonthMode) {\n      return `&:nth-of-type(${typeNumber}) {\n        ${TimelineTime} {\n          ${position}: 0px;\n        }\n      }`;\n    }\n    return \"\";\n  }}\n`;\nexport const TimelineWeekMonthBox = styled(TimelineBox)<{\n  isVerticalMode?: boolean;\n  isWeekMonthMode?: boolean;\n  isToday: boolean;\n  isCurrentTime: boolean;\n  isTodayInHoursInDays?: boolean;\n  areHoursInDays?: boolean;\n  width: number;\n  left: number;\n  timelineHeight: number;\n  styleType?: \"default\" | \"modern\";\n}>`\n  ${({ isVerticalMode, styleType, theme }) =>\n    css`\n      &:not(:last-of-type) {\n        &:after {\n          content: \"\";\n          position: absolute;\n          background: ${theme.timeline.divider.bg};\n          transform: translate(-50%, -50%);\n\n          ${isVerticalMode\n            ? css`\n                bottom: 0;\n                height: 1px;\n                width: 80%;\n              `\n            : css`\n                top: 50%;\n                right: 0;\n                height: 100%;\n                height: ${styleType === \"modern\" ? \"35%\" : \"70%\"};\n                width: 1px;\n              `}\n        }\n      }\n    `}\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { Layers, Theme } from \"../helpers\";\n\nexport const lineStyles = {\n  position: \"absolute\",\n  top: 64,\n  width: 3,\n};\n\nexport const LineBox = styled.div<{\n  isVerticalMode: boolean;\n  isTimeline: boolean;\n  height: number;\n  left: number;\n  zIndex: Layers;\n  theme?: Theme;\n}>`\n  position: ${lineStyles.position};\n  top: ${({ isTimeline }) => (isTimeline ? lineStyles.top : 0)}px;\n  left: ${({ left }) => left}px;\n  height: ${({ height }) => height}px;\n  width: ${lineStyles.width}px;\n  background: ${({ theme }) => theme.green[300]};\n  pointer-events: none;\n  z-index: ${({ zIndex }) => zIndex};\n\n  ${({ isVerticalMode, isTimeline, left, height }) =>\n    isVerticalMode &&\n    ` \n      top: ${left}px;\n      left: ${isTimeline ? lineStyles.top : 0}px;\n      height: ${lineStyles.width}px;\n      width: ${height}px;\n  `}\n`;\n","import styled from \"@emotion/styled/macro\";\nimport { keyframes } from \"@emotion/react\";\nimport { Layers, Theme } from \"../helpers\";\n\nconst time = [0, 50, 0];\n\nconst moveLeft = (animate: { right: string[] }) => keyframes`\n${time.map(\n  (item, index) => `${item}% {\n  transform: translateX(-${animate.right[index]});\n}`\n)}\n`;\n\nexport const Box = styled.div<{ theme?: Theme }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  background: ${({ theme }) => theme.loader.bg};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: ${Layers.Loader};\n`;\n\nexport const Shape = styled.div<{\n  width: number;\n  color: \"teal\" | \"purple\" | \"pink\";\n  marginRight?: number;\n  transition: { duration: number; ease?: string; delay?: number };\n  animate: { right: string[] };\n  theme?: Theme;\n}>`\n  width: ${({ width }) => width * 0.42}px;\n  background: ${({ theme, color }) => theme.loader[color]};\n  height: 18px;\n  border-radius: 45px;\n  margin-right: ${({ marginRight }) => marginRight ?? 0}px;\n  animation-name: ${({ animate }) => moveLeft(animate)};\n  animation-duration: ${({ transition }) => transition.duration}s;\n  animation-timing-function: ${({ transition }) =>\n    transition.ease ?? \"ease-in-out\"};\n  animation-delay: ${({ transition }) => transition.delay ?? 0}s;\n  animation-iteration-count: infinite;\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Theme } from \"../helpers\";\n\nexport const boxStyles = ({ width }: { width?: number | string } = {}) => ({\n  position: \"absolute\",\n  top: 0,\n  width: width ?? 70,\n  height: 20,\n});\n\nexport const CurrentTimeBox = styled.div<{\n  top: number;\n  left: number;\n  width: number | string;\n}>`\n  position: ${boxStyles().position};\n  top: ${({ top }) => top}px;\n  left: ${({ left }) => left}px;\n  width: ${({ width }) => (typeof width === \"string\" ? \"auto\" : `${width}px`)};\n  height: ${boxStyles().height}px;\n  background-color: ${({ theme }) => theme.primary[900]};\n  z-index: 2;\n`;\n\nexport const CurrentTimeContent = styled.span<{\n  isVerticalMode?: boolean;\n  isBaseTimeFormat?: boolean;\n  isRTL?: boolean;\n  isNewDay?: boolean;\n  theme?: Theme;\n}>`\n  ${({ isVerticalMode, isBaseTimeFormat, isRTL, isNewDay, theme }) => css`\n    position: absolute;\n    font-size: 13px;\n    font-weight: 500;\n    color: ${theme.green[200]};\n    background-color: ${theme.primary[900]};\n    ${isNewDay && `color: ${theme.teal[100]}; font-weight: 600`};\n\n    ${isVerticalMode &&\n    css`\n      left: 50%;\n      transform: translate(-50%, -50%) ${isRTL ? \"scale(-1,1)\" : \"\"};\n    `}\n\n    ${!isVerticalMode &&\n    css`\n      top: 4px;\n      left: ${isRTL && isBaseTimeFormat ? \"-32\" : \"-16\"}px;\n      ${isRTL && \"transform: scale(-1,1);\"}\n    `}\n  `}\n`;\n","import styled from \"@emotion/styled/macro\";\n// Import helpers\nimport { Layers, Theme } from \"../helpers\";\nimport { css } from \"@emotion/react\";\n\nexport const AreaFiled = styled.div<{\n  isVerticalMode?: boolean;\n  isClickable?: boolean;\n  positionX: number;\n  height: number;\n  width: number;\n  timelineHeight: number;\n  theme?: Theme;\n}>`\n  position: absolute;\n  pointer-events: ${(props) => (props.isClickable ? \"auto\" : \"none\")};\n  cursor: ${(props) => (props.isClickable ? \"pointer\" : \"none\")};\n  z-index: ${Layers.Area};\n\n  ${({ isVerticalMode, positionX, height, width, timelineHeight }) =>\n    isVerticalMode\n      ? css`\n          top: ${positionX}px;\n          left: ${timelineHeight}px;\n          height: ${width}px;\n          width: ${height}px;\n        `\n      : css`\n          top: ${timelineHeight}px;\n          left: ${positionX}px;\n          height: ${height}px;\n          width: ${width}px;\n        `}\n`;\nexport const AreaBg = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const AreaAnnotation = styled.div<{\n  isVerticalMode: boolean;\n  isLeft?: boolean;\n  width: number;\n  timelineHeight: number;\n}>`\n  padding: 4px 6px;\n  font-size: 15px;\n  width: max-content;\n\n  ${({ isVerticalMode, isLeft = false, width, timelineHeight }) => css`\n    ${!isVerticalMode\n      ? css`\n          position: sticky;\n          top: ${timelineHeight}px;\n          ${isLeft\n            ? `float:left; border-top-right-radius: 4px; border-bottom-right-radius:4px;`\n            : `float:right; border-top-left-radius: 4px; border-bottom-left-radius: 4px;`}\n        `\n      : css`\n          position: sticky;\n          left: ${timelineHeight}px;\n          border-top-right-radius: 4px;\n          border-bottom-right-radius: 4px;\n          ${isLeft && css`` ? `top: 0; ` : `margin-top:${width - 60}px;`}\n        `}\n  `}\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled/macro\";\n\nexport const GridContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n`;\n\nexport const GridWrapper = styled.div<{\n  isVerticalMode: boolean;\n  isSidebar: boolean;\n  isTimeline: boolean;\n  sidebarWidth: number;\n  timelineHeight: number;\n}>`\n  position: relative;\n  top: ${({ isTimeline, timelineHeight }) =>\n    isTimeline ? timelineHeight : 0}px;\n  left: ${({ isSidebar, sidebarWidth }) => (isSidebar ? sidebarWidth : 0)}px;\n\n  ${({ isVerticalMode, isSidebar, isTimeline, sidebarWidth, timelineHeight }) =>\n    isVerticalMode &&\n    `\n     top: ${isSidebar ? sidebarWidth : 0}px;\n      left: ${isTimeline ? timelineHeight : 0}px;\n    `}\n`;\n\nexport const GridItem = styled.div<{\n  isDayMode: boolean;\n  isHoverHighlight: boolean;\n  isDragOver?: boolean;\n  isItemClickable: boolean;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n}>`\n  position: absolute;\n  top: ${({ top }) => top}px;\n  left: ${({ left }) => left}px;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  border: 1px solid transparent;\n  border-right-color: ${({ theme }) => theme.grid.item};\n  border-bottom-color: ${({ theme }) => theme.grid.item};\n  z-index: 1;\n\n  ${({ isDayMode, isHoverHighlight, isDragOver, theme }) =>\n    !isDayMode &&\n    isHoverHighlight &&\n    `\n    &:hover {\n      border: 1px solid ${theme.grid.highlight};\n    }   \n\n    ${isDragOver && `border: 1px solid ${theme.grid.highlight};`}\n    `}\n\n  ${({ isItemClickable }) =>\n    isItemClickable &&\n    css`\n      cursor: pointer;\n    `}\n`;\n\nexport const GridDivider = styled.div<{\n  isVerticalMode?: boolean;\n  isHoverHighlight: boolean;\n  isDragOver?: boolean;\n  isItemClickable?: boolean;\n  left: number;\n  width: number;\n}>`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => left}px;\n  border: 1px solid transparent;\n  border-right-color: ${({ theme }) => theme.grid.divider};\n  height: 100%;\n  width: ${({ width }) => width}px;\n\n  ${({ isHoverHighlight, theme }) =>\n    isHoverHighlight &&\n    `\n    &:hover {\n      border: 1px solid ${theme.grid.highlight};\n    }   \n\n\n    `}\n  ${({ isDragOver, theme }) =>\n    isDragOver &&\n    `\n    border: 1px solid ${theme.grid.highlight}; \n\n    `}\n\n  ${({ isVerticalMode, left, width, theme }) =>\n    isVerticalMode &&\n    css`\n      top: ${left}px;\n      left: 0;\n      width: 100%;\n      height: ${width}px;\n      border-bottom-color: ${theme.grid.divider};\n    `}\n\n  ${({ isItemClickable }) =>\n    isItemClickable &&\n    css`\n      cursor: pointer;\n    `}\n`;\n","export const theme = {\n  primary: {\n    600: \"#1a202c\",\n    900: \"#171923\",\n  },\n  grey: { 300: \"#d1d1d1\" },\n  white: \"#fff\",\n  teal: {\n    100: \"#38B2AC\",\n  },\n  green: {\n    200: \"#389493\",\n    300: \"#2C7A7B\",\n  },\n  loader: {\n    teal: \"#5DDADB\",\n    purple: \"#3437A2\",\n    pink: \"#F78EB6\",\n    bg: \"#171923db\",\n  },\n  scrollbar: {\n    border: \"#ffffff\",\n    thumb: {\n      bg: \"#e1e1e1\",\n    },\n  },\n\n  gradient: {\n    blue: {\n      300: \"#002eb3\",\n      600: \"#002360\",\n      900: \"#051937\",\n    },\n  },\n\n  text: {\n    grey: {\n      300: \"#a0aec0\",\n      500: \"#718096\",\n    },\n  },\n\n  timeline: {\n    divider: {\n      bg: \"#718096\",\n    },\n  },\n  grid: {\n    item: \"#7180961a\",\n    divider: \"#7180961a\",\n    highlight: \"#38B2AC\",\n  },\n};\n","import React from \"react\";\nimport { startOfToday } from \"date-fns\";\n\n// Import interfaces\nimport {\n  Area,\n  ChannelWithOmittedUuid,\n  DragAndDrop,\n  Grid,\n  HoursInDay,\n  Mode,\n  Overlap,\n  ProgramOverlaps,\n  ProgramWithOmittedUuid,\n  Snap,\n  Theme,\n  Timezone,\n} from \"../helpers/interfaces\";\n\n// Import types\nimport {\n  DateTime,\n  BaseTimeFormat,\n  Position,\n  InitialScrollPositions,\n  ProgramItem,\n  DragMouseUp,\n  ResizeMouseUp,\n  ChannelWithPosition,\n} from \"../helpers/types\";\n\n// Import helpers\nimport {\n  DAY_WIDTH,\n  ITEM_HEIGHT,\n  ITEM_OVERSCAN,\n  SIDEBAR_WIDTH,\n  LIVE_REFRESH_TIME,\n  TIMELINE_HEIGHT,\n  TIMELINE_DIVIDERS,\n  formatTime,\n  getConvertedChannels,\n  getConvertedPrograms,\n  getItemVisibility,\n  getSidebarItemVisibility,\n  getDayWidthResources,\n  getTimeRangeDates,\n  getDayResources,\n  getTimelineItemVisibility,\n  getTimelineHeight,\n  getNumberOfHoursInDays,\n  resetLayoutScreenCloneElements,\n  checkOverlaps,\n  calculateItemDragSinceTill,\n  getChannelEpgIndexes,\n  setChannelEpgIndexes,\n  setTimezoneOptionsCache,\n  setUpdatedLayoutItem,\n} from \"../helpers\";\n\n// Import theme\nimport { theme as defaultTheme } from \"../theme\";\n\n// Import components\nimport { useLayout } from \"./useLayout\";\nimport { getConvertedGridItems } from \"../helpers/grid\";\n\ninterface useEpgProps {\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  isBaseTimeFormat?: BaseTimeFormat;\n  isSidebar?: boolean;\n  isTimeline?: boolean;\n  isLine?: boolean;\n  isCurrentTime?: boolean;\n  isInitialScrollToNow?: boolean;\n  isResize?: boolean;\n  initialScrollPositions?: InitialScrollPositions;\n  channels: ChannelWithOmittedUuid[];\n  epg: ProgramWithOmittedUuid[];\n  width?: number;\n  height?: number;\n  startDate?: DateTime;\n  endDate?: DateTime;\n  liveRefreshTime?: number;\n  mode?: Mode;\n  timezone?: Timezone;\n  overlap?: Overlap;\n  timelineDividers?: number;\n  snap?: Snap;\n  grid?: Grid;\n  dnd?: DragAndDrop;\n  areas?: Area[];\n  hoursInDays?: HoursInDay[];\n  theme?: Theme;\n  globalStyles?: string;\n  dayWidth?: number;\n  sidebarWidth?: number;\n  timelineHeight?: number;\n  itemHeight?: number;\n  itemOverscan?: number;\n  channelMapKey?: string;\n  programChannelMapKey?: string;\n}\n\nconst defaultStartDateTime = formatTime(startOfToday());\nconst defaultMode = { type: \"day\", style: \"default\" } as Mode;\nconst defaultTimezone = {\n  enabled: false,\n  zone: \"\",\n  mode: \"formatInTimeZone\",\n} as Timezone;\nconst defaultOverlap = {\n  enabled: false,\n  mode: \"stack\",\n  layerOverlapLevel: 0.4,\n} as Overlap;\nconst defaultGrid = {\n  enabled: false,\n  hoverHighlight: false,\n} as Grid;\nconst defaultDnd = {\n  enabled: false,\n  mode: \"row\",\n} as DragAndDrop;\n\nexport function useEpg(props: useEpgProps) {\n  let {\n    isVerticalMode = false,\n    isRTL = false,\n    isResize = false,\n    isBaseTimeFormat = false,\n    isSidebar = true,\n    isTimeline = true,\n    isLine = true,\n    isCurrentTime = false,\n    isInitialScrollToNow = true,\n  } = props;\n\n  const { width, height } = props;\n\n  const { channels: channelsEpg, epg } = props;\n\n  const {\n    startDate: startDateInput = defaultStartDateTime,\n    endDate: endDateInput = \"\",\n    hoursInDays: customHoursInDays = [],\n  } = props;\n\n  const {\n    initialScrollPositions = {},\n    liveRefreshTime = LIVE_REFRESH_TIME,\n    timelineDividers = TIMELINE_DIVIDERS,\n    snap,\n    mode: customMode = defaultMode,\n    overlap: customOverlap = defaultOverlap,\n    timezone: customTimezone = defaultTimezone,\n    areas = [],\n    grid = defaultGrid,\n    dnd = defaultDnd,\n    theme: customTheme,\n    globalStyles,\n  } = props;\n\n  const {\n    dayWidth: customDayWidth = DAY_WIDTH,\n    sidebarWidth = SIDEBAR_WIDTH,\n    timelineHeight: customTimelineHeight = TIMELINE_HEIGHT,\n    itemHeight = ITEM_HEIGHT,\n    itemOverscan = ITEM_OVERSCAN,\n  } = props;\n\n  const { channelMapKey = \"uuid\", programChannelMapKey = \"channelUuid\" } =\n    props;\n\n  const timezone = { ...defaultTimezone, ...customTimezone };\n  const mode = { ...defaultMode, ...customMode };\n  const overlap = { ...defaultOverlap, ...customOverlap };\n  const isOverlapEnabled = overlap.enabled;\n  const isMultirowsDnd = dnd.mode === \"multi-rows\";\n\n  // Get converted start and end dates\n  const { startDate, endDate } = getTimeRangeDates(\n    startDateInput,\n    endDateInput\n  );\n\n  // Get hours in days\n  const serializedHoursInDays = JSON.stringify(customHoursInDays);\n  const hoursInDays = React.useMemo(\n    () => getNumberOfHoursInDays({ customHoursInDays, startDate }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [serializedHoursInDays]\n  );\n\n  // Get days resources eg. number of days, dates and hours\n  const { isToday, currentDate, ...daysResources } = React.useMemo(\n    () =>\n      getDayResources({\n        startDate,\n        endDate,\n        modeType: mode.type,\n      }),\n    [startDate, endDate, mode.type]\n  );\n\n  // Get day and hour width of the day\n  const { hourWidth, dayWidth, ...dayWidthResourcesProps } = React.useMemo(\n    () =>\n      getDayWidthResources({\n        dayWidth: customDayWidth,\n        startDate,\n        endDate,\n        hoursInDays,\n        modeType: mode.type,\n      }),\n    [customDayWidth, startDate, endDate, hoursInDays, mode.type]\n  );\n\n  // -------- State --------\n  const [update, setForceUpdate] = React.useReducer((x) => x + 1, 0);\n  const [updateChannels, setForceChannelsUpdate] = React.useReducer(\n    (x) => x + 1,\n    0\n  );\n  const [dndChannelUuid, setDndChannelUuid] = React.useState({\n    index: -1,\n    uuid: \"\",\n  });\n\n  const [newOverlaps, setNewOverlaps] = React.useState<number>(() => 0);\n  let [overlaps, setOverlaps] = React.useState<ProgramOverlaps>({});\n  const [channelOverlapsCount, setChannelOverlapsCount] = React.useState<\n    Record<string, number>\n  >({});\n\n  const timezoneSerialized = JSON.stringify(timezone);\n  // Set base timezone functions\n  React.useMemo(\n    () => {\n      if (timezone.enabled) {\n        setTimezoneOptionsCache(timezone);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [timezoneSerialized]\n  );\n\n  React.useEffect(() => {\n    setForceUpdate();\n    setDndChannelUuid({ index: -1, uuid: \"\" });\n  }, [isVerticalMode]);\n\n  const {\n    isLayoutBottom,\n    isLayoutRight,\n    containerRef,\n    scrollBoxRef,\n    ...layoutProps\n  } = useLayout({\n    isVerticalMode,\n    isToday,\n    isInitialScrollToNow,\n    initialScrollPositions,\n    startDate,\n    endDate,\n    sidebarWidth,\n    width,\n    height,\n    hourWidth,\n    currentDate,\n    hoursInDays,\n    channelsNumber: channelsEpg.length,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      resetLayoutScreenCloneElements();\n    };\n  }, []);\n\n  const { scrollX, scrollY, layoutWidth, layoutHeight } = layoutProps;\n  const { onScroll, onScrollToNow, onScrollTop, onScrollLeft, onScrollRight } =\n    layoutProps;\n\n  //-------- Variables --------\n  const timelineHeight = getTimelineHeight(customTimelineHeight, mode);\n\n  const channelsEpgSerialized = React.useMemo(\n    () => JSON.stringify(channelsEpg),\n    [channelsEpg]\n  );\n  const channelOverlapsCountSerialized = React.useMemo(\n    () => channelOverlapsCount,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(channelOverlapsCount)]\n  );\n  const channels = React.useMemo(\n    () => {\n      // Convert channels\n      return getConvertedChannels(\n        isOverlapEnabled,\n        overlap.mode,\n        overlap.layerOverlapLevel as number,\n        channelsEpg,\n        itemHeight,\n        channelMapKey,\n        channelOverlapsCount\n      );\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isOverlapEnabled,\n      overlap.mode,\n      overlap.layerOverlapLevel,\n      channelsEpgSerialized,\n      channelOverlapsCountSerialized,\n      itemHeight,\n      channelMapKey,\n      newOverlaps,\n      updateChannels,\n    ]\n  );\n\n  const startDateTime = formatTime(startDate);\n  const endDateTime = formatTime(endDate);\n  const channelsSerialized = React.useMemo(\n    () => JSON.stringify(channels),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [channels]\n  );\n  const overlapsSerialized = React.useMemo(\n    () => overlaps,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(overlaps)]\n  );\n\n  const { programs, programOverlaps } = React.useMemo(\n    () => {\n      const data = getConvertedPrograms({\n        isVerticalMode,\n        isOverlapEnabled,\n        programChannelMapKey,\n        data: epg,\n        channels,\n        startDate: startDateTime,\n        endDate: endDateTime,\n        hoursInDays,\n        itemHeight,\n        hourWidth,\n      });\n\n      if (isOverlapEnabled) {\n        const _overlaps = overlaps;\n\n        const { overlaps: itemsOverlaps, channelOverlaps } = checkOverlaps(\n          isMultirowsDnd,\n          isVerticalMode,\n          dndChannelUuid,\n          _overlaps,\n          data\n        );\n\n        setChannelOverlapsCount({\n          ...channelOverlapsCount,\n          ...channelOverlaps,\n        });\n        setNewOverlaps((prev) => prev + 1);\n        setOverlaps(itemsOverlaps);\n        return {\n          programs: data,\n          programOverlaps: itemsOverlaps,\n        };\n      }\n      return { programs: data, programOverlaps: {} };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isMultirowsDnd,\n      isOverlapEnabled,\n      isVerticalMode,\n      epg,\n      channelsSerialized,\n      overlapsSerialized,\n      startDateTime,\n      endDateTime,\n      itemHeight,\n      hourWidth,\n      hoursInDays,\n      programChannelMapKey,\n      timezoneSerialized,\n      update,\n    ]\n  );\n\n  const gridItems = React.useMemo(\n    () => {\n      if (!grid.enabled) return [];\n      return getConvertedGridItems({\n        isVerticalMode,\n        channels,\n        dayWidth,\n        hourWidth,\n        timelineHeight,\n        sidebarWidth,\n        mode,\n        dayWidthResources: dayWidthResourcesProps,\n        daysResources,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      grid.enabled,\n      channelsSerialized,\n      mode.type,\n      dayWidthResourcesProps.numberOfHoursInDay,\n      dayWidthResourcesProps.numberOfMonths,\n      daysResources.numberOfDays,\n      dayWidth,\n      hourWidth,\n      sidebarWidth,\n      timelineHeight,\n      isVerticalMode,\n    ]\n  );\n\n  const theme: Theme = { ...defaultTheme, ...customTheme };\n\n  // -------- Handlers --------\n  const isProgramVisible = React.useCallback(\n    (position: Position, overlapsCount: number) => {\n      return getItemVisibility({\n        isVerticalMode,\n        itemOverscan,\n        overlapsCount,\n        position,\n        scrollY,\n        scrollX,\n        containerHeight: layoutHeight,\n        containerWidth: layoutWidth,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isVerticalMode, itemOverscan, layoutHeight, layoutWidth, scrollY, scrollX]\n  );\n\n  const isChannelVisible = React.useCallback(\n    (position: Pick<Position, \"top\" | \"height\">) =>\n      getSidebarItemVisibility({\n        isVerticalMode,\n        itemOverscan,\n        position,\n        scrollX,\n        scrollY,\n        containerHeight: layoutHeight,\n        containerWidth: layoutWidth,\n      }),\n\n    [isVerticalMode, itemOverscan, scrollY, scrollX, layoutHeight, layoutWidth]\n  );\n\n  const isTimelineVisible = React.useCallback(\n    (position: Pick<Position, \"left\" | \"width\">) =>\n      getTimelineItemVisibility({\n        position,\n        scrollY,\n        scrollX,\n        containerHeight: layoutHeight,\n        containerWidth: layoutWidth,\n        isVerticalMode,\n      }),\n    [scrollY, scrollX, layoutHeight, layoutWidth, isVerticalMode]\n  );\n\n  const dndOnSuccessCb = React.useCallback(\n    (event: ProgramWithOmittedUuid) => dnd?.onDnDSuccess?.(event),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const resizeMouseUp = React.useCallback(\n    (props: ResizeMouseUp) => {\n      const newTime = calculateItemDragSinceTill({\n        ...props,\n        hourWidth,\n        startDate,\n      });\n\n      epg[props.index].since = newTime.since;\n      epg[props.index].till = newTime.till;\n      setDndChannelUuid({\n        index: epg[props.index].channelIndex,\n        uuid: epg[props.index][programChannelMapKey] as string,\n      });\n      dndOnSuccessCb(epg[props.index]);\n      setForceUpdate();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isVerticalMode, startDate, hourWidth, programs]\n  );\n\n  const dragMouseUp = React.useCallback(\n    async (props: DragMouseUp) => {\n      const newTime = calculateItemDragSinceTill({\n        ...props,\n        hourWidth,\n        startDate,\n      });\n      const element = { ...epg[props.index] };\n\n      const checkChannelTopOutRange = () => {\n        const elementChannel = element.channelPosition;\n        if (\n          props.top > elementChannel.top + elementChannel.height - 1 ||\n          props.top < elementChannel.top - 1\n        ) {\n          return true;\n        }\n        return false;\n      };\n      const checkChannelTopInRange = () => {\n        const elementChannel = element.channelPosition;\n        return elementChannel.top <= props.top &&\n          props.top <= elementChannel.top + elementChannel.height\n          ? true\n          : false;\n      };\n\n      const isChannelTopInRange = checkChannelTopInRange();\n\n      const isChannelTopOutRange = checkChannelTopOutRange();\n      if (isMultirowsDnd && isChannelTopOutRange) {\n        const newChannel = channels.find(\n          (channel) => channel.position.top === props.top\n        );\n        const newChannelRange = channels.find(\n          (channel) =>\n            channel.position.top <= props.top &&\n            props.top <= channel.position.top + channel.position.height\n        );\n\n        if (newChannel) {\n          const newChannelEpgIndexes = getChannelEpgIndexes(\n            newChannel[channelMapKey]\n          );\n          if (newChannelEpgIndexes) {\n            epg[props.index].since = newTime.since;\n            epg[props.index].till = newTime.till;\n            epg[props.index][programChannelMapKey] = newChannel[\n              channelMapKey\n            ] as string;\n            epg[props.index].channelIndex = newChannel.index as number;\n            epg[props.index].channelPosition = {\n              top: newChannel.position.top,\n              height: newChannel.position.height,\n              left: newChannel.position.left,\n            };\n          } else {\n            setChannelEpgIndexes({\n              uuid: newChannel[channelMapKey],\n              first: props.index,\n              last: props.index,\n            });\n            epg[props.index].since = newTime.since;\n            epg[props.index].till = newTime.till;\n            epg[props.index][programChannelMapKey] = newChannel[\n              channelMapKey\n            ] as string;\n            epg[props.index].channelIndex = newChannel.index as number;\n            epg[props.index].channelPosition = {\n              top: newChannel.position.top,\n              height: newChannel.position.height,\n              left: newChannel.position.left,\n            };\n          }\n        } else if (newChannelRange) {\n          epg[props.index].since = newTime.since;\n          epg[props.index].till = newTime.till;\n          epg[props.index][programChannelMapKey] = newChannelRange[\n            channelMapKey\n          ] as string;\n          epg[props.index].channelIndex = newChannelRange.index as number;\n          epg[props.index].channelPosition = {\n            top: newChannelRange.position.top,\n            height: newChannelRange.position.height,\n            left: newChannelRange.position.left,\n          };\n        }\n      } else if (isMultirowsDnd && isChannelTopInRange) {\n        epg[props.index].since = newTime.since;\n        epg[props.index].till = newTime.till;\n      } else {\n        epg[props.index].since = newTime.since;\n        epg[props.index].till = newTime.till;\n        setDndChannelUuid({\n          index: epg[props.index].channelIndex,\n          uuid: epg[props.index][programChannelMapKey] as string,\n        });\n      }\n      dndOnSuccessCb(epg[props.index]);\n      setForceUpdate();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isMultirowsDnd, startDate, hourWidth, programs]\n  );\n\n  const handleGetLayoutData = React.useCallback(\n    (events: ProgramItem[]) => events.map((event) => ({ ...event.data })),\n    []\n  );\n\n  const handleOpenChannelGroupTree = React.useCallback(\n    (data: ChannelWithPosition) => {\n      channelsEpg[data.index].isOpen = !channelsEpg[data.index].isOpen;\n      setForceChannelsUpdate();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [channels]\n  );\n\n  const handleGetDropItemData = React.useCallback(\n    (data: ProgramWithOmittedUuid) => setUpdatedLayoutItem(data, mode.type),\n    [mode.type]\n  );\n\n  const getEpgProps = () => ({\n    isVerticalMode,\n    isRTL,\n    isSidebar,\n    isLine,\n    isTimeline,\n    width,\n    height,\n    sidebarWidth,\n    timelineHeight,\n    ref: containerRef,\n    theme,\n    globalStyles,\n  });\n\n  const getLayoutProps = () => ({\n    isVerticalMode,\n    isRTL,\n    isBaseTimeFormat,\n    isSidebar,\n    isTimeline,\n    isLine,\n    isCurrentTime,\n    isProgramVisible,\n    isChannelVisible,\n    isTimelineVisible,\n    isToday,\n    isResize,\n    programs,\n    programOverlaps,\n    channels,\n    channelOverlapsCount,\n    layerOverlapLevel: overlap.layerOverlapLevel as number,\n    snap,\n    grid,\n    gridItems,\n    dnd,\n    startDate,\n    endDate,\n    hoursInDays,\n    liveRefreshTime,\n    scrollY,\n    dayWidth,\n    hourWidth,\n    sidebarWidth,\n    timelineHeight,\n    itemHeight,\n    currentDate,\n    mode,\n    timezone,\n    timelineDividers,\n    overlapMode: overlap.mode,\n    overlap,\n    areas,\n    openChannelGroupTree: handleOpenChannelGroupTree,\n    onScroll,\n    dragMouseUp,\n    resizeMouseUp,\n    ...daysResources,\n    ...dayWidthResourcesProps,\n    ref: scrollBoxRef,\n  });\n\n  return {\n    isLayoutBottom,\n    isLayoutRight,\n    getEpgProps,\n    getLayoutProps,\n    getLayoutData: handleGetLayoutData,\n    getDropItemData: handleGetDropItemData,\n    onScrollToNow,\n    onScrollTop,\n    onScrollLeft,\n    onScrollRight,\n    scrollY,\n    scrollX,\n  };\n}\n","import React from \"react\";\n\n// Import helpers\nimport { useIsomorphicLayoutEffect } from \"../helpers\";\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const useIsomorphicEffect = useIsomorphicLayoutEffect();\n  const savedCallback = React.useRef(callback);\n\n  useIsomorphicEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  React.useEffect(() => {\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import React from \"react\";\n\nexport function useIsTouchDevice() {\n  const [isMobile, setIsMobile] = React.useState(false);\n\n  React.useEffect(() => {\n    function checkDevice() {\n      const iOS =\n        /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document);\n      const androidOrWebOS = /Android|webOS/.test(navigator.userAgent);\n\n      const isMobileDevice = iOS || androidOrWebOS;\n\n      const isTouchScreen =\n        \"ontouchstart\" in window ||\n        navigator.maxTouchPoints > 0 ||\n        (window.matchMedia &&\n          window.matchMedia(\"(any-pointer: coarse)\").matches);\n\n      setIsMobile(isMobileDevice || isTouchScreen);\n    }\n\n    checkDevice();\n\n    window.addEventListener(\"resize\", checkDevice);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkDevice);\n    };\n  }, []);\n\n  return isMobile;\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { format } from \"date-fns\";\n\n// Import interfaces\nimport { DragAndDrop, Mode, Program, Snap } from \"../helpers/interfaces\";\n\n// Import types\nimport {\n  ProgramItem,\n  BaseTimeFormat,\n  DragMouseUp,\n  ResizeMouseUp,\n  DateTime,\n} from \"../helpers/types\";\n\n// Import helpers\nimport {\n  TIME_FORMAT,\n  calculateItemDragSinceTill,\n  getLiveStatus,\n  omit,\n} from \"../helpers\";\n\n// Import hooks\nimport { useInterval } from \"./useInterval\";\nimport { useDrag } from \"./useDrag\";\nimport { useResize } from \"./useResize\";\n\ninterface useProgramProps<T> {\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  isBaseTimeFormat: BaseTimeFormat;\n  isResize?: boolean;\n  startDate: DateTime;\n  contentHeight: number;\n  dayWidth: number;\n  hourWidth: number;\n  program: T;\n  liveRefreshTime: number;\n  minWidth?: number;\n  itemHeight: number;\n  snap?: Snap;\n  mode: Mode;\n  dnd: DragAndDrop;\n  dragMouseUp: (data: DragMouseUp) => void;\n  resizeMouseUp: (data: ResizeMouseUp) => void;\n}\n\nexport function useProgram<T extends ProgramItem>({\n  isVerticalMode = false,\n  isRTL = false,\n  isResize = false,\n  isBaseTimeFormat,\n  startDate,\n  contentHeight,\n  dayWidth,\n  itemHeight,\n  hourWidth,\n  minWidth = 200,\n  program,\n  liveRefreshTime,\n  mode,\n  snap,\n  dnd,\n  dragMouseUp,\n  resizeMouseUp,\n}: useProgramProps<T>) {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  const { data, position } = program;\n  const { width, height } = position;\n  const { since, till } = data;\n\n  // Hooks\n  const [isLive, setIsLive] = React.useState<boolean>(() =>\n    getLiveStatus(since, till)\n  );\n\n  const options = {\n    isVerticalMode,\n    initialPosition: position,\n    data,\n    dayWidth,\n    contentHeight,\n    elementRef,\n  };\n\n  const resizeOptions = {\n    ...options,\n    isResize,\n    snapX: snap?.x,\n    mouseUpCb: resizeMouseUp,\n  };\n\n  const {\n    currentPositionX: resizeCurrentPositionX,\n    width: resizeWidth,\n    resizeEvents,\n  } = useResize(resizeOptions);\n\n  const dndMouseUpCb = React.useCallback(\n    (props: DragMouseUp, data: Program) => {\n      const newTime = calculateItemDragSinceTill({\n        ...props,\n        hourWidth,\n        startDate,\n      });\n      const options = {\n        ...newTime,\n        id: props.id,\n        data,\n      };\n\n      return dnd?.onDnDMouseUp?.(options) ?? true;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  const dragOptions = {\n    ...options,\n    isDndEnabled: dnd.enabled ? !resizeEvents.resources.isResizing : false,\n    isDndMutlirows: dnd.mode === \"multi-rows\",\n    dndSnapX: snap?.x,\n    dndSnapY: snap?.y,\n    itemHeight,\n    dndMouseUpCb,\n    mouseUpCb: dragMouseUp,\n  };\n\n  const { currentPositionX, dndEvents } = useDrag(dragOptions);\n\n  // Variables\n  const newPosition = { ...omit(position, \"egdeEnd\") };\n  const styles = { width, position: newPosition };\n\n  const formatTime = (\n    date: string | number | Date,\n    formatType: string = TIME_FORMAT.HOURS_MIN\n  ) => format(new Date(date), formatType).replace(/\\s/g, \"\");\n\n  const set12HoursTimeFormat = () => {\n    if (mode.type === \"week\" || mode.type === \"month\") {\n      if (isBaseTimeFormat) return TIME_FORMAT.BASE_DAY_MONTH;\n      return TIME_FORMAT.DAY_MONTH;\n    }\n\n    if (isBaseTimeFormat) return TIME_FORMAT.BASE_HOURS_TIME;\n    return TIME_FORMAT.HOURS_MIN;\n  };\n\n  const getRTLSinceTime = (since: string | number | Date) =>\n    isRTL ? till : since;\n\n  const getRTLTillTime = (till: string | number | Date) =>\n    isRTL ? since : till;\n\n  // Effects\n  useInterval(() => {\n    const status = getLiveStatus(since, till);\n    setIsLive(status);\n  }, liveRefreshTime);\n\n  const isMinWidth = isVerticalMode ? height > minWidth : width > minWidth;\n\n  const getMouseEventTempTime = () => {\n    const left = resizeEvents.isResizing\n      ? resizeCurrentPositionX\n      : currentPositionX;\n\n    let options = {\n      id: data.id,\n      index: data.index,\n      since: data.since,\n      till: data.till,\n      top: 0,\n      left,\n      initialPositionTop: position.top,\n      initialPositionLeft: position.left,\n      initialWidth: width,\n      width: resizeWidth,\n      hourWidth,\n    };\n\n    if (isVerticalMode) {\n      options.initialPositionLeft = position.top;\n      options.initialPositionTop = position.left;\n      options.initialWidth = height;\n    }\n\n    const { since, till } = calculateItemDragSinceTill(options);\n    const formatTempTime = (time: string) =>\n      formatTime(getRTLSinceTime(time), set12HoursTimeFormat()).toLowerCase();\n\n    return { since: formatTempTime(since), till: formatTempTime(till) };\n  };\n\n  const getMouseEvents = useCallback(\n    () => ({\n      ...resizeEvents.resources,\n      ...dndEvents,\n    }),\n    [dndEvents, resizeEvents.resources]\n  );\n  const isMouseEvent =\n    dndEvents.isDragging ||\n    (resizeEvents.resources.isResizing as boolean) ||\n    false;\n  return {\n    isMouseEvent,\n    isLive,\n    isMinWidth,\n    isRTL,\n    resizeEvents,\n    formatTime,\n    set12HoursTimeFormat,\n    getMouseEvents,\n    getMouseEventTempTime,\n    getRTLSinceTime,\n    getRTLTillTime,\n    styles,\n  };\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n// Import interfaces\nimport { Program } from \"../helpers/interfaces\";\n// Import types\nimport { Position, ResizeMouseUp } from \"../helpers/types\";\n// Import hooks\nimport { useIsTouchDevice } from \"./useIsTouchDevice\";\n\ninterface UseResizeProps {\n  isVerticalMode: boolean;\n  isResize: boolean;\n  initialPosition: Omit<Position, \"edgeEnd\">;\n  data: Program;\n  dayWidth: number;\n  contentHeight: number;\n  snapX?: number;\n  elementRef: React.RefObject<HTMLDivElement>;\n  mouseUpCb: (props: ResizeMouseUp) => void;\n}\n\ninterface DndPosition {\n  x: number;\n  y: number;\n  width: number;\n}\n\nexport function useResize({\n  isResize,\n  isVerticalMode,\n  data,\n  dayWidth,\n  contentHeight,\n  initialPosition,\n  snapX,\n  elementRef,\n  mouseUpCb,\n}: UseResizeProps) {\n  const isClicked = useRef<boolean>(false);\n  const isMouseMove = useRef<boolean>(false);\n  const isTouchDevice = useIsTouchDevice();\n\n  // State\n  const [isPreventScroll, setIsPreventScroll] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const [isResizingLeft, setIsResizingLeft] = useState(false);\n  const [isResizingRight, setIsResizingRight] = useState(false);\n\n  const [mouseOffsetX, setMouseOffsetX] = useState<number>(0);\n\n  const [position, setPosition] = useState<DndPosition>({\n    x: initialPosition.left,\n    y: initialPosition.top,\n    width: isVerticalMode ? initialPosition.height : initialPosition.width,\n  });\n\n  const [coords, setCoords] = useState<{\n    startY: number;\n    lastY: number;\n    startX: number;\n    lastX: number;\n  }>({\n    startY: initialPosition.top,\n    lastY: initialPosition.top,\n    startX: initialPosition.left,\n    lastX: initialPosition.left,\n  });\n\n  const { id, index, since, till } = data;\n\n  const initialWidth = useMemo(\n    () => (isVerticalMode ? initialPosition.height : initialPosition.width),\n    [isVerticalMode, initialPosition.height, initialPosition.width]\n  );\n\n  const handleMouseDown = useCallback(\n    (left: boolean = false) =>\n      (e: React.MouseEvent | React.TouchEvent) => {\n        e.stopPropagation();\n        isClicked.current = true;\n\n        isTouchDevice && setIsPreventScroll(true);\n        setIsResizing(true);\n\n        const container = elementRef.current;\n        if (!container) return;\n\n        const event = (\n          isTouchDevice ? (e as React.TouchEvent<HTMLDivElement>).touches[0] : e\n        ) as React.MouseEvent;\n        setMouseOffsetX(isVerticalMode ? event.pageY : event.pageX);\n        coords.startY = event.clientY;\n        coords.startX = event.clientX;\n        if (left) {\n          setIsResizingLeft(true);\n          setIsResizingRight(false);\n        } else {\n          setIsResizingLeft(false);\n          setIsResizingRight(true);\n        }\n      },\n    [isTouchDevice, isVerticalMode, coords, elementRef]\n  );\n\n  const handleMouseClick = useCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      if (isMouseMove.current) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    },\n    []\n  );\n\n  const handleMouseUp = useCallback(\n    () => {\n      if (isVerticalMode) {\n        coords.lastY = elementRef.current?.offsetTop as number;\n        coords.lastX = elementRef.current?.offsetLeft as number;\n        position.width = elementRef.current?.offsetHeight as number;\n      } else {\n        coords.lastY = elementRef.current?.offsetTop as number;\n        coords.lastX = elementRef.current?.offsetLeft as number;\n        position.width = elementRef.current?.offsetWidth as number;\n      }\n\n      const options = {\n        id,\n        index,\n        since,\n        till,\n      };\n      if (\n        !isVerticalMode &&\n        isClicked.current &&\n        (initialPosition.left !== coords.lastX ||\n          initialPosition.width !== position.width)\n      ) {\n        mouseUpCb({\n          ...options,\n          top: coords.lastY,\n          left: coords.lastX,\n          width: position.width,\n          initialPositionTop: initialPosition.top,\n          initialPositionLeft: initialPosition.left,\n          initialWidth: initialPosition.width,\n        });\n      }\n      if (\n        isVerticalMode &&\n        isClicked.current &&\n        (initialPosition.top !== coords.lastY ||\n          initialPosition.width !== position.width)\n      ) {\n        mouseUpCb({\n          ...options,\n          top: coords.lastX,\n          left: coords.lastY,\n          width: position.width,\n          initialPositionTop: initialPosition.left,\n          initialPositionLeft: initialPosition.top,\n          initialWidth: initialPosition.height,\n        });\n      }\n      setIsResizing(false);\n      isClicked.current = false;\n      if (isTouchDevice) {\n        setIsPreventScroll(false);\n      }\n      setTimeout(() => (isMouseMove.current = false), 0);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isTouchDevice,\n      isVerticalMode,\n      id,\n      index,\n      since,\n      till,\n      initialWidth,\n      initialPosition.left,\n      initialPosition.width,\n      mouseUpCb,\n    ]\n  );\n\n  const initialPositionSerialized = JSON.stringify(initialPosition);\n  useEffect(() => {\n    // if (isVerticalMode) {\n    //   setCoords({\n    //     startY: initialPosition.top,\n    //     lastY: initialPosition.top,\n    //     startX: initialPosition.left,\n    //     lastX: initialPosition.left,\n    //   });\n    // }\n    setCoords({\n      startY: initialPosition.top,\n      lastY: initialPosition.top,\n      startX: initialPosition.left,\n      lastX: initialPosition.left,\n    });\n    setPosition({\n      x: initialPosition.left,\n      y: initialPosition.top,\n      width: isVerticalMode ? initialPosition.height : initialPosition.width,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isVerticalMode, initialPositionSerialized]);\n\n  useEffect(() => {\n    function handleMouseMove(e: MouseEvent | TouchEvent) {\n      if (isPreventScroll) {\n        e.preventDefault();\n      }\n      if (!isResizing) return;\n      if (!isClicked.current) return;\n      if (!elementRef.current) return;\n      isMouseMove.current = true;\n\n      const event = (\n        isTouchDevice ? (e as TouchEvent).touches[0] : e\n      ) as MouseEvent;\n\n      const element = elementRef.current;\n      const elementRect = element.getBoundingClientRect();\n\n      if (isVerticalMode) {\n        const offsetHeight = elementRef.current?.offsetHeight as number;\n        const nextY = event.clientY - coords.startY + coords.lastY;\n        const snapYTop = snapX\n          ? Math.round((event.pageY - mouseOffsetX) / snapX) * snapX\n          : event.pageY - mouseOffsetX;\n        const newHeightTop = initialWidth - snapYTop;\n        const newHeightBottom = snapX\n          ? Math.round((event.clientY - elementRect.top + 14) / snapX) * snapX\n          : event.clientY - elementRect.top + 14;\n\n        const isInLeftLayout = nextY >= 0 && nextY <= dayWidth - offsetHeight;\n        // To be used in the future\n        // const isInLeftLayout =\n        //   nextY >= 0 && nextY <= contentHeight - offsetHeight;\n        const isInRightLayout = coords.lastY + newHeightBottom <= dayWidth;\n        if (isResizingLeft && isInLeftLayout && newHeightTop >= 50) {\n          const top = initialPosition.top + snapYTop;\n          element.style.height = `${newHeightTop}px`;\n          element.style.top = `${top}px`;\n          setPosition((prev) => ({ ...prev, y: top, width: newHeightTop }));\n        } else if (\n          isResizingRight &&\n          isInRightLayout &&\n          newHeightBottom >= 50\n        ) {\n          element.style.height = `${newHeightBottom}px`;\n          element.style.top = `${initialPosition.top}px`;\n          setPosition((prev) => ({\n            ...prev,\n            y: initialPosition.top,\n            width: newHeightBottom,\n          }));\n        }\n      } else {\n        const offsetWidth = elementRef.current?.offsetWidth as number;\n        const nextX = event.clientX - coords.startX + coords.lastX;\n        const snapXLeft = snapX\n          ? Math.round((event.pageX - mouseOffsetX) / snapX) * snapX\n          : event.pageX - mouseOffsetX;\n        const newWidthLeft = initialWidth - snapXLeft;\n\n        const newWidthRight = snapX\n          ? Math.round((event.clientX - elementRect.left + 14) / snapX) * snapX\n          : event.clientX - elementRect.left + 14;\n\n        const isInLeftLayout = nextX >= 0 && nextX <= dayWidth - offsetWidth;\n        const isInRightLayout = coords.lastX + newWidthRight <= dayWidth;\n        if (isResizingLeft && isInLeftLayout && newWidthLeft >= 50) {\n          const left = initialPosition.left + snapXLeft;\n\n          element.style.width = `${newWidthLeft}px`;\n          element.style.left = `${left}px`;\n          setPosition((prev) => ({ ...prev, x: left, width: newWidthLeft }));\n        } else if (isResizingRight && isInRightLayout && newWidthRight >= 50) {\n          element.style.width = `${newWidthRight}px`;\n          setPosition((prev) => ({ ...prev, width: newWidthRight }));\n        }\n      }\n    }\n\n    const mouseMoveEvent = isTouchDevice ? \"touchmove\" : \"mousemove\";\n    const mouseUpEvent = isTouchDevice ? \"touchend\" : \"mouseup\";\n    const options = isTouchDevice ? { passive: false } : undefined;\n\n    if (isResize) {\n      document.addEventListener(mouseMoveEvent, handleMouseMove, options);\n      document.addEventListener(mouseUpEvent, handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener(mouseMoveEvent, handleMouseMove);\n      document.removeEventListener(mouseUpEvent, handleMouseUp);\n    };\n  }, [\n    isTouchDevice,\n    isPreventScroll,\n    isResize,\n    isVerticalMode,\n    isResizing,\n    isResizingLeft,\n    isResizingRight,\n    dayWidth,\n    contentHeight,\n    initialWidth,\n    initialPosition.top,\n    initialPosition.left,\n    coords,\n    snapX,\n    mouseOffsetX,\n    elementRef,\n    handleMouseUp,\n  ]);\n\n  if (isResize) {\n    const getEvents = (isLeft?: boolean) => {\n      if (isTouchDevice) {\n        return {\n          onTouchStart: handleMouseDown(isLeft),\n          onTouchEnd: handleMouseUp,\n        };\n      }\n      return {\n        onMouseDown: handleMouseDown(isLeft),\n        onMouseUp: handleMouseUp,\n      };\n    };\n\n    return {\n      width: position.width,\n      initialWidth: isVerticalMode\n        ? initialPosition.height\n        : initialPosition.width,\n      currentPositionX: isVerticalMode ? position.y : position.x,\n      resizeEvents: {\n        isResizing,\n        resources: { ref: elementRef, isResizing },\n        eventsLeft: {\n          isResize,\n          isVerticalMode,\n          left: true,\n          onClick: handleMouseClick,\n          ...getEvents(true),\n        },\n        eventsRight: {\n          isResize,\n          isVerticalMode,\n          onClick: handleMouseClick,\n          ...getEvents(),\n        },\n      },\n    };\n  }\n\n  return {\n    currentPositionX: isVerticalMode\n      ? initialPosition.top\n      : initialPosition.left,\n    width: isVerticalMode ? initialPosition.height : initialPosition.width,\n    resizeEvents: {\n      isResizing: false,\n      resources: {},\n      eventsLeft: {},\n      eventsRight: {},\n    },\n  };\n}\n","import { useRef, useState, useCallback, MouseEvent, useEffect } from \"react\";\n// Import interfaces\nimport { Program } from \"../helpers/interfaces\";\n// Import types\nimport { DragMouseUp, Position } from \"../helpers/types\";\n// Import helpers\nimport { getDefaultDragProps } from \"../helpers\";\n// Import hooks\nimport { useIsTouchDevice } from \"./useIsTouchDevice\";\n\ninterface DndPosition {\n  x: number;\n  y: number;\n}\n\ninterface UseDragProps {\n  isVerticalMode: boolean;\n  isDndEnabled: boolean;\n  isDndMutlirows: boolean;\n  initialPosition: Omit<Position, \"edgeEnd\">;\n  data: Program;\n  dayWidth: number;\n  itemHeight: number;\n  contentHeight: number;\n  dndSnapX?: number;\n  dndSnapY?: number;\n  elementRef: React.RefObject<HTMLDivElement>;\n  mouseUpCb: (props: DragMouseUp) => void;\n  dndMouseUpCb?: (props: DragMouseUp, data: Program) => void;\n}\n\nexport function useDrag(props: UseDragProps) {\n  const {\n    isDndEnabled,\n    isDndMutlirows,\n    isVerticalMode,\n    initialPosition,\n    data,\n    dayWidth,\n    itemHeight,\n    contentHeight,\n    dndSnapX,\n    dndSnapY = itemHeight,\n    elementRef,\n    mouseUpCb,\n    dndMouseUpCb,\n  } = props;\n  const isClicked = useRef<boolean>(false);\n  const isMouseMove = useRef<boolean>(false);\n  const isTouchDevice = useIsTouchDevice();\n\n  const [isDragging, setIsDragging] = useState(false);\n  const [isPreventScroll, setIsPreventScroll] = useState(false);\n\n  const [position, setPosition] = useState<DndPosition>({\n    x: initialPosition.left,\n    y: initialPosition.top,\n  });\n\n  const [coords, setCoords] = useState<{\n    startY: number;\n    lastY: number;\n    startX: number;\n    lastX: number;\n  }>({\n    startY: initialPosition.top,\n    lastY: initialPosition.top,\n    startX: initialPosition.left,\n    lastX: initialPosition.left,\n  });\n\n  const { id, index, since, till, channelPosition } = data;\n\n  const handleMouseDown = useCallback(\n    (e: MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) => {\n      e.stopPropagation();\n      isClicked.current = true;\n\n      isTouchDevice && setIsPreventScroll(true);\n      setIsDragging(true);\n      const event = (\n        isTouchDevice ? (e as React.TouchEvent<HTMLDivElement>).touches[0] : e\n      ) as MouseEvent<HTMLDivElement>;\n      coords.startY = event.clientY;\n      coords.startX = event.clientX;\n    },\n    [isTouchDevice, coords]\n  );\n\n  const handleMouseClick = useCallback((e: MouseEvent<HTMLDivElement>) => {\n    if (isMouseMove.current) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }, []);\n\n  const handleMouseUp = useCallback(\n    async () => {\n      if (isVerticalMode) {\n        coords.lastY = elementRef.current?.offsetTop as number;\n        coords.lastX = elementRef.current?.offsetLeft as number;\n      } else {\n        coords.lastY = elementRef.current?.offsetTop as number;\n        coords.lastX = elementRef.current?.offsetLeft as number;\n      }\n\n      const options = {\n        id,\n        index,\n        since,\n        till,\n      };\n\n      if (\n        !isVerticalMode &&\n        isClicked.current &&\n        (initialPosition.left !== coords.lastX ||\n          initialPosition.top !== coords.lastY)\n      ) {\n        const optionsYX = {\n          ...options,\n          top: coords.lastY,\n          left: coords.lastX,\n          initialPositionLeft: initialPosition.left,\n          initialPositionTop: initialPosition.top,\n        };\n        const isDndMouseUpSuccess = await dndMouseUpCb?.(optionsYX, data);\n        if (isDndMouseUpSuccess) {\n          mouseUpCb(optionsYX);\n        } else {\n          elementRef.current!.style.left = `${initialPosition.left}px`;\n          elementRef.current!.style.top = `${initialPosition.top}px`;\n          setPosition((prev) => ({\n            ...prev,\n            x: initialPosition.left,\n            y: initialPosition.top,\n          }));\n        }\n      }\n      if (\n        isVerticalMode &&\n        isClicked.current &&\n        (initialPosition.left !== coords.lastX ||\n          initialPosition.top !== coords.lastY)\n      ) {\n        const optionsY = {\n          ...options,\n          top: coords.lastX,\n          left: coords.lastY,\n          initialPositionLeft: initialPosition.top,\n          initialPositionTop: initialPosition.left,\n        };\n        const isDndMouseUpSuccess = await dndMouseUpCb?.(optionsY, data);\n        if (isDndMouseUpSuccess) {\n          mouseUpCb(optionsY);\n        } else {\n          elementRef.current!.style.left = `${initialPosition.left}px`;\n          elementRef.current!.style.top = `${initialPosition.top}px`;\n          setPosition((prev) => ({\n            ...prev,\n            x: initialPosition.left,\n            y: initialPosition.top,\n          }));\n        }\n      }\n      isClicked.current = false;\n      setIsDragging(false);\n      if (isTouchDevice) {\n        setIsPreventScroll(false);\n      }\n      setTimeout(() => (isMouseMove.current = false), 0);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isVerticalMode,\n      initialPosition.top,\n      initialPosition.left,\n      coords,\n      id,\n      index,\n      since,\n      till,\n      mouseUpCb,\n    ]\n  );\n\n  const initialPositionSerialized = JSON.stringify(initialPosition);\n  useEffect(() => {\n    // if (isVerticalMode) {\n    //   setCoords({\n    //     startY: initialPosition.top,\n    //     lastY: initialPosition.top,\n    //     startX: initialPosition.left,\n    //     lastX: initialPosition.left,\n    //   });\n    // }\n    setCoords({\n      startY: initialPosition.top,\n      lastY: initialPosition.top,\n      startX: initialPosition.left,\n      lastX: initialPosition.left,\n    });\n    setPosition({\n      x: initialPosition.left,\n      y: initialPosition.top,\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isVerticalMode, initialPositionSerialized]);\n\n  useEffect(() => {\n    function handleMouseMove(e: globalThis.MouseEvent | TouchEvent) {\n      if (isPreventScroll) {\n        e.preventDefault();\n      }\n      if (!isDndEnabled) return;\n      if (!isClicked.current) return;\n      if (!elementRef.current) return;\n      isMouseMove.current = true;\n\n      const event = (\n        isTouchDevice ? (e as TouchEvent).touches[0] : e\n      ) as globalThis.MouseEvent;\n\n      const offsetWidth = (\n        isVerticalMode\n          ? elementRef.current?.offsetHeight\n          : elementRef.current?.offsetWidth\n      ) as number;\n      const offsetHeight = (\n        isVerticalMode\n          ? elementRef.current?.offsetWidth\n          : elementRef.current?.offsetHeight\n      ) as number;\n      const elementChannel = channelPosition;\n\n      if (isVerticalMode) {\n        const nextYValue = event.clientY - coords.startY + coords.lastY;\n        const nextY = dndSnapX\n          ? Math.round(nextYValue / dndSnapX) * dndSnapX\n          : nextYValue;\n\n        if (isDndMutlirows) {\n          const nextX = event.clientX - coords.startX + coords.lastX;\n          const nextXSnap = Math.round(nextX / dndSnapY) * dndSnapY;\n          if (\n            nextXSnap >= 0 &&\n            nextXSnap <= contentHeight - offsetHeight &&\n            nextY >= 0 &&\n            nextY <= dayWidth - offsetWidth\n          ) {\n            const checkTopRange = () => {\n              if (nextXSnap > elementChannel.top + elementChannel.height - 1) {\n                return true;\n              } else if (nextXSnap < elementChannel.top - 1) {\n                return true;\n              }\n              return false;\n            };\n            const isOutTopRange = checkTopRange();\n\n            if (!isOutTopRange) {\n              elementRef.current!.style.top = `${nextY}px`;\n              elementRef.current!.style.left = `${initialPosition.left}px`;\n              setPosition((prev) => ({\n                ...prev,\n                y: nextY,\n                x: initialPosition.left,\n              }));\n            } else {\n              elementRef.current!.style.top = `${nextY}px`;\n              elementRef.current!.style.left = `${nextXSnap}px`;\n              setPosition((prev) => ({ ...prev, y: nextY, x: nextXSnap }));\n            }\n          }\n        } else if (nextY >= 0 && nextY <= dayWidth - offsetWidth) {\n          elementRef.current!.style.top = `${nextY}px`;\n          setPosition((prev) => ({ ...prev, y: nextY }));\n        }\n      } else {\n        const nextXValue = event.clientX - coords.startX + coords.lastX;\n        const nextX = dndSnapX\n          ? Math.round(nextXValue / dndSnapX) * dndSnapX\n          : nextXValue;\n\n        if (isDndMutlirows) {\n          const nextY = event.clientY - coords.startY + coords.lastY;\n          const nextYSnap = Math.round(nextY / dndSnapY) * dndSnapY;\n          if (\n            nextYSnap >= 0 &&\n            nextYSnap <= contentHeight - offsetHeight &&\n            nextX >= 0 &&\n            nextX <= dayWidth - offsetWidth\n          ) {\n            const checkTopRange = () => {\n              if (nextYSnap > elementChannel.top + elementChannel.height - 1) {\n                return true;\n              } else if (nextYSnap < elementChannel.top - 1) {\n                return true;\n              }\n              return false;\n            };\n            const isOutTopRange = checkTopRange();\n\n            if (!isOutTopRange) {\n              elementRef.current!.style.left = `${nextX}px`;\n              elementRef.current!.style.top = `${initialPosition.top}px`;\n              setPosition((prev) => ({\n                ...prev,\n                x: nextX,\n                y: initialPosition.top,\n              }));\n            } else {\n              elementRef.current!.style.top = `${nextYSnap}px`;\n              elementRef.current!.style.left = `${nextX}px`;\n              setPosition((prev) => ({ ...prev, x: nextX, y: nextYSnap }));\n            }\n          }\n        } else if (nextX >= 0 && nextX <= dayWidth - offsetWidth) {\n          elementRef.current!.style.left = `${nextX}px`;\n          setPosition((prev) => ({ ...prev, x: nextX }));\n        }\n      }\n    }\n\n    const mouseMoveEvent = isTouchDevice ? \"touchmove\" : \"mousemove\";\n    const mouseUpEvent = isTouchDevice ? \"touchend\" : \"mouseup\";\n    const options = isTouchDevice ? { passive: false } : undefined;\n    if (isDndEnabled) {\n      document.addEventListener(mouseMoveEvent, handleMouseMove, options);\n      document.addEventListener(mouseUpEvent, handleMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener(mouseMoveEvent, handleMouseMove);\n      document.removeEventListener(mouseUpEvent, handleMouseUp);\n    };\n  }, [\n    isTouchDevice,\n    isPreventScroll,\n    isDndEnabled,\n    isVerticalMode,\n    isDragging,\n    isDndMutlirows,\n    initialPosition.top,\n    initialPosition.left,\n    channelPosition,\n    dndSnapX,\n    dndSnapY,\n    coords,\n    dayWidth,\n    itemHeight,\n    contentHeight,\n    elementRef,\n    handleMouseUp,\n  ]);\n\n  if (isDndEnabled) {\n    const events = isTouchDevice\n      ? {\n          onTouchStart: handleMouseDown,\n          onTouchEnd: handleMouseUp,\n        }\n      : { onMouseDown: handleMouseDown, onMouseUp: handleMouseUp };\n    return {\n      dndEvents: {\n        isDragging,\n        ref: elementRef,\n        onClick: handleMouseClick,\n        ...events,\n      },\n      currentPositionX: isVerticalMode ? position.y : position.x,\n    };\n  }\n\n  return getDefaultDragProps(initialPosition.left);\n}\n","import { useMemo } from \"react\";\nimport { format } from \"date-fns\";\nimport { toDate } from \"date-fns-tz\";\n\n// Import interfaces\nimport { Timeline as ITimeline } from \"../helpers/interfaces\";\n\n// Import helpers\nimport {\n  TIME_FORMAT,\n  generateArray,\n  generateTimelineSlots,\n  HOURS_IN_DAY,\n  getTimelineMonthsWidth,\n  getFormattedWeekMonthDate,\n  getTodayHoursInDays,\n} from \"../helpers\";\n\ntype UseTimelineProps = ITimeline;\n\nexport function useTimeline(props: UseTimelineProps) {\n  const { isBaseTimeFormat, isRTL, isSidebar, isVerticalMode } = props;\n  const { timezone, dayWidth, hourWidth, sidebarWidth, timelineHeight } = props;\n  const {\n    mode,\n    startDate,\n    endDate,\n    hoursInDays,\n    days,\n    liveRefreshTime,\n    months,\n    numberOfDays,\n    numberOfHoursInDay,\n    numberOfMonths,\n    offsetStartHoursRange,\n    timelineDividers,\n    renderCurrentTime,\n  } = props;\n\n  // Handlers\n  const getTime = (index: number | string) => {\n    if (typeof index === \"string\") return { time: index, isNewDay: true };\n\n    const date = new Date();\n    const baseDate = format(date, TIME_FORMAT.DATE);\n    const time = index < 10 ? `0${index}` : index;\n\n    if (isBaseTimeFormat) {\n      const date = new Date(`${baseDate}T${time}:00:00`);\n      const baseFormat = format(date, TIME_FORMAT.BASE_HOURS_TIME)\n        .toLowerCase()\n        .replace(/\\s/g, \"\");\n\n      return { time: baseFormat, isNewDay: false };\n    }\n\n    return { time: `${time}:00`, isNewDay: false };\n  };\n\n  const formatWeekMonthDate = (date: string) =>\n    getFormattedWeekMonthDate({ date, mode, isBaseTimeFormat });\n\n  const getDayMonthName = (date: string) => {\n    const dateFormat =\n      mode.type === \"week\" ? TIME_FORMAT.DAY : TIME_FORMAT.YEAR;\n    return format(toDate(date), dateFormat);\n  };\n\n  const getCurrentTimeProps = () => ({\n    isBaseTimeFormat,\n    isVerticalMode,\n    isRTL,\n    timezone,\n    mode,\n    startDate,\n    endDate,\n    hoursInDays,\n    dayWidth,\n    timelineHeight,\n    hourWidth,\n    sidebarWidth,\n    liveRefreshTime,\n    renderCurrentTime,\n  });\n\n  const getTimelineProps = () => ({\n    isSidebar,\n    isVerticalMode,\n    dayWidth,\n    sidebarWidth,\n    timelineHeight,\n  });\n\n  // Variables\n  const timeSlots = useMemo(() => {\n    const options = {\n      isBaseTimeFormat,\n      days,\n      hoursInDays,\n      months,\n      numberOfDays,\n      numberOfHoursInDay,\n      numberOfMonths,\n      offsetStartHoursRange,\n    };\n\n    return generateTimelineSlots(mode.type, options);\n  }, [\n    mode.type,\n    isBaseTimeFormat,\n    days,\n    hoursInDays,\n    months,\n    numberOfDays,\n    numberOfHoursInDay,\n    numberOfMonths,\n    offsetStartHoursRange,\n  ]);\n  const isWeekMode = mode.type === \"week\";\n  const isMonthMode = mode.type === \"month\";\n  const isWeekMonthMode = isWeekMode || isMonthMode;\n  const isTodayInHoursInDays = getTodayHoursInDays(hoursInDays);\n  const areHoursInDays = hoursInDays.length > 0;\n\n  const weekDayWidth = hourWidth * HOURS_IN_DAY;\n  const monthsWidth = useMemo(\n    () => getTimelineMonthsWidth({ months, weekDayWidth }),\n    [months, weekDayWidth]\n  );\n  const dividers = generateArray(timelineDividers);\n\n  return {\n    isWeekMonthMode,\n    isMonthMode,\n    isTodayInHoursInDays,\n    areHoursInDays,\n    time: timeSlots,\n    weekDayWidth,\n    monthsWidth,\n    timelineHeight,\n    dividers,\n    timelineDividers,\n    formatWeekMonthDate,\n    getTime,\n    getDayMonthName,\n    getTimelineProps,\n    getCurrentTimeProps,\n  };\n}\n","import React from \"react\";\nimport { startOfDay } from \"date-fns\";\n\n// Import interfaces\nimport { HoursInDayDiffTime, Timezone } from \"../helpers/interfaces\";\n\n// Import types\nimport { DateTime } from \"../helpers/types\";\n\n// Import helpers\nimport {\n  SECONDS_IN_MINUTE,\n  HOUR_IN_MINUTES,\n  getPositionX,\n  getTodayHoursInDays,\n  getHoursInDaysPositionX,\n} from \"../helpers\";\n\n// Import hooks\nimport { useInterval } from \".\";\nimport { getNewDateTz } from \"../utils/time\";\n\ninterface useLineProps {\n  timezone: Timezone;\n  startDate: DateTime;\n  endDate: DateTime;\n  dayWidth: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  hoursInDays: HoursInDayDiffTime[];\n  liveRefreshTime: number;\n}\n\nexport function useLine({\n  timezone,\n  startDate,\n  endDate,\n  hoursInDays,\n  dayWidth,\n  hourWidth,\n  sidebarWidth,\n  liveRefreshTime,\n}: useLineProps) {\n  const [showLine, setShowLine] = React.useState<boolean>(true);\n  const [positionX, setPositionX] = React.useState<number>(getInitialState);\n\n  // Variables\n  const timezoneSerialized = JSON.stringify(timezone);\n  const hoursInDaysSerialized = JSON.stringify(hoursInDays);\n  const liveIntervalTime = liveRefreshTime * 1000;\n  const isDayEnd = positionX <= dayWidth;\n  const isScrollX = React.useMemo(\n    () => (isDayEnd ? liveIntervalTime : null),\n    [isDayEnd, liveIntervalTime]\n  );\n\n  // Helpers\n  function getInitialState() {\n    if (hoursInDays.length > 0)\n      return getHoursInDaysPositionX({\n        hoursInDays,\n        hourWidth,\n        sidebarWidth,\n        cb: setShowLine,\n      });\n\n    const positionX = getPositionX(\n      startOfDay(new Date(startDate)),\n      new Date(),\n      startDate,\n      endDate,\n      hourWidth\n    );\n    return positionX + sidebarWidth;\n  }\n\n  // Effects\n  useInterval(() => {\n    const offset = hourWidth / HOUR_IN_MINUTES;\n    const step = offset / SECONDS_IN_MINUTE;\n    const positionOffset = step * liveRefreshTime;\n\n    if (hoursInDays.length > 0) {\n      const idCurrentDay = getTodayHoursInDays(hoursInDays);\n\n      if (idCurrentDay) {\n        setShowLine(true);\n\n        setPositionX((prev) => prev + positionOffset);\n      } else {\n        setShowLine(false);\n      }\n    } else {\n      setPositionX((prev) => prev + positionOffset);\n    }\n  }, isScrollX);\n\n  React.useEffect(() => {\n    if (hoursInDays.length > 0) {\n      const newPositionX = getHoursInDaysPositionX({\n        hoursInDays,\n        hourWidth,\n        sidebarWidth,\n        cb: setShowLine,\n      });\n      setPositionX(newPositionX);\n    } else {\n      const date = new Date(startDate);\n      const positionX = getPositionX(\n        startOfDay(date),\n        getNewDateTz(),\n        startDate,\n        endDate,\n        hourWidth\n      );\n      const newPositionX = positionX + sidebarWidth;\n      setPositionX(newPositionX);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    startDate,\n    endDate,\n    sidebarWidth,\n    hourWidth,\n    hoursInDaysSerialized,\n    timezoneSerialized,\n  ]);\n\n  return { showLine, positionX };\n}\n","import React, { useCallback } from \"react\";\n// Types\nimport { ChannelWithPosition, GridEvent, Position } from \"../helpers/types\";\n\ninterface useGridCellItemProps {\n  onItemDrop?: GridEvent;\n}\n\nexport function useGridExternalDnD({ onItemDrop }: useGridCellItemProps = {}) {\n  const dropAreaRef = React.useRef(null);\n  const [isDragOver, setIsDragOver] = React.useState(false);\n  const handleDrop = useCallback(\n    (\n        item: {\n          position: Position;\n          channel: ChannelWithPosition;\n        },\n        index: number\n      ) =>\n      (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        if (dropAreaRef.current) {\n          setIsDragOver(false);\n\n          const droppedItemId = e.dataTransfer.getData(\"text/plain\");\n          const droppedItem = document.getElementById(droppedItemId);\n\n          if (droppedItem) {\n            // Loop through all attributes\n            const attributes = droppedItem.attributes;\n            const dataAttributes = {} as Record<string, string>;\n\n            for (let i = 0; i < attributes.length; i++) {\n              const attribute = attributes[i];\n              if (attribute.name.startsWith(\"data-\")) {\n                dataAttributes[attribute.name.replace(\"data-\", \"\")] =\n                  attribute.value;\n              }\n            }\n\n            // Call the onDrop callback with the dropped item, attributes, and position\n            onItemDrop?.(item, index, dataAttributes)();\n          }\n        }\n      },\n\n    [onItemDrop]\n  );\n\n  const handleDragEnter = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    if (e) {\n      e.preventDefault();\n      if (dropAreaRef.current) {\n        setIsDragOver(true);\n      }\n    }\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    if (dropAreaRef.current) {\n      setIsDragOver(false);\n    }\n  }, []);\n\n  return {\n    isDragOver,\n    dropAreaRef,\n    onDrop: handleDrop,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n  };\n}\n","import React from \"react\";\n\n// Import interfaces\nimport { GridDividerItemProps } from \"../helpers/interfaces\";\n// Import hooks\nimport { useGridExternalDnD } from \"../hooks/useGridExternalDnD\";\n// Import styles\nimport { GridStyled } from \"../styles\";\n\nconst { GridDivider } = GridStyled;\n\nexport function GridDividerItem({\n  index,\n  item,\n  dividerProps,\n}: GridDividerItemProps) {\n  const { styles, props } = dividerProps;\n  const { onItemClick, onItemDrop, ...restProps } = props;\n  const { isDragOver, onDrop, onDragEnter, onDragLeave, dropAreaRef } =\n    useGridExternalDnD({\n      onItemDrop,\n    });\n  return (\n    <GridDivider\n      className=\"planby-grid-item-divider\"\n      ref={dropAreaRef}\n      key={index}\n      {...styles}\n      left={styles.left(index)}\n      {...restProps}\n      onClick={onItemClick(item, index)}\n      // Drag\n      isDragOver={isDragOver}\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop(item, index)}\n    />\n  );\n}\n","import * as React from \"react\";\n// Import interfaces\nimport { GridCell } from \"../helpers/interfaces\";\n// Import types\nimport { ChannelWithPosition, GridEvent, Position } from \"../helpers/types\";\n// Import helpers\nimport { generateArray } from \"../helpers\";\n// Import styles\nimport { GridStyled } from \"../styles\";\nimport { GridDividerItem } from \"./GridDividerItem\";\nimport { useGridExternalDnD } from \"../hooks/useGridExternalDnD\";\n\nconst { GridItem } = GridStyled;\n\ninterface GridCellItemProps {\n  isVerticalMode: boolean;\n  isHoverHighlight: boolean | undefined;\n  isProgramVisible: (position: Position, overlapsCount: number) => boolean;\n  isItemClickable: boolean;\n  isDayMode: boolean;\n  item: { position: Position; channel: ChannelWithPosition };\n  index: number;\n  channelOverlapsCount: Record<string, number>;\n  hourWidth: number;\n  timelineDividers: number;\n  renderGridCell?: (props: GridCell) => React.ReactNode;\n  onItemClick: GridEvent;\n  onItemDrop: GridEvent;\n}\n\nexport function GridCellItem({\n  isVerticalMode,\n  isProgramVisible,\n  isHoverHighlight,\n  isDayMode,\n  isItemClickable,\n  item,\n  index,\n  channelOverlapsCount,\n  hourWidth,\n  timelineDividers,\n  renderGridCell,\n  onItemClick,\n  onItemDrop,\n}: GridCellItemProps) {\n  const overlapsCount = channelOverlapsCount[item.channel.uuid] ?? 1;\n  const isVisible = isProgramVisible(item.position, overlapsCount);\n\n  const { isDragOver, dropAreaRef, onDrop, onDragEnter, onDragLeave } =\n    useGridExternalDnD({\n      onItemDrop,\n    });\n\n  if (!isVisible) return null;\n\n  const gridItemClickProps = isDayMode\n    ? { isItemClickable: false }\n    : { onClick: onItemClick(item), isItemClickable };\n\n  const dividerProps = {\n    styles: {\n      left: (index: number) => index * (hourWidth / timelineDividers),\n      width: hourWidth / timelineDividers,\n    },\n    props: {\n      isVerticalMode,\n      isHoverHighlight: isHoverHighlight as boolean,\n      isItemClickable,\n      onItemClick,\n      onItemDrop,\n    },\n  };\n\n  const gridItemDnDProps = isDayMode\n    ? {}\n    : {\n        isDragOver: isDragOver,\n        onDragEnter,\n        onDragLeave,\n        onDrop: onDrop(item, index),\n      };\n\n  if (renderGridCell) {\n    const id = item.channel.uuid + index;\n    return renderGridCell({\n      isDayMode,\n      id,\n      index,\n      item,\n      isHoverHighlight: isHoverHighlight as boolean,\n      timelineDividers,\n      gridDividerProps: dividerProps,\n      timelineDividerArray: generateArray(timelineDividers),\n      gridItemClickProps,\n      gridItemDnDProps,\n    });\n  }\n\n  return (\n    <GridItem\n      ref={dropAreaRef}\n      key={item.channel.uuid + index}\n      className=\"planby-grid-item\"\n      isDayMode={isDayMode}\n      isHoverHighlight={isHoverHighlight as boolean}\n      {...item.position}\n      {...gridItemClickProps}\n      {...gridItemDnDProps}\n    >\n      {isDayMode &&\n        generateArray(timelineDividers).map((_, index) => (\n          <GridDividerItem\n            key={index}\n            index={index}\n            item={item}\n            dividerProps={dividerProps}\n          />\n        ))}\n    </GridItem>\n  );\n}\n","import * as React from \"react\";\n// Import interfaces\nimport {\n  Mode,\n  Grid as IGrid,\n  HoursInDayDiffTime,\n  GridCell,\n} from \"../helpers/interfaces\";\n// Import types\nimport {\n  BaseTimeFormat,\n  ChannelWithPosition,\n  Position,\n} from \"../helpers/types\";\n// Import hooks\nimport { useGrid } from \"../hooks\";\nimport { GridCellItem } from \"./GridCellItem\";\n// Import styles\nimport { GridStyled } from \"../styles\";\n\nconst { GridContainer } = GridStyled;\n\ninterface GridProps {\n  isVerticalMode: boolean;\n  isProgramVisible: (position: Position, overlapsCount: number) => boolean;\n  isBaseTimeFormat: BaseTimeFormat;\n  channelOverlapsCount: Record<string, number>;\n  hourWidth: number;\n  dayWidth: number;\n  days: string[];\n  hoursInDays: HoursInDayDiffTime[];\n  months: string[];\n  numberOfDays: number;\n  numberOfHoursInDay: number;\n  numberOfMonths: number;\n  offsetStartHoursRange: number;\n  gridItems: { position: Position; channel: ChannelWithPosition }[];\n  grid: IGrid;\n  mode: Mode;\n  sidebarWidth: number;\n  timelineHeight: number;\n  timelineDividers: number;\n  renderGridCell?: (props: GridCell) => React.ReactNode;\n}\n\nexport function Grid({\n  isVerticalMode,\n  isProgramVisible,\n  channelOverlapsCount,\n  grid,\n  gridItems,\n  mode,\n  hourWidth,\n  timelineDividers,\n  renderGridCell,\n  ...rest\n}: GridProps) {\n  const { onItemClick, onItemDrop } = useGrid({\n    isVerticalMode,\n    grid,\n    mode,\n    hourWidth,\n    timelineDividers,\n    ...rest,\n  });\n\n  const isDayMode = mode.type === \"day\";\n  const isHoverHighlight = grid.hoverHighlight;\n  const isItemClickable = !!grid.onGridItemClick;\n\n  const renderGridItem = (\n    item: { position: Position; channel: ChannelWithPosition },\n    index: number\n  ) => {\n    const props = {\n      isVerticalMode,\n      isProgramVisible,\n      isHoverHighlight,\n      isDayMode,\n      isItemClickable,\n      item,\n      index,\n      channelOverlapsCount,\n      hourWidth,\n      timelineDividers,\n      renderGridCell,\n      onItemClick,\n      onItemDrop,\n    };\n\n    // @ts-ignore\n    return <GridCellItem key={item.channel.uuid + index} {...props} />;\n  };\n\n  return (\n    <GridContainer className=\"planby-grid\">\n      {gridItems.map((item, index) => renderGridItem(item, index))}\n    </GridContainer>\n  );\n}\n","import { useCallback } from \"react\";\n// Import interfaces\nimport { Mode, Grid as IGrid, HoursInDayDiffTime } from \"../helpers/interfaces\";\n// Import types\nimport {\n  BaseTimeFormat,\n  ChannelWithPosition,\n  Position,\n} from \"../helpers/types\";\n// Import helpers\nimport { getClickGridItemData } from \"../helpers\";\n\ninterface UseGridProps {\n  isVerticalMode: boolean;\n  isBaseTimeFormat: BaseTimeFormat;\n  hourWidth: number;\n  dayWidth: number;\n  days: string[];\n  hoursInDays: HoursInDayDiffTime[];\n  months: string[];\n  numberOfDays: number;\n  numberOfHoursInDay: number;\n  numberOfMonths: number;\n  offsetStartHoursRange: number;\n  grid: IGrid;\n  mode: Mode;\n  sidebarWidth: number;\n  timelineHeight: number;\n  timelineDividers: number;\n}\n\nexport function useGrid({\n  mode,\n  grid,\n  timelineHeight,\n  sidebarWidth,\n  hourWidth,\n  dayWidth,\n  ...rest\n}: UseGridProps) {\n  const {\n    isVerticalMode,\n    isBaseTimeFormat,\n    days,\n    hoursInDays,\n    months,\n    numberOfDays,\n    numberOfHoursInDay,\n    numberOfMonths,\n    offsetStartHoursRange,\n    timelineDividers,\n  } = rest;\n\n  const handleItemClick = useCallback(\n    (\n        item: { position: Position; channel: ChannelWithPosition },\n        index?: number\n      ) =>\n      () => {\n        getClickGridItemData({\n          isVerticalMode,\n          index,\n          item,\n          grid,\n          mode,\n          dayWidth,\n          hourWidth,\n          timelineHeight,\n          sidebarWidth,\n          isBaseTimeFormat,\n          days,\n          hoursInDays,\n          months,\n          numberOfDays,\n          numberOfHoursInDay,\n          numberOfMonths,\n          offsetStartHoursRange,\n          timelineDividers,\n        });\n      },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isVerticalMode,\n      hourWidth,\n      dayWidth,\n      sidebarWidth,\n      isBaseTimeFormat,\n      days,\n      hoursInDays,\n      months,\n      numberOfDays,\n      numberOfHoursInDay,\n      numberOfMonths,\n      offsetStartHoursRange,\n      mode.type,\n    ]\n  );\n  const handleItemDrop = useCallback(\n    (\n        item: { position: Position; channel: ChannelWithPosition },\n        index?: number,\n        dataAttributes?: Record<string, string>\n      ) =>\n      () => {\n        getClickGridItemData({\n          isDrop: true,\n          isVerticalMode,\n          index,\n          item,\n          grid,\n          mode,\n          dayWidth,\n          hourWidth,\n          timelineHeight,\n          sidebarWidth,\n          isBaseTimeFormat,\n          days,\n          hoursInDays,\n          months,\n          numberOfDays,\n          numberOfHoursInDay,\n          numberOfMonths,\n          offsetStartHoursRange,\n          timelineDividers,\n          dataAttributes,\n        });\n      },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isVerticalMode,\n      hourWidth,\n      dayWidth,\n      sidebarWidth,\n      isBaseTimeFormat,\n      days,\n      hoursInDays,\n      months,\n      numberOfDays,\n      numberOfHoursInDay,\n      numberOfMonths,\n      offsetStartHoursRange,\n      mode.type,\n    ]\n  );\n  return {\n    onItemClick: handleItemClick,\n    onItemDrop: handleItemDrop,\n  };\n}\n","import React from \"react\";\n\n// Import interfaces\nimport {\n  Area,\n  Grid as IGrid,\n  HoursInDayDiffTime,\n  Line as ILine,\n  Mode,\n  Overlap,\n  ProgramOverlaps,\n  DragAndDrop,\n  Timezone,\n  Snap,\n  GridCell,\n} from \"../helpers/interfaces\";\n\n// Import types\nimport {\n  Timeline as ITimeline,\n  CurrentTimeIndicator,\n} from \"../helpers/interfaces\";\nimport {\n  ProgramItem,\n  ProgramWithPosition,\n  ChannelWithPosition,\n  DateTime,\n  Position,\n  BaseTimeFormat,\n  DragMouseUp,\n} from \"../helpers/types\";\n\n// Import helpers\nimport {\n  deleteLayoutScreenCloneElement,\n  getChannelsContentHeight,\n  getProgramOptions,\n  isFutureTime,\n  setLayoutScreenCloneElement,\n} from \"../helpers\";\n\n// Import styles\nimport { EpgStyled } from \"../styles\";\n\n// Import components\nimport { Areas, Channels, Line, Program, Timeline } from \"../components\";\nimport { LayoutBg } from \"../styles/Epg.styles\";\nimport { Grid } from \"./Grid\";\n\ninterface LayoutProps {\n  isToday: boolean;\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  isBaseTimeFormat?: BaseTimeFormat;\n  isSidebar?: boolean;\n  isTimeline?: boolean;\n  isLine?: boolean;\n  isCurrentTime?: boolean;\n  isResize?: boolean;\n  programs: ProgramItem[];\n  programOverlaps: ProgramOverlaps;\n  layerOverlapLevel: number;\n  channels: ChannelWithPosition[];\n  channelOverlapsCount: Record<string, number>;\n  startDate: DateTime;\n  endDate: DateTime;\n  hoursInDays: HoursInDayDiffTime[];\n  scrollY: number;\n  dayWidth: number;\n  hourWidth: number;\n  days: string[];\n  months: string[];\n  currentDate: string;\n  numberOfDays: number;\n  numberOfHoursInDay: number;\n  numberOfMonths: number;\n  monthWidth: number;\n  offsetStartHoursRange: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n  itemHeight: number;\n  liveRefreshTime: number;\n  snap?: Snap;\n  mode: Mode;\n  dnd: DragAndDrop;\n  overlapMode: Overlap[\"mode\"];\n  timelineDividers: number;\n  timezone: Timezone;\n  areas: Area[];\n  gridItems: { position: Position; channel: ChannelWithPosition }[];\n  grid: IGrid;\n  overlap: Overlap;\n  isProgramVisible: (position: Position, overlapsCount: number) => boolean;\n  isChannelVisible: (position: Pick<Position, \"top\" | \"height\">) => boolean;\n  isTimelineVisible: (position: Pick<Position, \"left\" | \"width\">) => boolean;\n  dragMouseUp: (position: DragMouseUp) => void;\n  resizeMouseUp: (data: any) => void;\n  openChannelGroupTree: (data: ChannelWithPosition) => void;\n  onScroll: (\n    e: React.UIEvent<HTMLDivElement, UIEvent> & { target: Element }\n  ) => void;\n  onLayoutBgClick?: () => void;\n  renderProgram?: (v: {\n    program: ProgramItem;\n    isRTL: boolean;\n    isVerticalMode: boolean;\n    isBaseTimeFormat: BaseTimeFormat;\n    startDate: DateTime;\n    liveRefreshTime: number;\n    dayWidth: number;\n    hourWidth: number;\n    itemHeight: number;\n    contentHeight: number;\n    snap?: Snap;\n    mode: Mode;\n    dnd: DragAndDrop;\n    dragMouseUp: (data: DragMouseUp) => void;\n    resizeMouseUp: (data: any) => void;\n  }) => React.ReactNode;\n  renderChannel?: (v: { channel: ChannelWithPosition }) => React.ReactNode;\n  renderTimeline?: (v: ITimeline) => React.ReactNode;\n  renderLine?: (v: ILine) => React.ReactNode;\n  renderCurrentTime?: (v: CurrentTimeIndicator) => React.ReactElement;\n  renderGridCell?: (v: GridCell) => React.ReactElement;\n}\n\nconst { ScrollBox, Content } = EpgStyled;\n\nexport const Layout = React.forwardRef<HTMLDivElement, LayoutProps>(\n  (props, scrollBoxRef) => {\n    const { startDate, endDate, hoursInDays, liveRefreshTime, scrollY } = props;\n\n    const {\n      channels,\n      channelOverlapsCount,\n      programs,\n      programOverlaps,\n      layerOverlapLevel,\n    } = props;\n\n    const {\n      timezone,\n      areas,\n      grid,\n      gridItems,\n      mode,\n      dnd,\n      snap,\n      overlap,\n      overlapMode,\n      timelineDividers,\n    } = props;\n\n    const {\n      dayWidth,\n      hourWidth,\n      monthWidth,\n      sidebarWidth,\n      timelineHeight,\n      itemHeight,\n    } = props;\n\n    const {\n      days,\n      months,\n      numberOfHoursInDay,\n      numberOfDays,\n      numberOfMonths,\n      offsetStartHoursRange,\n    } = props;\n\n    const {\n      isVerticalMode = false,\n      isRTL = false,\n      isSidebar = true,\n      isTimeline = true,\n      isLine = true,\n      isToday,\n      isBaseTimeFormat = false,\n      isCurrentTime = false,\n      isResize = false,\n    } = props;\n\n    const {\n      dragMouseUp,\n      resizeMouseUp,\n      openChannelGroupTree,\n      onLayoutBgClick,\n      onScroll,\n      isProgramVisible,\n      isChannelVisible,\n      isTimelineVisible,\n      renderProgram,\n      renderChannel,\n      renderTimeline,\n      renderLine,\n      renderCurrentTime,\n      renderGridCell,\n    } = props;\n\n    // Calculate the height of the content\n    const channelsLength = channels.length;\n    const programsOverlapsLength = Object.keys(programOverlaps).length;\n    const programOverlapsSerialized = JSON.stringify(programOverlaps);\n    const contentHeight = React.useMemo(\n      () => {\n        if (programsOverlapsLength > 0) {\n          return getChannelsContentHeight(channels);\n        }\n        return channelsLength * itemHeight;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [\n        channelsLength,\n        programsOverlapsLength,\n        itemHeight,\n        programOverlapsSerialized,\n      ]\n    );\n\n    const showAreas = areas.length > 0;\n    const isFuture = isFutureTime(endDate);\n\n    const renderPrograms = (program: ProgramWithPosition, index: number) => {\n      const { position, data } = program;\n      const overlapsCount = channelOverlapsCount[program.data.channelUuid] ?? 1;\n      const isVisible =\n        data.fixedVisibility ?? isProgramVisible(position, overlapsCount);\n\n      if (isVisible) {\n        setLayoutScreenCloneElement(program, index);\n        const options = getProgramOptions({\n          isVerticalMode,\n          program,\n          programOverlaps,\n          layerOverlapLevel,\n          overlapMode,\n          overlap,\n        });\n        const props = {\n          isRTL,\n          isResize,\n          isVerticalMode,\n          isBaseTimeFormat,\n          startDate,\n          program: options,\n          liveRefreshTime,\n          snap,\n          mode,\n          dnd,\n          dayWidth,\n          contentHeight,\n          itemHeight,\n          hourWidth,\n          dragMouseUp,\n          resizeMouseUp,\n        };\n        if (renderProgram) return renderProgram(props);\n\n        return (\n          <Program\n            key={`${program.data.channelUuid}-${program.data.id}`}\n            {...props}\n          />\n        );\n      }\n      deleteLayoutScreenCloneElement(program);\n      return null;\n    };\n\n    const renderTopbar = () => {\n      const timeProps = {\n        isVerticalMode,\n        isSidebar,\n        isRTL,\n        isTimelineVisible,\n        isToday,\n        isBaseTimeFormat,\n        isCurrentTime,\n        timezone,\n        startDate,\n        endDate,\n        dayWidth,\n        sidebarWidth,\n        timelineHeight,\n        offsetStartHoursRange,\n        monthWidth,\n        numberOfHoursInDay,\n        numberOfMonths,\n        numberOfDays,\n        hourWidth,\n        days,\n        months,\n        hoursInDays,\n        liveRefreshTime,\n        mode,\n        timelineDividers,\n        renderCurrentTime,\n      };\n      if (renderTimeline) {\n        return renderTimeline(timeProps);\n      }\n      return <Timeline {...timeProps} />;\n    };\n\n    return (\n      <ScrollBox\n        ref={scrollBoxRef}\n        id=\"planby-layout-scrollbox\"\n        className=\"planby-layout\"\n        isRTL={isRTL}\n        onScroll={onScroll}\n      >\n        {grid.enabled && (\n          <Grid\n            isVerticalMode={isVerticalMode}\n            isProgramVisible={isProgramVisible}\n            channelOverlapsCount={channelOverlapsCount}\n            isBaseTimeFormat={isBaseTimeFormat}\n            hourWidth={hourWidth}\n            dayWidth={dayWidth}\n            days={days}\n            hoursInDays={hoursInDays}\n            months={months}\n            numberOfDays={numberOfDays}\n            numberOfHoursInDay={numberOfHoursInDay}\n            numberOfMonths={numberOfMonths}\n            offsetStartHoursRange={offsetStartHoursRange}\n            grid={grid}\n            gridItems={gridItems}\n            mode={mode}\n            sidebarWidth={sidebarWidth}\n            timelineHeight={timelineHeight}\n            timelineDividers={timelineDividers}\n            renderGridCell={renderGridCell}\n          />\n        )}\n        {onLayoutBgClick && (\n          <LayoutBg\n            className=\"planby-layout-bg\"\n            isSidebar={isSidebar}\n            isVerticalMode={isVerticalMode}\n            isTimeline={isTimeline}\n            dayWidth={dayWidth}\n            contentHeight={contentHeight}\n            sidebarWidth={sidebarWidth}\n            timelineHeight={timelineHeight}\n            onClick={onLayoutBgClick}\n          />\n        )}\n        {isLine && isToday && isFuture && (\n          <Line\n            isVerticalMode={isVerticalMode}\n            isTimeline={isTimeline}\n            dayWidth={dayWidth}\n            hourWidth={hourWidth}\n            sidebarWidth={sidebarWidth}\n            startDate={startDate}\n            endDate={endDate}\n            height={contentHeight}\n            liveRefreshTime={liveRefreshTime}\n            hoursInDays={hoursInDays}\n            timezone={timezone}\n            renderLine={renderLine}\n          />\n        )}\n\n        {showAreas && (\n          <Areas\n            isVerticalMode={isVerticalMode}\n            sidebarWidth={sidebarWidth}\n            hourWidth={hourWidth}\n            areas={areas}\n            startDate={startDate}\n            endDate={endDate}\n            height={contentHeight}\n            timelineHeight={timelineHeight}\n          />\n        )}\n        {isTimeline && renderTopbar()}\n        {isSidebar && (\n          <Channels\n            isVerticalMode={isVerticalMode}\n            isRTL={isRTL}\n            isTimeline={isTimeline}\n            isChannelVisible={isChannelVisible}\n            timelineHeight={timelineHeight}\n            sidebarWidth={sidebarWidth}\n            contentHeight={contentHeight}\n            channels={channels as ChannelWithPosition[]}\n            scrollY={scrollY}\n            openChannelGroupTree={openChannelGroupTree}\n            renderChannel={renderChannel}\n          />\n        )}\n\n        <Content\n          className=\"planby-content\"\n          data-testid=\"content\"\n          isVerticalMode={isVerticalMode}\n          isSidebar={isSidebar}\n          isTimeline={isTimeline}\n          dayWidth={dayWidth}\n          sidebarWidth={sidebarWidth}\n          timelineHeight={timelineHeight}\n          contentHeight={contentHeight}\n        >\n          {programs.map((program, index) =>\n            renderPrograms(program as ProgramWithPosition, index)\n          )}\n        </Content>\n      </ScrollBox>\n    );\n  }\n);\n","import * as React from \"react\";\n\n// Import interfaces\nimport {\n  DragAndDrop,\n  Mode,\n  Program as ProgramType,\n  Snap,\n} from \"../helpers/interfaces\";\n\n// Import types\nimport {\n  BaseTimeFormat,\n  DateTime,\n  DragMouseUp,\n  ResizeMouseUp,\n} from \"../helpers/types\";\nimport { ProgramItem } from \"../helpers/types\";\n\n// Import styles\nimport { ProgramStyled } from \"../styles\";\n\n// Import hooks\nimport { useProgram } from \"../hooks\";\n\ninterface ProgramProps<T> {\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  isResize?: boolean;\n  isBaseTimeFormat: BaseTimeFormat;\n  startDate: DateTime;\n  program: T;\n  liveRefreshTime: number;\n  snap?: Snap;\n  mode: Mode;\n  dnd: DragAndDrop;\n  contentHeight: number;\n  dayWidth: number;\n  hourWidth: number;\n  itemHeight: number;\n  dragMouseUp: (data: DragMouseUp) => void;\n  resizeMouseUp: (data: ResizeMouseUp) => void;\n  onClick?: (v: ProgramType) => void;\n}\n\nconst {\n  ProgramBox,\n  ProgramContent,\n  ProgramResizeHandle,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n} = ProgramStyled;\n\nexport function Program<T extends ProgramItem>({\n  isVerticalMode,\n  program,\n  onClick,\n  ...rest\n}: ProgramProps<T>) {\n  const {\n    isRTL,\n    isLive,\n    isMinWidth,\n    isMouseEvent,\n    styles,\n    resizeEvents,\n    formatTime,\n    getMouseEvents,\n    getMouseEventTempTime,\n    set12HoursTimeFormat,\n    getRTLSinceTime,\n    getRTLTillTime,\n  } = useProgram({\n    isVerticalMode,\n    program,\n    ...rest,\n  });\n\n  const { data } = program;\n  const { image, title, since, till } = data;\n\n  const handleOnContentClick = () => onClick?.(data);\n\n  const sinceTime = formatTime(\n    getRTLSinceTime(since),\n    set12HoursTimeFormat()\n  ).toLowerCase();\n\n  const tillTime = formatTime(\n    getRTLTillTime(till),\n    set12HoursTimeFormat()\n  ).toLowerCase();\n\n  const tempTime = getMouseEventTempTime();\n\n  return (\n    <ProgramBox\n      id={data.id}\n      className=\"planby-program\"\n      data-testid=\"program-item\"\n      width={styles.width}\n      style={styles.position}\n      {...getMouseEvents()}\n    >\n      <ProgramContent\n        className=\"planby-program-content\"\n        data-testid=\"program-content\"\n        width={styles.width}\n        isLive={isLive}\n        isVerticalMode={isVerticalMode}\n        onClick={handleOnContentClick}\n        {...rest}\n      >\n        <ProgramResizeHandle {...resizeEvents.eventsLeft} />\n        <ProgramResizeHandle {...resizeEvents.eventsRight} />\n        <ProgramFlex\n          className=\"planby-program-flex\"\n          isVerticalMode={isVerticalMode}\n        >\n          {isLive && isMinWidth && (\n            <ProgramImage\n              isVerticalMode={isVerticalMode}\n              src={image}\n              alt=\"Preview\"\n            />\n          )}\n          <ProgramStack className=\"planby-program-stack\" isRTL={isRTL}>\n            <ProgramTitle className=\"planby-program-title\">\n              {title}\n            </ProgramTitle>\n            <ProgramText\n              className=\"planby-program-text\"\n              aria-label=\"program time\"\n            >\n              {isMouseEvent ? (\n                <>\n                  {tempTime.since} - {tempTime.till}\n                </>\n              ) : (\n                <>\n                  {sinceTime} - {tillTime}\n                </>\n              )}\n            </ProgramText>\n          </ProgramStack>\n        </ProgramFlex>\n      </ProgramContent>\n    </ProgramBox>\n  );\n}\n","import * as React from \"react\";\n// Import interfaces\nimport { ChannelItem, ChannelWithPosition } from \"../helpers/types\";\n\n// Import helpers\nimport {\n  getChannelGroupTreeProps,\n  getChannelVerticalPosition,\n} from \"../helpers\";\n\n// Import styles\nimport { ChannelsStyled } from \"../styles\";\n\n// Import Components\nimport { Channel } from \"../components\";\n\ninterface ChannelsProps {\n  isVerticalMode: boolean;\n  isTimeline: boolean;\n  isRTL: boolean;\n  isChannelVisible: (position: any) => boolean;\n  channels: ChannelWithPosition[];\n  contentHeight: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n  scrollY: number;\n  openChannelGroupTree: (data: ChannelWithPosition) => void;\n  renderChannel?: (v: ChannelItem) => React.ReactNode;\n}\n\nconst { Box } = ChannelsStyled;\n\nexport function Channels(props: ChannelsProps) {\n  const {\n    channels,\n    scrollY,\n    sidebarWidth,\n    timelineHeight,\n    contentHeight,\n    openChannelGroupTree,\n    renderChannel,\n  } = props;\n  const { isVerticalMode, isRTL, isTimeline, isChannelVisible } = props;\n\n  const renderChannels = (channel: ChannelWithPosition) => {\n    const channelWithPosition = getChannelVerticalPosition(\n      channel,\n      isVerticalMode\n    );\n    const isVisible = isChannelVisible(channelWithPosition.position);\n    const newChannel = getChannelGroupTreeProps(\n      channelWithPosition\n    ) as ChannelWithPosition;\n\n    const groupEventProps = newChannel.groupTree\n      ? { onOpenGroupTree: openChannelGroupTree }\n      : {};\n\n    if (isVisible) {\n      if (renderChannel) {\n        return renderChannel({\n          channel: newChannel,\n          isVerticalMode,\n          isRTL,\n          ...groupEventProps,\n        });\n      }\n\n      return (\n        <Channel\n          key={channel.uuid}\n          channel={newChannel}\n          isVerticalMode={isVerticalMode}\n          {...groupEventProps}\n        />\n      );\n    }\n    return null;\n  };\n\n  return (\n    <Box\n      className=\"planby-channels\"\n      data-testid=\"sidebar\"\n      isVerticalMode={isVerticalMode}\n      isRTL={isRTL}\n      isTimeline={isTimeline}\n      timelineHeight={timelineHeight}\n      sidebarWidth={sidebarWidth}\n      contentHeight={contentHeight}\n      bottom={scrollY}\n    >\n      {channels.map(renderChannels)}\n    </Box>\n  );\n}\n","// Import types\nimport { getChannelsGroupTree } from \"./layout\";\nimport { ChannelWithPosition } from \"./types\";\n\nexport const getChannelVerticalPosition = (\n  channel: ChannelWithPosition,\n  isVerticalMode: boolean\n) => {\n  if (isVerticalMode) {\n    return {\n      ...channel,\n      position: {\n        ...channel.position,\n        left: channel.position.top,\n        width: channel.position.height,\n      },\n    };\n  }\n\n  return channel;\n};\n\nexport const getChannelGroupTreeProps = (channel: ChannelWithPosition) => {\n  const data = {\n    ...channel,\n    nestedChildren: [],\n    isFirstNestedChild: false,\n    isLastNestedChild: false,\n  };\n\n  const getChanelGroupTree = (uuid?: string) =>\n    channelsGroupTree[uuid ?? \"\"] ?? null;\n\n  const channelsGroupTree = getChannelsGroupTree();\n  const channelGroupTree = getChanelGroupTree(channel.uuid);\n  const channelNestedGroupTree = getChanelGroupTree(\n    channel.parentChannelUuid ?? \"\"\n  );\n\n  if (channel.parentChannelUuid && channelNestedGroupTree) {\n    const isFirstNestedChild =\n      channelNestedGroupTree.nestedChildren?.at(0) === channel.uuid;\n    const isLastNestedChild =\n      channelNestedGroupTree.nestedChildren?.at(-1) === channel.uuid;\n    return {\n      ...data,\n      isFirstNestedChild,\n      isLastNestedChild,\n    };\n  } else if (channelGroupTree) {\n    return {\n      ...data,\n      nestedChildren: channelGroupTree.nestedChildren,\n    };\n  }\n\n  return data;\n};\n","import * as React from \"react\";\n\n// Import interfaces\nimport { ChannelWithPosition } from \"../helpers/types\";\n\n// Import styles\nimport { ChannelStyled } from \"../styles\";\n\ninterface ChannelProps<T> {\n  isVerticalMode: boolean;\n  channel: T;\n  onOpenGroupTree?: (data: ChannelWithPosition) => void;\n  onClick?: (v: ChannelWithPosition) => void;\n}\n\nconst { ChannelWrapper, ChannelLogo } = ChannelStyled;\n\nexport function Channel<T extends ChannelWithPosition>({\n  isVerticalMode,\n  channel,\n  onOpenGroupTree,\n  onClick,\n  ...rest\n}: ChannelProps<T>) {\n  const { position, logo, groupTree } = channel;\n\n  return (\n    <ChannelWrapper\n      className=\"planby-channel\"\n      data-testid=\"sidebar-item\"\n      isVerticalMode={isVerticalMode}\n      groupTree={groupTree}\n      onClick={() => onOpenGroupTree?.(channel) ?? onClick?.(channel)}\n      {...position}\n      {...rest}\n    >\n      <ChannelLogo src={logo} alt=\"Logo\" />\n    </ChannelWrapper>\n  );\n}\n","import * as React from \"react\";\n\n// Import types\nimport {\n  CurrentTimeIndicator,\n  HoursInDayDiffTime,\n  Mode,\n  Timezone,\n} from \"../helpers/interfaces\";\nimport { DateTime } from \"../helpers/types\";\n\n// Import styles\nimport { CurrentTimeStyled } from \"../styles\";\n\n// Import hooks\nimport { useLine, useCurrentTime } from \"../hooks\";\n\ninterface CurrentTimeProps {\n  isBaseTimeFormat?: boolean;\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  timezone: Timezone;\n  mode: Mode;\n  startDate: DateTime;\n  endDate: DateTime;\n  hoursInDays: HoursInDayDiffTime[];\n  dayWidth: number;\n  timelineHeight: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  liveRefreshTime: number;\n  renderCurrentTime?: (v: CurrentTimeIndicator) => React.ReactElement;\n}\n\nconst { CurrentTimeBox, CurrentTimeContent } = CurrentTimeStyled;\n\nexport function CurrentTime(props: CurrentTimeProps) {\n  const { isVerticalMode, isBaseTimeFormat, isRTL } = props;\n  const { timezone, mode, liveRefreshTime, startDate, endDate, hoursInDays } =\n    props;\n  const { dayWidth, timelineHeight, hourWidth, sidebarWidth } = props;\n  const { renderCurrentTime } = props;\n\n  const { showLine, positionX } = useLine({\n    timezone,\n    hoursInDays,\n    startDate,\n    endDate,\n    dayWidth,\n    hourWidth,\n    sidebarWidth,\n    liveRefreshTime,\n  });\n\n  const { time, getCurrentTimeStyles } = useCurrentTime({\n    isVerticalMode,\n    isBaseTimeFormat,\n    mode,\n    positionX,\n    timelineHeight,\n    sidebarWidth,\n  });\n\n  if (!showLine) return null;\n\n  const styles = getCurrentTimeStyles();\n\n  if (renderCurrentTime) {\n    return renderCurrentTime({\n      isVerticalMode,\n      isBaseTimeFormat,\n      isRTL,\n      time,\n      styles,\n    });\n  }\n\n  return (\n    <CurrentTimeBox className=\"planby-current-time\" {...styles.position}>\n      <CurrentTimeContent\n        className=\"planby-current-content\"\n        isVerticalMode={isVerticalMode}\n        isBaseTimeFormat={isBaseTimeFormat}\n        isRTL={isRTL}\n      >\n        {time}\n      </CurrentTimeContent>\n    </CurrentTimeBox>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\n// Import types\nimport { BaseTimeFormat } from \"../helpers/types\";\n// Import helpers\nimport { Mode, TIME_FORMAT } from \"../helpers\";\n// Import utils\nimport { getNewDateTz } from \"../utils/time\";\n// Import styles\nimport { boxStyles } from \"../styles/CurrentTime.styles\";\n\ninterface useCurrentTimeProps {\n  isVerticalMode?: boolean;\n  isBaseTimeFormat?: BaseTimeFormat;\n  mode: Mode;\n  positionX: number;\n  timelineHeight: number;\n  sidebarWidth: number;\n}\n\nexport function useCurrentTime({\n  isVerticalMode,\n  isBaseTimeFormat,\n  mode,\n  positionX,\n  timelineHeight,\n  sidebarWidth,\n}: useCurrentTimeProps) {\n  const formatTime = () => {\n    const date = getNewDateTz();\n\n    if (mode.type === \"month\") {\n      if (isBaseTimeFormat) return format(date, TIME_FORMAT.BASE_DAY_MONTH);\n      return format(date, TIME_FORMAT.DAY_MONTH);\n    }\n\n    const baseTime = format(date, TIME_FORMAT.HOURS_MIN);\n\n    if (isBaseTimeFormat) {\n      const baseFormat = format(date, TIME_FORMAT.BASE_HOURS_TIME)\n        .toLowerCase()\n        .replace(/\\s/g, \"\");\n\n      return baseFormat;\n    }\n\n    return baseTime;\n  };\n\n  const handleGetCurrentTimeStyles = () => {\n    const {\n      position,\n      top,\n      height,\n      width: styleWidth,\n    } = boxStyles({ width: timelineHeight });\n    const width = isVerticalMode ? styleWidth : \"auto\";\n    const commonStyles = {\n      position: position,\n      width,\n      height: height,\n    };\n\n    if (isVerticalMode) {\n      return {\n        position: {\n          top: positionX - sidebarWidth,\n          left: top,\n          ...commonStyles,\n        },\n      };\n    }\n\n    return {\n      position: {\n        top: top,\n        left: positionX - sidebarWidth,\n        ...commonStyles,\n      },\n    };\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const time = React.useMemo(() => formatTime(), [positionX, isBaseTimeFormat]);\n\n  return { time, getCurrentTimeStyles: handleGetCurrentTimeStyles };\n}\n","import * as React from \"react\";\n\n// Import interfaces\nimport { Timeline as ITimeline } from \"../helpers/interfaces\";\n\n// Import styles\nimport { TimelineStyled } from \"../styles\";\n\n// Import components\nimport { CurrentTime } from \"./CurrentTime\";\n\n// Import hooks\nimport { useTimeline } from \"../hooks\";\nimport {\n  TimelineWeekMonthBox,\n  TimelineWeekMonthDate,\n} from \"../styles/Timeline.styles\";\n\nconst {\n  TimelineWrapper,\n  TimelineBox,\n  TimelineTime,\n  TimelineDividers,\n  TimelineDivider,\n} = TimelineStyled;\n\nexport function Timeline(props: ITimeline) {\n  const {\n    isWeekMonthMode,\n    isMonthMode,\n    isTodayInHoursInDays,\n    areHoursInDays,\n    time,\n    ...rest\n  } = useTimeline(props);\n  const {\n    timelineHeight,\n    weekDayWidth,\n    monthsWidth,\n    dividers,\n    timelineDividers,\n  } = rest;\n  const {\n    formatWeekMonthDate,\n    getTime,\n    getDayMonthName,\n    getTimelineProps,\n    getCurrentTimeProps,\n  } = rest;\n\n  const {\n    isToday,\n    isBaseTimeFormat,\n    isCurrentTime,\n    isRTL,\n    isTimelineVisible,\n    isVerticalMode,\n  } = props;\n  const { mode } = props;\n  const { hourWidth } = props;\n\n  // Handlers\n  const renderDay = (item: string | number, index: number) => {\n    const { isNewDay, time } = getTime(item);\n    const position = { left: hourWidth * index, width: hourWidth };\n    const isVisible = isTimelineVisible(position);\n    if (!isVisible) return null;\n\n    return (\n      <TimelineBox\n        className=\"planby-timeline-box\"\n        data-testid=\"timeline-item\"\n        key={index}\n        isToday={isToday}\n        isCurrentTime={isCurrentTime}\n        isVerticalMode={isVerticalMode}\n        isTodayInHoursInDays={isTodayInHoursInDays}\n        areHoursInDays={areHoursInDays}\n        timelineHeight={timelineHeight}\n        {...position}\n      >\n        <TimelineTime\n          className=\"planby-timeline-time\"\n          isNewDay={isNewDay}\n          isBaseTimeFormat={isBaseTimeFormat}\n          isRTL={isRTL}\n          isVerticalMode={isVerticalMode}\n        >\n          {time}\n        </TimelineTime>\n        <TimelineDividers\n          isVerticalMode={isVerticalMode}\n          className=\"planby-timeline-dividers\"\n        >\n          {renderDividers(isNewDay)}\n        </TimelineDividers>\n      </TimelineBox>\n    );\n  };\n  const renderWeekMonth = (item: string, index: number) => {\n    const width = isMonthMode ? monthsWidth[index].width : weekDayWidth;\n    const left = isMonthMode ? monthsWidth[index].left : width * index;\n    const position = {\n      left,\n      width,\n    };\n    const isVisible = isTimelineVisible(position);\n    if (!isVisible) return null;\n    const isModernStyle = mode.style === \"modern\";\n    return (\n      <TimelineWeekMonthBox\n        className=\"planby-timeline-box\"\n        data-testid=\"timeline-item\"\n        key={index}\n        isToday={isToday}\n        isWeekMonthMode={isWeekMonthMode}\n        isCurrentTime={isCurrentTime}\n        isVerticalMode={isVerticalMode}\n        timelineHeight={timelineHeight}\n        styleType={mode.style}\n        {...position}\n      >\n        <TimelineWeekMonthDate\n          className=\"planby-timeline-week-month-date\"\n          isRTL={isRTL}\n          isVerticalMode={isVerticalMode}\n          styleType={mode.style}\n        >\n          {isModernStyle && <span>{getDayMonthName(item)}</span>}\n          <span>{formatWeekMonthDate(item)}</span>\n        </TimelineWeekMonthDate>\n      </TimelineWeekMonthBox>\n    );\n  };\n\n  const renderDividers = (isNewDay: boolean) =>\n    dividers.map((_, index) => (\n      <TimelineDivider\n        key={index}\n        isVerticalMode={isVerticalMode}\n        className=\"planby-timeline-divider\"\n        isNewDay={isNewDay}\n        left={index * (hourWidth / timelineDividers)}\n        width={hourWidth / timelineDividers}\n      />\n    ));\n\n  const renderTimelineItems = (item: string | number, index: number) => {\n    return isWeekMonthMode\n      ? renderWeekMonth(item as string, index)\n      : renderDay(item, index);\n  };\n\n  return (\n    <TimelineWrapper\n      className=\"planby-timeline-wrapper\"\n      data-testid=\"timeline\"\n      {...getTimelineProps()}\n    >\n      {isCurrentTime && isToday && <CurrentTime {...getCurrentTimeProps()} />}\n      {time.map((item, index) => renderTimelineItems(item, index))}\n    </TimelineWrapper>\n  );\n}\n","import * as React from \"react\";\n\n// Import interfaces\nimport {\n  HoursInDayDiffTime,\n  Line as ILine,\n  Timezone,\n} from \"../helpers/interfaces\";\n\n// Import types\nimport { DateTime } from \"../helpers/types\";\n\n// Import helpers\nimport { Layers, getLineStyles } from \"../helpers\";\n\n// Import styles\nimport { LineStyled } from \"../styles\";\n\n// Import components\nimport { useLine } from \"../hooks/useLine\";\n\ninterface LineProps {\n  isTimeline: boolean;\n  isVerticalMode: boolean;\n  height: number;\n  startDate: DateTime;\n  endDate: DateTime;\n  dayWidth: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  liveRefreshTime: number;\n  hoursInDays: HoursInDayDiffTime[];\n  timezone: Timezone;\n  renderLine?: (v: ILine) => React.ReactNode;\n}\n\nconst { lineStyles, LineBox } = LineStyled;\n\nexport function Line({\n  isTimeline,\n  isVerticalMode,\n  height,\n  renderLine,\n  ...rest\n}: LineProps) {\n  const { positionX, showLine } = useLine(rest);\n\n  if (!showLine) return null;\n\n  const position = {\n    height,\n    left: positionX,\n    zIndex: Layers.Line,\n  };\n\n  const styles = getLineStyles({\n    isVerticalMode,\n    isTimeline,\n    lineStyles,\n    position,\n  });\n\n  if (renderLine)\n    return <>{renderLine({ styles, isVerticalMode, isTimeline })}</>;\n\n  return (\n    <LineBox\n      className=\"planby-line\"\n      isVerticalMode={isVerticalMode}\n      isTimeline={isTimeline}\n      {...position}\n    />\n  );\n}\n","import { Layers } from \"./enums\";\n\ninterface LineStyles {\n  isVerticalMode: boolean;\n  isTimeline: boolean;\n  lineStyles: {\n    position: string;\n    top: number;\n    width: number;\n  };\n  position: {\n    height: number;\n    left: number;\n    zIndex: Layers;\n  };\n}\nexport const getLineStyles = ({\n  isVerticalMode,\n  isTimeline,\n  lineStyles,\n  position,\n}: LineStyles) => {\n  if (isVerticalMode) {\n    return {\n      position: {\n        ...position,\n        position: lineStyles.position,\n        top: position.left,\n        left: isTimeline ? lineStyles.top : 0,\n        width: position.height,\n        height: lineStyles.width,\n      },\n    };\n  }\n\n  return {\n    position: {\n      ...position,\n      position: lineStyles.position,\n      top: isTimeline ? lineStyles.top : 0,\n      width: lineStyles.width,\n    },\n  };\n};\n","import * as React from \"react\";\n\n// Import styles\nimport { LoaderStyled } from \"../styles\";\n\nconst { Box, Shape } = LoaderStyled;\n\nconst Element = ({\n  width,\n  color,\n  animate,\n  marginRight,\n  transition,\n}: {\n  width: number;\n  color: string;\n  transition: { duration: number; ease?: string; delay?: number };\n  animate: { right: string[] };\n  marginRight?: number;\n}) => (\n  <Shape\n    className=\"SHAPE\"\n    width={width}\n    color={color as \"teal\" | \"purple\" | \"pink\"}\n    animate={animate}\n    transition={transition}\n    marginRight={marginRight}\n  />\n);\n\nexport function Loader() {\n  return (\n    <Box aria-label=\"loading\">\n      <div>\n        <div\n          style={{ display: \"flex\", justifyContent: \"end\", marginBottom: 16 }}\n        >\n          <Element\n            animate={{\n              right: [\"0px\", \"75px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n            }}\n            width={217}\n            color={\"teal\"}\n            marginRight={10}\n          />\n          <Element\n            width={122}\n            color={\"purple\"}\n            animate={{\n              right: [\"0px\", \"50px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n              delay: 0.02,\n            }}\n          />\n        </div>\n        <div\n          style={{ display: \"flex\", justifyContent: \"end\", marginBottom: 16 }}\n        >\n          <Element\n            width={267}\n            color={\"pink\"}\n            animate={{\n              right: [\"0px\", \"70px\", \"0px\"],\n            }}\n            transition={{\n              delay: 0.5,\n              duration: 1,\n            }}\n          />\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\n          <Element\n            width={217}\n            color={\"purple\"}\n            marginRight={10}\n            animate={{\n              right: [\"0px\", \"95px\", \"0px\"],\n            }}\n            transition={{\n              delay: 0.3,\n              duration: 1,\n            }}\n          />\n          <Element\n            width={80}\n            color={\"teal\"}\n            animate={{\n              right: [\"0px\", \"70px\", \"0px\"],\n            }}\n            transition={{\n              duration: 1,\n              delay: 0.33,\n            }}\n          />\n        </div>\n      </div>\n    </Box>\n  );\n}\n","import React from \"react\";\n\n// Import interfaces\nimport { Area, AreaItem } from \"../helpers/interfaces\";\n// Import types\nimport { DateTime } from \"../helpers/types\";\n// Import hooks\nimport { useAreas } from \"../hooks/useAreas\";\n\n// Import styles\nimport { AreaStyled } from \"../styles\";\n\ninterface AreasProps {\n  isVerticalMode: boolean;\n  areas: Area[];\n  height: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n  startDate: DateTime;\n  endDate: DateTime;\n}\n\ntype AreaAnnotationProps = Pick<AreaItem, \"areaFieldStyles\"> & {\n  isLeft: boolean;\n  text: string;\n  styles: AreaItem[\"areaBgStyles\"];\n};\n\nconst { AreaAnnotation, AreaBg, AreaFiled } = AreaStyled;\n\nexport function Areas({ isVerticalMode, ...props }: AreasProps) {\n  const { data } = useAreas(props);\n\n  const renderAreaAnnotation = (props: AreaAnnotationProps) => {\n    const { isLeft, text } = props;\n    const { areaFieldStyles, styles } = props;\n    const className = isLeft ? \"left\" : \"right\";\n    return (\n      <AreaAnnotation\n        className={`planby-area-annotation-${className}`}\n        isVerticalMode={isVerticalMode}\n        isLeft={isLeft}\n        timelineHeight={areaFieldStyles.timelineHeight}\n        width={areaFieldStyles.width}\n        style={styles}\n      >\n        {text}\n      </AreaAnnotation>\n    );\n  };\n\n  const renderArea = (props: AreaItem, index: number) => {\n    const { showArea, annotations, onClick } = props;\n    const { areaBgStyles = {}, areaFieldStyles } = props;\n    if (!showArea) return null;\n\n    const annotationProps = {\n      areaFieldStyles,\n      styles: annotations?.styles ?? {},\n    };\n\n    return (\n      <AreaFiled\n        key={index}\n        className=\"planby-area-field\"\n        isVerticalMode={isVerticalMode}\n        isClickable={!!onClick}\n        onClick={onClick}\n        {...areaFieldStyles}\n      >\n        <AreaBg className=\"planby-area-bg\" style={areaBgStyles} />\n        {annotations && (\n          <>\n            {annotations.textStart &&\n              renderAreaAnnotation({\n                isLeft: true,\n                text: annotations.textStart,\n                ...annotationProps,\n              })}\n            {annotations.textEnd &&\n              renderAreaAnnotation({\n                isLeft: false,\n                text: annotations.textEnd,\n                ...annotationProps,\n              })}\n          </>\n        )}\n      </AreaFiled>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {data.map((props, index) => renderArea(props, index))}\n    </React.Fragment>\n  );\n}\n","import { useMemo } from \"react\";\n// Import interfaces\nimport { Area } from \"../helpers/interfaces\";\n// Import types\nimport { DateTime } from \"../helpers/types\";\n// Import helpers\nimport { getAreasFields } from \"../helpers/areas\";\n\ninterface UseAreasProps {\n  areas: Area[];\n  hourWidth: number;\n  sidebarWidth: number;\n  height: number;\n  timelineHeight: number;\n  startDate: DateTime;\n  endDate: DateTime;\n}\n\nexport function useAreas(props: UseAreasProps) {\n  const { startDate, endDate, areas } = props;\n  const { hourWidth, sidebarWidth, timelineHeight, height } = props;\n\n  const areasSerialized = JSON.stringify(areas);\n  const data = useMemo(\n    () => {\n      return areas.map((area) => {\n        const options = {\n          area,\n          hourWidth,\n          sidebarWidth,\n          height,\n          startDate,\n          endDate,\n          timelineHeight,\n        };\n        return getAreasFields(options);\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      areasSerialized,\n      hourWidth,\n      sidebarWidth,\n      height,\n      startDate,\n      endDate,\n      timelineHeight,\n    ]\n  );\n\n  return { data };\n}\n","import { isWithinInterval } from \"date-fns\";\nimport { getPositionX } from \"./epg\";\nimport { Area } from \"./interfaces\";\nimport { DateTime } from \"./types\";\n\ninterface AreasData {\n  area: Area;\n  hourWidth: number;\n  sidebarWidth: number;\n  timelineHeight: number;\n  height: number;\n  startDate: DateTime;\n  endDate: DateTime;\n}\n\nexport const getAreasFields = ({\n  area,\n  startDate,\n  endDate,\n  hourWidth,\n  sidebarWidth,\n  timelineHeight,\n  height,\n}: AreasData) => {\n  const areaStartDate = area.startDate;\n  const areaEndDate = area?.endDate ?? areaStartDate;\n\n  const left =\n    getPositionX(startDate, areaStartDate, startDate, endDate, hourWidth) +\n    sidebarWidth;\n\n  const width = getPositionX(\n    areaStartDate,\n    areaEndDate,\n    startDate,\n    endDate,\n    hourWidth\n  );\n\n  const intervalOptions = {\n    start: new Date(startDate),\n    end: new Date(endDate),\n  };\n  const isStartAreaDateValid = isWithinInterval(\n    new Date(areaStartDate),\n    intervalOptions\n  );\n\n  const showArea = isStartAreaDateValid;\n  const areaFieldStyles = {\n    positionX: left,\n    width,\n    height,\n    timelineHeight,\n  };\n  return {\n    ...area,\n    showArea,\n    areaFieldStyles,\n    areaBgStyles: area.styles,\n  };\n};\n","import React from \"react\";\nimport { ThemeProvider, Global } from \"@emotion/react\";\n// Import interfaces\nimport { Theme } from \"./helpers/interfaces\";\n// Import styles\nimport { globalStyles, EpgStyled } from \"./styles\";\n// Import components\nimport { Loader } from \"./components\";\nimport { useGridExternalDnD } from \"./hooks\";\n\ninterface EpgProps {\n  width?: number;\n  height?: number;\n  isVerticalMode?: boolean;\n  isRTL?: boolean;\n  isSidebar: boolean;\n  isTimeline?: boolean;\n  isLoading?: boolean;\n  children: React.ReactNode;\n  loader?: React.ReactNode;\n  theme: Theme;\n  globalStyles?: string;\n  sidebarWidth: number;\n  timelineHeight: number;\n}\n\nconst { Container, Wrapper, Box } = EpgStyled;\n\nexport const Epg = React.forwardRef<HTMLDivElement, EpgProps>(\n  (\n    {\n      children,\n      width,\n      height,\n      sidebarWidth,\n      timelineHeight,\n      theme,\n      globalStyles: customGlobalStyles,\n      isVerticalMode = false,\n      isRTL = false,\n      isSidebar = true,\n      isTimeline = true,\n      isLoading = false,\n      loader: LoaderComponent,\n      ...rest\n    },\n    containerRef\n  ) => {\n    const renderLoader = () => LoaderComponent ?? <Loader />;\n    const epgGlobalStyles = customGlobalStyles ?? globalStyles;\n\n    const blankSpaceStyles = isVerticalMode\n      ? { height: sidebarWidth, width: timelineHeight }\n      : { width: sidebarWidth, height: timelineHeight };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Global styles={epgGlobalStyles} />\n        <Container\n          className=\"planby\"\n          data-testid=\"container\"\n          width={width}\n          height={height}\n          ref={containerRef}\n          {...rest}\n        >\n          <WrapperDnD>\n            {isSidebar && isTimeline && (\n              <Box\n                className=\"planby-corner-box\"\n                isRTL={isRTL}\n                left={0}\n                top={0}\n                style={blankSpaceStyles}\n              />\n            )}\n            {isLoading && renderLoader()}\n            {children}\n          </WrapperDnD>\n        </Container>\n      </ThemeProvider>\n    );\n  }\n);\n\ninterface WrapperDnDProps {\n  children: React.ReactNode;\n}\nfunction WrapperDnD({ children }: WrapperDnDProps) {\n  const { isDragOver, onDragEnter, onDragLeave, dropAreaRef } =\n    useGridExternalDnD();\n\n  React.useEffect(() => {\n    const gridElement = document.querySelector(\".planby-grid\") as HTMLElement;\n    if (gridElement) {\n      if (isDragOver) {\n        gridElement.style.zIndex = \"5\";\n      } else {\n        gridElement.style.zIndex = \"1\";\n      }\n    }\n  }, [isDragOver]);\n\n  return (\n    <Wrapper\n      ref={dropAreaRef}\n      id=\"planby-wrapper\"\n      onDragOver={onDragEnter}\n      onDragLeaveCapture={onDragLeave}\n      onDrop={onDragLeave}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import {\n  ChannelStyled,\n  CurrentTimeStyled,\n  ProgramStyled,\n  TimelineStyled,\n  GridStyled,\n} from \"./styles\";\n\n// Import interfaces\nimport {\n  Line as ILine,\n  Theme as ITheme,\n  Program as IProgram,\n  Timeline as ITimeline,\n  CurrentTimeIndicator as ICurrentTimeIndicator,\n  Mode,\n  GridItemProps as IGridItemProps,\n  GridDividerItemProps as IGridDividerItemProps,\n  DragAndDrop,\n  Snap,\n  GridCell as IGridCell,\n} from \"./helpers/interfaces\";\nimport {\n  ProgramItem as ProgramItemType,\n  ChannelItem as IChannelItem,\n  ChannelWithPosition,\n  BaseTimeFormat as BaseTimeFormatType,\n  DragMouseUp,\n  ResizeMouseUp,\n  DateTime,\n} from \"./helpers/types\";\n\n// Types\nexport type Channel = ChannelWithPosition;\nexport type ChannelItem = IChannelItem;\nexport type CurrentTimeIndicator = ICurrentTimeIndicator;\nexport type Line = ILine;\nexport type Program = IProgram;\nexport type ProgramItem = {\n  program: ProgramItemType;\n  isRTL: boolean;\n  isVerticalMode: boolean;\n  isBaseTimeFormat: BaseTimeFormatType;\n  liveRefreshTime: number;\n  mode: Mode;\n  startDate: DateTime;\n  snap?: Snap;\n  dnd: DragAndDrop;\n  dayWidth: number;\n  itemHeight: number;\n  contentHeight: number;\n  hourWidth: number;\n  dragMouseUp: (data: DragMouseUp) => void;\n  resizeMouseUp: (data: ResizeMouseUp) => void;\n};\nexport type GridItemProps = IGridItemProps;\nexport type GridDividerItemProps = IGridDividerItemProps;\n\nexport type Timeline = ITimeline;\nexport type Theme = ITheme;\nexport type GridCell = Omit<IGridCell, \"id\">;\n\n// Components\nexport { Layout, CurrentTime } from \"./components\";\nexport { Epg } from \"./Epg\";\nexport { useEpg, useProgram, useTimeline, useGridExternalDnD } from \"./hooks\";\n\n// Styles\nconst { ChannelWrapper: ChannelBox, ChannelLogo } = ChannelStyled;\n\nconst { CurrentTimeBox, CurrentTimeContent } = CurrentTimeStyled;\n\nconst { GridItem, GridDivider } = GridStyled;\n\nconst {\n  ProgramBox,\n  ProgramContent,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n  ProgramResizeHandle,\n} = ProgramStyled;\n\nconst {\n  TimelineWrapper,\n  TimelineBox,\n  TimelineTime,\n  TimelineDivider: TimelineDividerStyled,\n  TimelineDividers,\n  TimelineWeekMonthBox,\n  TimelineWeekMonthDate,\n} = TimelineStyled;\n\nexport {\n  // Channel\n  ChannelBox,\n  ChannelLogo,\n  // CurrentTime\n  CurrentTimeBox,\n  CurrentTimeContent,\n  // Program\n  ProgramBox,\n  ProgramContent,\n  ProgramFlex,\n  ProgramStack,\n  ProgramTitle,\n  ProgramText,\n  ProgramImage,\n  ProgramResizeHandle,\n  // Timeline\n  TimelineWrapper,\n  TimelineBox,\n  TimelineWeekMonthBox,\n  TimelineWeekMonthDate,\n  TimelineTime,\n  TimelineDividers,\n  // Grid\n  GridItem,\n  GridDivider,\n};\n\nexport const TimelineDivider = TimelineDividerStyled;\n","import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { startOfDay } from \"date-fns\";\n// Import interfaces\nimport { HoursInDayDiffTime } from \"../helpers/interfaces\";\n// Import types\nimport { DateTime, InitialScrollPositions } from \"../helpers/types\";\n// Import utils\nimport { getNewDateTz } from \"../utils/time\";\n// Import helpers\nimport {\n  DEBOUNCE_WAIT,\n  DEBOUNCE_WAIT_MAX,\n  getHoursInDaysPositionX,\n  getPositionX,\n  useIsomorphicLayoutEffect,\n} from \"../helpers\";\n\ninterface useLayoutProps {\n  isVerticalMode: boolean;\n  isToday: boolean;\n  isInitialScrollToNow: boolean;\n  initialScrollPositions: InitialScrollPositions;\n  height?: number;\n  width?: number;\n  hourWidth: number;\n  sidebarWidth: number;\n  channelsNumber: number;\n  startDate: DateTime;\n  endDate: DateTime;\n  currentDate: string;\n  hoursInDays: HoursInDayDiffTime[];\n}\n\nexport function useLayout({\n  isVerticalMode,\n  isToday,\n  isInitialScrollToNow,\n  initialScrollPositions,\n  height,\n  width,\n  channelsNumber,\n  startDate,\n  endDate,\n  hourWidth,\n  sidebarWidth,\n  hoursInDays,\n}: useLayoutProps) {\n  const useIsomorphicEffect = useIsomorphicLayoutEffect();\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  //-------- State --------\n  const [scrollY, setScrollY] = React.useState<number>(0);\n  const [scrollX, setScrollX] = React.useState<number>(0);\n  const [layoutWidth, setLayoutWidth] = React.useState<number>(width as number);\n  const [layoutHeight, setLayoutHeight] = React.useState<number>(\n    height as number\n  );\n  //-------- Variables --------\n  const scrollBoxInnerHeight = scrollBoxRef?.current?.scrollHeight;\n\n  const initialScrollPositionsSerialized = JSON.stringify(\n    initialScrollPositions\n  );\n\n  // -------- Handlers --------\n  const handleScrollDebounced = useDebouncedCallback(\n    (value) => {\n      setScrollY(value.y);\n      setScrollX(value.x);\n    },\n    DEBOUNCE_WAIT,\n    { maxWait: DEBOUNCE_WAIT_MAX }\n  );\n\n  const handleOnScroll = React.useCallback(\n    (e: React.UIEvent<HTMLDivElement, UIEvent> & { target: Element }) => {\n      handleScrollDebounced({ y: e.target.scrollTop, x: e.target.scrollLeft });\n    },\n    [handleScrollDebounced]\n  );\n\n  const hoursInDaysSerialized = JSON.stringify(hoursInDays);\n  const areHoursInDays = React.useMemo(\n    () => hoursInDays.length > 0,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [hoursInDaysSerialized]\n  );\n  const handleOnScrollToNow = React.useCallback(\n    () => {\n      if (scrollBoxRef?.current && isToday) {\n        const clientWidth = (width ??\n          containerRef.current?.clientWidth) as number;\n\n        const date = new Date(startDate);\n        let positionX = getPositionX(\n          startOfDay(date),\n          getNewDateTz(),\n          startDate,\n          endDate,\n          hourWidth\n        );\n\n        if (areHoursInDays) {\n          positionX = getHoursInDaysPositionX({\n            hoursInDays,\n            hourWidth,\n            sidebarWidth,\n          });\n        }\n\n        const scrollNow = positionX - clientWidth / 2 + sidebarWidth;\n\n        if (isVerticalMode) {\n          scrollBoxRef.current.scrollTop = scrollNow + hourWidth;\n        } else {\n          scrollBoxRef.current.scrollLeft = scrollNow;\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      isVerticalMode,\n      isToday,\n      areHoursInDays,\n      width,\n      hourWidth,\n      sidebarWidth,\n      startDate,\n      endDate,\n    ]\n  );\n\n  const handleScrollToInitialPositions = React.useCallback(\n    () => {\n      const isInitialScrollPosition = Object.keys(\n        initialScrollPositions\n      ).length;\n      if (scrollBoxRef?.current && isInitialScrollPosition) {\n        const { top = 0, left = 0 } = initialScrollPositions;\n        scrollBoxRef.current.scrollTo({ behavior: \"smooth\", top, left });\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [initialScrollPositionsSerialized, scrollBoxInnerHeight]\n  );\n\n  const handleOnScrollTop = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const top = scrollBoxRef.current.scrollTop + value;\n        scrollBoxRef.current.scrollTop = top;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleOnScrollRight = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const right = scrollBoxRef.current.scrollLeft + value;\n        scrollBoxRef.current.scrollLeft = right;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleOnScrollLeft = React.useCallback(\n    (value: number = hourWidth) => {\n      if (scrollBoxRef?.current) {\n        const left = scrollBoxRef.current.scrollLeft - value;\n        scrollBoxRef.current.scrollLeft = left;\n      }\n    },\n    [hourWidth]\n  );\n\n  const handleResizeDebounced = useDebouncedCallback(\n    () => {\n      if (containerRef?.current && !width) {\n        const container = containerRef.current;\n        const { clientWidth } = container;\n        setLayoutWidth(clientWidth);\n      }\n    },\n    DEBOUNCE_WAIT * 4,\n    { maxWait: DEBOUNCE_WAIT_MAX * 4 }\n  );\n\n  const handleCheckIsLayoutBottom = React.useCallback(\n    (offset: number = 0) => {\n      if (scrollBoxRef?.current) {\n        if (isVerticalMode) {\n          // Check if the scroll is at the bottom in scrollBox in vertical mode\n          const { scrollWidth, scrollLeft, clientWidth } = scrollBoxRef.current;\n          if (scrollLeft === 0) return false;\n          return scrollWidth - scrollLeft - offset <= clientWidth;\n        } else {\n          // Check if the scroll is at the bottom in scrollBox\n          const { scrollHeight, scrollTop, clientHeight } =\n            scrollBoxRef.current;\n          if (scrollTop === 0) return false;\n          return scrollHeight - scrollTop - offset <= clientHeight;\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isVerticalMode, scrollX, scrollY, channelsNumber]\n  );\n\n  const handleCheckIsLayoutRight = React.useCallback(\n    (offset: number = 0) => {\n      if (scrollBoxRef?.current) {\n        if (isVerticalMode) {\n          // Check if the scroll is at the right in scrollBox in vertical mode\n          const { scrollHeight, scrollTop, clientHeight } =\n            scrollBoxRef.current;\n          if (scrollTop === 0) return false;\n          return scrollHeight - scrollTop - offset <= clientHeight;\n        } else {\n          // Check if the scroll is at the right in scrollBox\n          const { scrollWidth, scrollLeft, clientWidth } = scrollBoxRef.current;\n          if (scrollLeft === 0) return false;\n          return scrollWidth - scrollLeft - offset <= clientWidth;\n        }\n      }\n      return false;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [scrollX, scrollY, channelsNumber]\n  );\n\n  // -------- Effects --------\n  useIsomorphicEffect(() => {\n    if (containerRef?.current) {\n      const container = containerRef.current;\n      if (!width) {\n        const { clientWidth } = container;\n        setLayoutWidth(clientWidth);\n      }\n      if (!height) {\n        const { clientHeight } = container;\n        setLayoutHeight(clientHeight);\n      }\n    }\n  }, [height, width, startDate]);\n\n  useIsomorphicEffect(() => {\n    const isInitialScrollPosition = Object.keys(initialScrollPositions).length;\n    if (scrollBoxRef?.current) {\n      if (isInitialScrollPosition) {\n        handleScrollToInitialPositions();\n      } else if (isInitialScrollToNow) {\n        handleOnScrollToNow();\n      }\n    }\n  }, [isToday, isInitialScrollToNow, initialScrollPositionsSerialized]);\n\n  useIsomorphicEffect(() => {\n    window.addEventListener(\"resize\", handleResizeDebounced);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeDebounced);\n    };\n  }, [width]);\n\n  return {\n    containerRef,\n    scrollBoxRef,\n    scrollX,\n    scrollY,\n    layoutWidth,\n    layoutHeight,\n    isLayoutBottom: handleCheckIsLayoutBottom,\n    isLayoutRight: handleCheckIsLayoutRight,\n    onScroll: handleOnScroll,\n    onScrollToNow: handleOnScrollToNow,\n    onScrollTop: handleOnScrollTop,\n    onScrollLeft: handleOnScrollLeft,\n    onScrollRight: handleOnScrollRight,\n  };\n}\n"],"names":["Layers","globalStyles","css","_templateObject","_taggedTemplateLiteralLoose","generateArray","num","Array","fill","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","getDate","date","Date","abs","Math","convertDate","newDate","replace","toDate","switchPosition","programPosition","_extends","top","left","width","height","LayoutScreenCloneCache","setChannel","event","data","channelUuid","updateLayoutScreenCloneElement","channelEpgIndexesCache","setChannelEpgIndexes","_ref","uuid","_ref$first","first","_ref$last","last","getChannelEpgIndexes","channelsGroupTreeCache","getChannelsGroupTree","timezoneOptionsCache","enabled","zone","mode","getTimezoneOptionsCache","getNewDateTimeTz","timezone","utcToZonedTime","getTime","getNewDateTz","formatTz","formatTime","zonedTime","tzFormat","timeZone","fnsFormat","zonedDateTimeToUtc","zonedTimeToUtc","getItemDiffWidth","diff","hourWidth","getPositionX","since","till","startDate","endDate","isTomorrow","isYesterday","diffTime","differenceInMinutes","roundToMinutes","getLiveStatus","nowTime","sinceTime","sinceTill","format","formatTimeTz","roundToNearestMinutes","getTodayHoursInDays","hoursInDays","filter","item","isWithinInterval","start","startTimeHour","end","endTimeHour","length","getHoursInDaysPositionX","_ref3","sidebarWidth","cb","day","startOfDay","prevItemDiffInHours","generateDayHours","isBaseTimeFormat","dayIndex","days","from","_","i","timeFormat","parse","generateTimelineSlots","modeType","options","rest","_objectWithoutPropertiesLoose","_excluded","generateWeekTimelineSlots","generateMonthTimelineSlots","getDayHoursTimeSlots","getDayTimeSlots","numberOfDays","reduce","acc","hours","hoursInDay","sliced","slice","startTime","endTime","concat","_ref2","numberOfHoursInDay","offsetStartHoursRange","map","_ref4","months","numberOfMonths","getTimelineMonthsWidth","_ref5","weekDayWidth","month","index","getDaysInMonth","push","offsetLeft","getOverlapCount","program","overlapArray","_step","sinceB","tillB","overlapCount","_iterator","_createForOfIteratorHelperLoose","done","otherProgram","value","id","sinceOther","tillOther","getOverlapProgramOptions","channelOverlapsCount","_program","position","channelPosition","overlapTimes","newProgram","overlapTop","newChannelOverlapsCount","_step2","levelTop","overlapsOnLevel","overlapsOnLevelUp","_iterator2","overlapPosition","setChannelOverlapCount","programA","channelOverlaps","getOverlaps","isVerticalMode","itemOverlaps","programs","_step3","overlaps","_iterator3","_loop","_programA$data","sinceA","tillA","parentChannelUuid","_programA$data2","channelGroupTree","isOpen","_loop2","programB","j","overlapLinkedId","isElementAExist","some","el","isElementBExist","channelOverlapsLength","_getOverlapProgramOpt","_getOverlapProgramOpt2","_getOverlapProgramOpt3","calculateItemDragSinceTill","props","initialPositionLeft","initialWidth","minDiff","startDateTime","diffHours","tillDiffHours","getResizeTill","newSince","newTill","utcDateSince","utcDateTill","toISOString","getFormattedDndDate","addMinutes","getClickGridItemData","newPosition","isDrop","_ref2$isDrop","grid","dayWidth","timelineDividers","dataAttributes","channel","isDayMode","type","edgeEnd","timeSlots","itemClickProps","gridItemProps","getDividerGridProps","onGridItemDrop","onGridItemClick","floor","dayTimeSlots","time","sinceTimeInHours","tillTimeInHours","newTillMin","Container","_styled","target","Wrapper","name","styles","ScrollBox","theme","primary","isRTL","scrollbar","thumb","bg","_ref6","white","_ref7","_ref8","_ref9","_ref10","Box","_ref11","_ref11$top","_ref12","EpgCornerBox","_ref13","_ref13$left","Content","_ref14","isSidebar","_ref15","contentHeight","_ref16","_ref17","_ref18","isTimeline","timelineHeight","LayoutBg","_ref19","_ref20","_ref21","_ref22","bottom","_templateObject2","_templateObject3","Sidebar","ChannelWrapper","groupTree","ChannelLogo","ProgramContent","Program","gradient","blue","isLive","ProgramFlex","Elipsis","ProgramTitle","grey","ProgramText","text","ProgramImage","ProgramStack","ProgramBox","isDragging","isResizing","ProgramResizeHandle","green","isResize","TimelineTime","isWeekMonthMode","isNewDay","teal","TimelineWeekMonthDate","styleType","TimelineDividers","_templateObject4","TimelineDivider","timeline","divider","_templateObject5","TimelineWrapper","_templateObject6","Timeline","_templateObject7","_templateObject8","TimelineBox","_templateObject9","_templateObject10","_templateObject11","isCurrentTime","areHoursInDays","isTodayInHoursInDays","isToday","TimelineWeekMonthBox","_templateObject12","_templateObject13","_templateObject14","lineStyles","LineBox","zIndex","loader","Loader","Shape","color","marginRight","animate","keyframes","right","transition","duration","_transition$ease","ease","_transition$delay","delay","boxStyles","_temp","CurrentTimeBox","CurrentTimeContent","AreaFiled","isClickable","Area","positionX","AreaBg","AreaAnnotation","_ref2$isLeft","isLeft","GridContainer","GridItem","isHoverHighlight","highlight","isDragOver","isItemClickable","GridDivider","600","900","300","100","200","purple","pink","border","500","defaultStartDateTime","startOfToday","defaultMode","style","defaultTimezone","defaultOverlap","layerOverlapLevel","defaultGrid","hoverHighlight","defaultDnd","useInterval","callback","useIsomorphicEffect","savedCallback","React","useRef","current","setInterval","clearInterval","useIsTouchDevice","_React$useState","useState","isMobile","setIsMobile","checkDevice","iOS","test","navigator","userAgent","includes","document","androidOrWebOS","isMobileDevice","isTouchScreen","maxTouchPoints","matchMedia","matches","addEventListener","removeEventListener","useProgram","_ref$isVerticalMode","_ref$isRTL","_ref$isResize","itemHeight","_ref$minWidth","minWidth","liveRefreshTime","snap","dnd","dragMouseUp","resizeMouseUp","elementRef","setIsLive","initialPosition","_useResize","snapX","mouseUpCb","isClicked","isMouseMove","isTouchDevice","_useState","isPreventScroll","setIsPreventScroll","_useState2","setIsResizing","_useState3","isResizingLeft","setIsResizingLeft","_useState4","isResizingRight","setIsResizingRight","_useState5","mouseOffsetX","setMouseOffsetX","_useState6","x","y","setPosition","_useState7","startY","lastY","startX","lastX","coords","setCoords","useMemo","handleMouseDown","useCallback","e","stopPropagation","touches","pageY","pageX","clientY","clientX","handleMouseClick","preventDefault","handleMouseUp","_elementRef$current","_elementRef$current2","_elementRef$current3","_elementRef$current4","_elementRef$current5","_elementRef$current6","offsetTop","offsetHeight","offsetWidth","initialPositionTop","setTimeout","initialPositionSerialized","JSON","stringify","handleMouseMove","element","elementRect","getBoundingClientRect","_elementRef$current7","nextY","snapYTop","round","newHeightTop","newHeightBottom","isInRightLayout","prev","_elementRef$current8","nextX","snapXLeft","newWidthLeft","newWidthRight","mouseMoveEvent","mouseUpEvent","passive","undefined","getEvents","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","currentPositionX","resizeEvents","resources","ref","eventsLeft","onClick","eventsRight","useResize","resizeCurrentPositionX","resizeWidth","dndMouseUpCb","newTime","_dnd$onDnDMouseUp","onDnDMouseUp","_useDrag","isDndEnabled","isDndMutlirows","dndSnapX","_props$dndSnapY","dndSnapY","setIsDragging","_asyncToGenerator","_regeneratorRuntime","mark","_callee","optionsYX","optionsY","wrap","_context","next","sent","stop","elementChannel","nextYValue","nextXSnap","nextXValue","nextYSnap","dndEvents","useDrag","obj","result","_len","arguments","_key","_i","_props","property","omit","formatType","set12HoursTimeFormat","getRTLSinceTime","status","isMinWidth","getMouseEvents","isMouseEvent","getMouseEventTempTime","_calculateItemDragSin","formatTempTime","toLowerCase","getRTLTillTime","useTimeline","renderCurrentTime","isMonthMode","monthsWidth","dividers","formatWeekMonthDate","dateFormat","getFormattedWeekMonthDate","baseDate","getDayMonthName","getTimelineProps","getCurrentTimeProps","useLine","showLine","setShowLine","_React$useState2","setPositionX","timezoneSerialized","hoursInDaysSerialized","liveIntervalTime","isDayEnd","positionOffset","newPositionX","useGridExternalDnD","onItemDrop","dropAreaRef","setIsDragOver","handleDrop","droppedItemId","dataTransfer","getData","droppedItem","getElementById","attributes","attribute","startsWith","handleDragEnter","handleDragLeave","onDrop","onDragEnter","onDragLeave","GridStyled","GridDividerItem","dividerProps","onItemClick","restProps","_useGridExternalDnD","className","key","GridCellItem","renderGridCell","overlapsCount","_channelOverlapsCount","isVisible","isProgramVisible","gridItemClickProps","gridItemDnDProps","gridDividerProps","timelineDividerArray","Grid","gridItems","_useGrid","useGrid","renderGridItem","EpgStyled","Layout","forwardRef","scrollBoxRef","timeProps","scrollY","channels","programOverlaps","areas","overlap","overlapMode","monthWidth","_props$isVerticalMode","_props$isRTL","_props$isSidebar","_props$isTimeline","_props$isLine","isLine","_props$isBaseTimeForm","_props$isCurrentTime","_props$isResize","openChannelGroupTree","onLayoutBgClick","onScroll","isChannelVisible","isTimelineVisible","renderProgram","renderChannel","renderTimeline","renderLine","channelsLength","programsOverlapsLength","Object","keys","programOverlapsSerialized","getChannelsContentHeight","showAreas","isFuture","Line","Areas","Channels","_data$fixedVisibility","fixedVisibility","setLayoutScreenCloneElement","linkedProgramOverlaps","programOverlapIndex","findIndex","overlapProgram","newTop","isOverlap","_program$position","getProgramOptions","deleteLayoutScreenCloneElement","renderPrograms","ProgramStyled","_useProgram","image","title","tillTime","tempTime","src","alt","ChannelsStyled","channelWithPosition","getChannelVerticalPosition","newChannel","_channelNestedGroupTr","_channelNestedGroupTr2","nestedChildren","isFirstNestedChild","isLastNestedChild","getChanelGroupTree","_channelsGroupTree","channelsGroupTree","channelNestedGroupTree","_channel$parentChanne","at","getChannelGroupTreeProps","groupEventProps","onOpenGroupTree","Channel","ChannelStyled","logo","_onOpenGroupTree","CurrentTimeStyled","CurrentTime","_useLine","_useCurrentTime","baseTime","getCurrentTimeStyles","_boxStyles","commonStyles","useCurrentTime","TimelineStyled","_useTimeline","isModernStyle","renderWeekMonth","_getTime","renderDividers","renderDay","renderTimelineItems","LineStyled","getLineStyles","LoaderStyled","Element","display","justifyContent","marginBottom","AreaStyled","areasSerialized","_useAreas","area","areaStartDate","areaEndDate","_area$endDate","intervalOptions","showArea","areaFieldStyles","areaBgStyles","getAreasFields","renderAreaAnnotation","Fragment","annotations","_props$areaBgStyles","annotationProps","_annotations$styles","textStart","textEnd","renderArea","Epg","containerRef","children","customGlobalStyles","_ref$isSidebar","_ref$isTimeline","_ref$isLoading","isLoading","LoaderComponent","blankSpaceStyles","ThemeProvider","Global","WrapperDnD","gridElement","querySelector","onDragOver","onDragLeaveCapture","_props$isInitialScrol","isInitialScrollToNow","channelsEpg","epg","_props$startDate","startDateInput","_props$endDate","endDateInput","_props$hoursInDays","customHoursInDays","_props$initialScrollP","initialScrollPositions","_props$liveRefreshTim","_props$timelineDivide","_props$mode","customMode","_props$overlap","customOverlap","_props$timezone","_props$areas","_props$grid","_props$dnd","customTheme","_props$dayWidth","customDayWidth","_props$sidebarWidth","_props$timelineHeight","customTimelineHeight","_props$itemHeight","_props$itemOverscan","itemOverscan","_props$channelMapKey","channelMapKey","_props$programChannel","programChannelMapKey","isOverlapEnabled","isMultirowsDnd","_getTimeRangeDates","endDateValue","addDays","getTimeRangeDates","serializedHoursInDays","itemsDiffInHours","diffLeft","prevItem","differenceInHours","diffInHours","Number","getNumberOfHoursInDays","_React$useMemo","startDateFormat","endDateFormat","modeIncrementValue","diffDays","differenceInDays","startToEndInterval","eachDayOfInterval","eachMonthOfInterval","dates","isTodayFns","currentDate","indexOf","getDayResources","daysResources","_React$useMemo2","defaultOptions","endDateTime","console","error","endOfMonthTime","startOfMonth","addMonths","numberOfMonthInMonthMode","differenceInMonths","numberOfDaysInWeekMode","newDayWidthInWeekMode","curr","newDayWidth","getDayWidthResources","dayWidthResourcesProps","_excluded2","_React$useReducer","useReducer","update","setForceUpdate","_React$useReducer2","updateChannels","setForceChannelsUpdate","dndChannelUuid","setDndChannelUuid","newOverlaps","setNewOverlaps","_React$useState3","setOverlaps","_React$useState4","setChannelOverlapsCount","setTimezoneOptionsCache","_useLayout","channelsNumber","setScrollY","scrollX","setScrollX","layoutWidth","setLayoutWidth","layoutHeight","setLayoutHeight","scrollBoxInnerHeight","_scrollBoxRef$current","scrollHeight","initialScrollPositionsSerialized","handleScrollDebounced","useDebouncedCallback","maxWait","handleOnScroll","scrollTop","scrollLeft","handleOnScrollToNow","_containerRef$current","clientWidth","scrollNow","handleScrollToInitialPositions","isInitialScrollPosition","_initialScrollPositio","_initialScrollPositio2","scrollTo","behavior","handleOnScrollTop","handleOnScrollRight","handleOnScrollLeft","handleResizeDebounced","DEBOUNCE_WAIT","DEBOUNCE_WAIT_MAX","handleCheckIsLayoutBottom","offset","_scrollBoxRef$current2","scrollWidth","_scrollBoxRef$current3","clientHeight","handleCheckIsLayoutRight","_scrollBoxRef$current4","_scrollBoxRef$current5","container","isLayoutBottom","isLayoutRight","onScrollToNow","onScrollTop","onScrollLeft","onScrollRight","useLayout","layoutProps","_excluded3","getTimelineHeight","channelsEpgSerialized","channelOverlapsCountSerialized","isStackMode","isLayerMode","setChannelGroupTree","nestedChildUuid","_channel$nestedChildr","setChannelGroupTreeNestedChildren","largestSizeLength","overlapsLength","channelIndex","getChannelPosition","getConvertedChannels","channelsSerialized","overlapsSerialized","_React$useMemo3","arr","_arr","_channels$channelInde3","_channels$channelInde","_channels$channelInde2","programData","isYesterdayTime","getProgramPosition","newPositionTop","find","getProgramPositionWithDayHours","getConvertedPrograms","_checkOverlaps","channelEpgIndexes","_extends2","slicedOverlapsPrograms","dndChannelUuidIndex","_Object$keys","_overlaps$next","_overlaps$next2","slicedPrograms","getChannelEpdIndexesProgramSliced","_step4","Map","_iterator4","has","set","get","fromEntries","getChannelProgramSliced","_Object$keys2","checkOverlaps","itemsOverlaps","dayWidthResources","numberOfSlots","flatMap","getGridItemPosition","getConvertedGridItems","defaultTheme","containerHeight","containerWidth","_overlapsCount","getItemVisibility","getSidebarItemVisibility","getTimelineItemVisibility","dndOnSuccessCb","onDnDSuccess","checkChannelTopOutRange","isChannelTopInRange","isChannelTopOutRange","newChannelRange","_x","apply","handleGetLayoutData","events","handleOpenChannelGroupTree","getEpgProps","getLayoutProps","getLayoutData","getDropItemData","parts","generateRandomHex","random","substring","endOfDay","setUpdatedLayoutItem"],"mappings":"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"}